from typing import Any, Dict, List, Tuple

COMMANDS: Dict[str, Dict[int, Dict[int, List]]]
COMMANDS_BANK_ID_BY_TYPE_NAME: Dict[Tuple[str, Any], List[int]]
TEST_FUNCTIONS: Dict[str, Dict[int, List]]
TEST_FUNCTIONS_ID_BY_TYPE_NAME: Dict[Tuple[str, Any], int]
ATTACK_REQUEST_TYPE: Dict[int, str]


# COMMANDS

# chr
def ChangeGeneralAnim(anim_id: int, layer_index: int, blend: float, is_loop: int): ...
def ChangeUpperBodyAnim(): ...
def ChangeStayAnim(): ...
def ChangeGeneralAnimCategorized(anim_category, anim_id, layer_index, blend, is_loop): ...
def ChangeUpperBodyAnimCategorized(): ...
def ChangeGeneralAnimAdditiveCategorized(): ...
def ChangeUpperBodyAnimAdditiveCategorized(): ...
def ChangeGeneralAnimCategorizedMatchPlaybackTime(): ...
def ChangeUpperBodyAnimCategorizedMatchPlaybackTime(): ...
def SetAnimIDOffset(): ...
def SetAdditiveBlendAnimation(): ...
def SetAdditiveBlendAnimationSlotted(): ...
def ChangeBlendAnimationCategorized(): ...
def ChangeUpperAndLowerBodySyncedAnimCategorized(): ...
def SwitchActiveActionState(): ...
def SwitchMotion(): ...
def SetThrowAttackTypePossible(): ...
def SetThrowDefenseTypePossible(): ...
def SwitchEquippedWeapon(): ...
def SetReadyForAtkFinish(): ...
def SetEquipmentChangeable(): ...
def SetUnableToDrop(): ...
def IssueMessageIDToEvents(): ...
def SetAttackType(): ...
def SetNoStaminaRecover(): ...
def Command_1_111(): ...  # TODO
def SetAIBusyDoingAction(): ...
def BowTurn(): ...
def SetIsHoldingBow(): ...
def SwitchSpecificRangeMode(): ...
def SwitchSpecialMotion(): ...
def SetIsWeaponChanging(): ...
def SetIsItemInUse(): ...
def SetIsItemAnimPlaying(): ...
def RemoveBinoculars(): ...
def SetIsMagicInUse(): ...
def IsHeadTurnPossible(): ...
def ChangeHoveringState(): ...
def ChangeToSpecialStay(): ...
def OpenMenuWhenUsingItem(): ...
def OpenMenuWhenUsingMagic(): ...
def BlowDamageTurn(): ...
def SetDeathStay(): ...
def CloseMenuWhenUsingItem(): ...
def CloseMenuWhenUsingMagic(): ...
def AdditionNoTurning(): ...
def WhiffPossibility(): ...
def ChangeFlightStatus(): ...
def SetStatsNotMetAnimID(): ...
def ShowFixedYAxisDirectionDisplay(): ...
def SetLadderActionState(): ...
def ForceCancelThrowAnim(): ...
def SetThrowState(): ...
def LadderSlideStart(): ...
def SetIsEventActionPossible(): ...
def RequestThrowAnimInterrupt(): ...
def SetHandStateOfLadder(): ...
def SetDamageAnimType(): ...
def SlideTurn(): ...
def InterruptAttack(): ...
def MidairDeathWarp(): ...
def ClearSlopeInfo(): ...
def StateInputRecieve(): ...
def EquipmentChangeableFromMenu(): ...
def SetVariable(): ...
def AimAtSelfPosition(): ...
def StateIdentifier(): ...
def DoAIReplanningAtCancelTiming(): ...
def DenyEventAnimPlaybackDemand(): ...
def InvokeBackstab(): ...
def WeaponParamReferent(): ...
def AINotifyAttackType(): ...
def SetAutoTrapTarget(): ...
def ClearAutoTrapTarget(): ...
def AddHP(amount): ...
def AddStamina(amount): ...
def SyncAtInit_Active(): ...
def SyncAtInit_Passive(): ...
def SetIsTurnAnimInProgress(): ...
def CalculateTurnAnimCorrectionFactor(): ...
def SetStealthState(): ...
def SetMoveMult(): ...
def SpEffectAccomodation(): ...
def StealthyHighSpeedThrowEffective(): ...
def SetTurnSpeed(): ...
# These are likely only added in Dark Souls 3.
def SetCeremonyState(): ...
def SetDamageMotionBlendRatio(): ...
def SetForceTurnTarget(): ...
def InSpecialGuard(): ...
def SetWeaponCancelType(): ...
def IsPreciseShootingPossible(): ...
def ChooseBowAndArrowSlot(): ...
def Set4DirectionMovementThreshold(): ...
def LockonSystemUnableToTurnAngle(): ...
def ReserveArtsPointsUse(): ...
def SetArtsPointFEDisplayState(): ...
def LockonFixedAngleCancel(): ...
# End of DS3 only.
def TurnToLockonTargetImmediately(): ...
def SetSpecialInterpolation(): ...
def LadderSlideDownCancel(): ...
def DisableMagicIDSwitching(): ...
def DisableToolIDSwitching(): ...
def DebugLogOutput(text): ...
# These are likely only added in Dark Souls 3.
def Test_SpEffectDelete(): ...
def Test_SpEffectTypeSpecifyDelete(): ...
def AnimationCancel(): ...
def RequestAIReprogramming(): ...
def MarkOfGreedyPersonSlipDamageDisable(): ...
def ResetInputQueue(): ...
def SetIsEventAnim(): ...
def AIAttackState(): ...
# End of DS3 only.


# talk
def DebugEvent(*args): ...
def TalkToPlayer(*args): ...
def InvokeEvent(*args): ...
def StopAttacking(*args): ...
def Attack(*args): ...
def RemoveMyAggro(*args): ...
def DisplayOneLineHelp(*args): ...
def TurnToFacePlayer(*args): ...
def ForceEndTalk(*args): ...
def ClearTalkProgressData(*args): ...
def ShowShopMessage(*args): ...
def SetFlagState(flag: int, state: int): ...
def CloseShopMessage(*args): ...
def OpenCampMenu(*args): ...
def CloseCampMenu(*args): ...
def ChangeTeamType(*args): ...
def SetDefaultTeamType(*args): ...
def OpenGenericDialog(unk1: int, text_id: int, unk2: int, unk3: int, display_distance: int): ...
def ForceCloseGenericDialog(*args): ...
def AddTalkListData(menu_index: int, menu_text: int, required_flag: int): ...
def ClearTalkListData(*args): ...
def RequestMoviePlayback(*args): ...
def OpenRegularShop(*args): ...
def OpenRepairShop(*args): ...
def OpenEnhanceShop(*args): ...
def OpenHumanityMenu(*args): ...
def OpenMagicShop(*args): ...
def OpenMiracleShop(*args): ...
def OpenMagicEquip(*args): ...
def OpenMiracleEquip(*args): ...
def OpenRepository(*args): ...
def OpenSoul(*args): ...
def CloseMenu(*args): ...
def SetEventFlagRange(*args): ...
def OpenDepository(*args): ...
def ClearTalkActionState(*args): ...
def ClearTalkDisabledState(*args): ...
def SetTalkDisableStateMaxDuration(*args): ...
def SetUpdateDistance(distance: int): ...
def ClearPlayerDamageInfo(*args): ...
def OfferHumanity(*args): ...
def StartWarpMenuInit(*args): ...
def StartBonfireAnimLoop(*args): ...
def EndBonfireKindleAnimLoop(*args): ...
def OpenSellShop(*args): ...
def ChangePlayerStats(*args): ...
def OpenEquipmentChangeOfPurposeShop(*args): ...
def CombineMenuFlagAndEventFlag(*args): ...
def RequestSave(*args): ...
def ChangeMotionOffsetID(*args): ...
def PlayerEquipmentQuantityChange(*args): ...
def RequestUnlockTrophy(*args): ...
def EnterBonfireEventRange(*args): ...
def SetAquittalCostMessageTag(*args): ...
def SubtractAcquittalCostFromPlayerSouls(*args): ...
def ShuffleRNGSeed(*args): ...
def SetRNGSeed(*args): ...
def ReplaceTool(*args): ...
def BreakCovenantPledge(*args): ...
def PlayerRespawn(*args): ...
def GiveSpEffectToPlayer(speffect: int): ...
def DisplayBanner(banner_type: int): ...
def AddIzalithRankingPoints(*args): ...
def OpenItemAcquisitionMenu(*args): ...
def AcquireGesture(*args): ...
def ForceCloseMenu(*args): ...
def SetTalkTime(*args): ...
def CollectJustPyromancyFlame(*args): ...
def OpenArenaRanking(*args): ...
def ReportConversationEndToHavokBehavior(*args): ...
def Command_talk_1_72(*args): ...  # TODO
def Command_talk_1_75(*args): ...  # TODO
def OpenConversationChoicesMenu(*args): ...
def StopEventAnimWithoutForcingConversationEnd(*args): ...
def OpenCharaMakeMenu(*args): ...
def OpenChooseQuantityDialog(*args): ...
def ClearQuantityValueOfChooseQuantityDialog(*args): ...
def SetWorkValue(*args): ...
def UpdatePlayerRespawnPoint(*args): ...
def SetMessageTagValue(*args): ...
def TurnCharacterToFaceEntity(*args): ...
def GetItemFromItemLot(*args): ...
def OpenEstusAllotMenu(*args): ...
def AddRankingPoints(*args): ...
def OpenHollowLevelUpMenu(*args): ...


# TEST FUNCTIONS

# chr
def IsGeneralAnimEnd(): ...
def IsAttackAnimEnd(): ...
def AnimIDOffset(): ...
def AdditiveBlendAnim(): ...
def AdditiveBlendAnimOfSlot(): ...
def IsAtkRequest(request_type): ...
def IsAtkReleaseRequest(): ...
def IsChainAtkRequest(): ...
def GetAtkDuration(): ...
def GetWeaponSwitchRequest(): ...
def GetCommandIDFromEvent(): ...
def GetAIActionType(): ...
def GetAIChainActionType(): ...
def GetChainEvadeRequest(): ...
def GetWeaponChangeRequest(): ...
def GetAnimIDFromMoveParam(): ...
def IsThereAnyAtkRequest(): ...
def IsThereAnyChainAtkRequest(): ...
def IsItemUseMenuOpening(): ...
def IsMagicUseMenuOpening(): ...
def IsItemUseMenuOpened(): ...
def IsMagicUseMenuOpened(): ...
def GetBlendAnimIDFromMoveParam(): ...
def GetAIChainStepType(): ...
def GetTransitionToSpecialStayAnimID(): ...
def GetAIAtkCancelType(): ...
def GetWeaponCancelType(): ...
def IsWeaponCancelPossible(): ...
def GetAIDefenseCancelType(): ...
def GetAIVersusBackstabCancelType(): ...
def IsFalling(): ...
def IsLanding(): ...
def GetReceivedDamageType(): ...
def IsActiveActionValid(): ...
def GetActionEventNumber(): ...
def IsNormalDmgPassThroughDuringThrow(): ...
def IsThrowing(): ...
def GetWeaponSwitchState(): ...
def IsEquipmentSwitchPossible(): ...
def IsAnimCancelPossibleInAtkRelease(): ...
def IsEmergencyStopAnimPlaying(): ...
def GetLockRangeState(): ...
def GetLockAngleState(): ...
def IsAnimCancelPossibleInDamageHit(): ...
def IsChangeToScrapeAtk(): ...
def IsChangeToDeflectAtk(): ...
def IsChangeToAfterParrySuccess(): ...
def IsChangeFromNormalToBigAtk(): ...
def GetMovementType(): ...
def IsLargeAtkComboPossible(): ...
def IsMapActionPossible(): ...
def GetReceivedDamageDirection(): ...
def GetMapActionID(): ...
def GetFallHeight(): ...
def GetEquipWeaponCategory(): ...
def IsHoldingBow(): ...
def GetMagicAnimType(): ...
def WasNotLargeAtk(): ...
def IsBackAtkPossible(): ...
def IsAfterParryAtkPossible(): ...
def GetItemAnimType(): ...
def IsMagicUseable(): ...
def IsItemUseable(): ...
def IsPrecisionShoot(): ...
def IsFireDamaged(): ...
def GetDamageLevel(): ...
def GetGuardLevelAction(): ...
def IsNewLeftHandAtkFromStay(): ...
def IsParryFromIdle(): ...
def IsGuardFromIdle(): ...
def IsNewLeftHandAtkFromAtkCancel(): ...
def IsParryFromAtkCancel(): ...
def IsGuardFromAtkCancel(): ...
def IsTiedUp(): ...
def IsOutOfAmmo(): ...
def IsUseCatLanding(): ...
def GetHoverMoveState(): ...
def IsTruelyLanding(): ...
def IsRightHandMagic(): ...
def IsChangeToSpecialStayAnim(): ...
def GetSpecialStayAnimID(): ...
def AcquireSpecialDamageAnimationID(): ...
def IsRunTurnAnimPlaying(): ...
def IsGenerateAction(): ...
def GetSpecialStayCancelAnimID(): ...
def HasReceivedAnyDamage(): ...
def GetMoveAnimParamID(): ...
def GetGuardLevel(): ...
def IsRequestTurnAnimStart(): ...
def IsTurningWithAnim(): ...
def IsFlying(): ...
def IsAbilityInsufficient(): ...
def GetEquipWeightRatioForFalling(): ...
def GetFlightMotionState(): ...
def GetIsWeakPoint(): ...
def GetMoveAnimBlendRatio(): ...
def GetLadderActionState(): ...
def IsInDisguise(): ...
def IsCoopWait(): ...
def IsCoop(): ...
def IsSpecialTransitionPossible(): ...
def GetLandingAnimBlendRatio(): ...
def GetThrowAnimID(): ...
def DidOpponentDieFromThrow(): ...
def HasThrowEnded(): ...
def IsThrowSelfDeath(): ...
def IsThrowSuccess(): ...
def GetGuardMotionCategory(): ...
def IsBeingThrown(): ...
def IsSelfThrow(): ...
def IsThrowDeathState(): ...
def GetNewLockState(): ...
def IsOnLadder(): ...
def GetPhysicalAttribute(): ...
def GetSpecialAttribute(): ...
def GetSpecialStayDeathAnimID(): ...
def HasReceivedAnyDamage_AnimEnd(): ...
def EggGrowth_IsHeadScratch(): ...
def EggGrowth_IsBecomeEggHead(): ...
def IsStop(): ...
def IsSomeoneOnLadder(): ...
def IsSomeoneUnderLadder(): ...
def GetLadderHandState(): ...
def DoesLadderHaveCharacters(): ...
def IsLadderRightHandStayState(): ...
def DescendingToFloor(): ...
def IsInputDirectionMatch(): ...
def IsSpecialTransition2Possible(): ...
def IsVersusDivineDamage(): ...
def IsGeneralAnimCancelPossible(): ...
def GetEventEzStateFlag(): ...
def IsLadderEventEnd(): ...
def IsReachBottomOfLadder(): ...
def IsReachTopOfLadder(): ...
def GetStateChangeType(): ...
def IsOnLastRungOfLadder(): ...
def GetWeaponDurability(): ...
def IsWeaponBroken(): ...
def IsAnimEndBySkillCancel(): ...
def EggGrowth_IsBecomeEgghead_SecondStage(): ...
def IsHamariFallDeath(): ...
def IsClient(): ...
def IsSlope(): ...
def IsSwitchState(): ...
def IsPressUpKey(): ...
def IsSpecialTurning(): ...
def GetIntValueForTest(): ...
def IsObjActInterpolatedMotion(): ...
def GetObjActTargetDirection(): ...
def GetObjActRemainingInterpolateTime(): ...
def IsGap(): ...
def GetWeaponID(): ...
def IsMovingLaterally(): ...
def IsNet(): ...
def HasBrokenSA(): ...
def IsEmergencyQuickTurnActivated(): ...
def IsDoubleChantPossible(): ...
def IsAnimOver(): ...
def ObtainedDT(): ...
def GetBehaviorID(): ...
def IsTwoHandPossible(): ...
def IsPartDamageAdditiveBlendInvalid(): ...
def IsThrowPosRealign(): ...
def GetBoltLoadingState(): ...
def IsAnimEnd(): ...
def IsTwinSwords(): ...
# These are likely only added in Dark Souls 3.
def DS3GetTurnAngleForDelayedTurn(): ...
def DS3GetThrowDefenseCount(): ...
def DS3IsEmergencyEvasionPossible(): ...
def DS3HasEnoughArtsPoints(): ...
def DS3GetEquipWeaponSpecialCategoryNumber(): ...
def DS3CheckForEventAnimPlaybackRequest(): ...
def DS3IsFemale(): ...
def DS3GetDelayTurnAngleDifference(): ...
def DS3IsDamageMotionOff(): ...
def DS3HasReachedStatsNeededForWeapon(): ...
def DS3UpperArmControlOuterAngle(): ...
def DS3UpperArmControlTopAndBottomAngle(): ...
def DS3CompleteLadderSlideDown(): ...
def DS3GetLadderRungCount(): ...
def DS3GetNumberOfRungsBelowOnLadder(): ...
def DS3GetBowAndArrowSlot(): ...
def DS3GetWeaponStorageSpotType(): ...
def DS3GetStayAnimCategory(): ...
def DS3GetWeaponSwitchState(): ...
def DS3IsEquipmentMenuOpen(): ...
def DS3GetRemainingArrowCount(): ...
# End of DS3 only.
def GetHP(): ...
def GetStamina(): ...
def IsGhost(): ...
def GetRandomInt(): ...
def GetRandomFloat(): ...
def IsUnableToDie(): ...
def IsResurrectionPossible(): ...
def IsCOMPlayer(): ...
def GetAITargetAwareState(): ...
def IsAIChangeToAwareState(): ...
def GetAITargetAwareStatePreviousFrame(): ...
def GetTestDamageAnimID(): ...
def IsInvincibleDebugMode(): ...
def WasGameLaunchedInPGTestMode(): ...
def IsTiltingStick(): ...
def DS3GetGestureRequestNumber(): ...
def DS3IsStayState(): ...
def DS3ActionRequest(): ...
def DS3ActionCancelRequest(): ...
def DS3ActionDuration(): ...
def DS3HasActionRequest(): ...
def DS3MovementRequest(): ...
def DS3MovementRequestDuration(): ...
def DS3HasThrowRequest(): ...
def DS3IsGuardCancelPossible(): ...
def DS3DoesAnimExist(): ...
def DS3GetAIMovementType(): ...
def DS3GetSpecialEffectID(): ...
def DS3IsConversationEnd(): ...
def DS3IsLocked(): ...
def DS3GetAtkDirection(): ...
def DS3GetPartGroup(): ...
def DS3GetKnockbackDistance(): ...
def DS3IsMoveCancelPossible(): ...
def DS3GetSpecialMovementType(): ...
def DS3GetGeneralTAEFlag(): ...
def DS3IsSwingHitTarget(): ...
def DS3GetCeremonyState(): ...
def DS3GetSuccessiveGuardCount(): ...
def DS3GetMinLuck(): ...
def DS3GetAccumulatedLuck(): ...
def DS3GetMaxLuck(): ...
def DS3GetMaxStamina(): ...
def DS3GetGeneralMSBParameter(): ...
def DS3IsHitWall(): ...
def DS3GetSafetyDirection(): ...
def DS3IsInCeremony(): ...
def DS3IsDoingCorpseCarryKeyframe(): ...
def DS3GetMP(): ...
def DS3IsCeremonyComplete(): ...
def DS3IsCeremonyInterrupt(): ...


# talk
def GetWhetherEnemiesAreNearby(*args): ...
def GetDistanceToPlayer() -> float: ...
def HasTalkEnded(*args): ...
def CheckSelfDeath() -> bool: ...
def IsPlayerTalkingToMe() -> bool: ...
def IsAttackedBySomeone(*args): ...
def GetSelfHP() -> int: ...  # 0 to 100
def GetDistanceFromEnemy(*args): ...
def GetRelativeAngleBetweenPlayerAndSelf() -> float: ...
def IsPlayerAttacking(*args): ...
def GetRelativeAngleBetweenSelfAndPlayer(*args): ...
def IsTalkInProgress(*args): ...
def GetTalkInterruptReason(*args): ...
def GetShopCondition(*args): ...
def GetOneLineHelpStatus(*args): ...
def GetFlagState(flag: int) -> bool: ...
def IsEquipmentIDObtained(*args): ...
def IsEquipmentIDEquipped(*args): ...
def IsFightingAlone(*args): ...
def IsClientPlayer(*args): ...
def IsCampMenuOpen(*args): ...
def IsGenericDialogOpen(*args): ...
def GetGenericDialogButtonResult(*args): ...
def GetTalkListEntryResult() -> int: ...
def IsMoviePlaying(*args): ...
def IsMenuOpen(menu_index: int) -> bool: ...
def IsCharacterDisabled(): ...
def IsPlayerDead(*args): ...
def DidYouDoSomethingInTheMenu(*args): ...
def GetStatus(*args): ...
def IsPlayerMovingACertainDistance(*args): ...
def IsTalkingToSomeoneElse(): ...
def HasDisableTalkPeriodElapsed(*args): ...
def HasPlayerBeenAttacked() -> bool: ...
def GetPlayerYDistance(*args): ...
def GetPlayerChrType(*args): ...
def CanIGoToNextTalkBlock(*args): ...
def CompareBonfireState(*args): ...
def CompareBonfireLevel(*args): ...
def CompareParentBonfire(*args): ...
def BonfireRegistration0(*args): ...
def BonfireRegistration1(*args): ...
def BonfireRegistration2(*args): ...
def BonfireRegistration3(*args): ...
def BonfireRegistration4(*args): ...
def ComparePlayerStatus(*args): ...
def RelativeAngleBetweenTwoPlayers_SpecifyAxis(*args): ...
def ComparePlayerInventoryNumber(*args): ...
def IsPlayerCurrentWeaponDamaged(*args): ...
def ComparePlayerAcquittalPrice(*args): ...
def CompareRNGValue(*args): ...
def WasWarpMenuDestinationSelected(*args): ...
def IsMultiplayerInProgress(*args): ...
def IsTalkExclusiveMenuOpen(*args): ...
def IsRankingMenuOpen(*args): ...
def GetPlayerRemainingHP(*args): ...
def CheckActionButtonArea(*args): ...
def CheckSpecificPersonTalkHasEnded(*args): ...
def CheckSpecificPersonGenericDialogIsOpen(*args): ...
def CheckSpecificPersonMenuIsOpen(*args): ...
def DoesSelfHaveSpEffect(*args): ...
def DoesPlayerHaveSpEffect(*args): ...
def GetValueFromNumberSelectDialog(*args): ...
def Command72(*args): ...  # TODO
def Command75(*args): ...  # TODO
def GetWorkValue(*args): ...
def GetEventFlagValue(*args): ...
def GetCurrentStateElapsedFrames(*args): ...
def GetCurrentStateElapsedTime(*args): ...
def GetPlayerStatus(*args): ...
def GetLevelUpSoulCost(*args): ...
def GetWhetherChrTurnAnimHasEnded(*args): ...
def GetWhetherChrEventAnimHasEnded(*args): ...
def GetItemHeldNumLimit(*args): ...
def GetCurrentAnimation(): ...
