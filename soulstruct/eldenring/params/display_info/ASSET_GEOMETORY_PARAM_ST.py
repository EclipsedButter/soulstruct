from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


ASSET_GEOMETORY_PARAM_ST = {
    "param_type": "ASSET_GEOMETORY_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "soundBankId",
            "Sound Bank ID",
            True,
            int,
            'Sound bank ID (-1: no bank, other: bank with specified ID)',
        ),
        ParamFieldInfo(
            "soundBreakSEId",
            "Sound Break SE ID",
            True,
            int,
            'Destruction sound SEID (9 digits) -1: Generated from assetId',
        ),
        ParamFieldInfo(
            "refDrawParamId",
            "Draw Param Reference ID",
            True,
            int,
            'Drawing parameter reference ID. The reference ID for the part drawing parameter .xlsm.',
        ),
        ParamFieldInfo(
            "hitCreateType",
            "Hit Create Type",
            True,
            int,
            'Sets the hit build type for static assets. Ignored for dynamic assets.',
        ),
        ParamFieldInfo(
            "behaviorType",
            "Asset Behavior Type",
            True,
            int,
            'Dynamic (all asset features available), static (light assets with limited functionality treated as old maps), partially static (partially destroyed assets)',
        ),
        ParamFieldInfo(
            "collisionType",
            "Collision Detection Type",
            True,
            int,
            'Collision detection type. You can set what the asset will hit.',
        ),
        ParamFieldInfo(
            "rainBlockingType",
            "Rain Blocking Type",
            True,
            int,
            'It is a type of rain blocking. You can set the blocking of SFX and wet expression.',
        ),
        ParamFieldInfo(
            "hp",
            "HP",
            True,
            int,
            'Durability until destruction (-1: Indestructible)',
        ),
        ParamFieldInfo(
            "defense",
            "Defence",
            True,
            int,
            'Attack power below this value is no damage',
        ),
        ParamFieldInfo(
            "breakStopTime",
            "Destruction Stop Time",
            True,
            float,
            'Time from destruction to forced stop of rigid body (do not force stop at 0)',
        ),
        ParamFieldInfo(
            "breakSfxId",
            "Destruction SFX ID",
            True,
            int,
            'SFX ID on destruction (-1: default (810030))',
        ),
        ParamFieldInfo(
            "breakSfxCpId",
            "Destruction SFX Dummy Poly ID",
            True,
            int,
            'SFX generation position at the time of destruction Damipoly ID (-1: placement position)',
        ),
        ParamFieldInfo(
            "breakLandingSfxId",
            "Destruction Landing SFX ID",
            True,
            int,
            'Object material-dependent SFX identifier that regenerates when first landing after being destroyed (-1: does not occur)',
        ),
        ParamFieldInfo(
            "breakBulletBehaviorId",
            "Destruction Bullet Behavior ID",
            True,
            int,
            'Action parameter of [bullet] at the time of destruction (-1: does not occur). Please note that there is an offset specification due to laps. ([GR] SEQ35556)',
        ),
        ParamFieldInfo(
            "breakBulletCpId",
            "Destruction Bullet Dummy Poly ID",
            True,
            int,
            'Location of [bullet] at the time of destruction Damipoli ID (-1: placement position)',
        ),
        ParamFieldInfo(
            "FragmentInvisibleWaitTime",
            "Hidden Debris - Wait Time",
            True,
            float,
            'Hidden debris Waiting time (seconds)',
        ),
        ParamFieldInfo(
            "FragmentInvisibleTime",
            "Hidden Debris - Time to Hide",
            True,
            float,
            'Time to hide debris (seconds)',
        ),
        ParamFieldInfo(
            "BreakAiSoundID",
            "Destruction AI Sound ID",
            True,
            int,
            'AI sound ID generated at the time of destruction',
        ),
        ParamFieldInfo(
            "breakItemLotType",
            "Destruction Item Lot Type",
            True,
            int,
            'A type that decides how to obtain items drawn at the time of destruction',
        ),
        ParamFieldInfo(
            "animBreakIdMax",
            "Anim Break ID Max",
            True,
            int,
            'What is the animation destruction ID from 0 to what?',
        ),
        ParamFieldInfo(
            "breakBulletAttributeDamageType",
            "Destruction Bullet Attribute Damage Type",
            True,
            int,
            'Generates a bullet if the last damage received when destroying an asset meets the conditions of this setting.',
        ),
        ParamFieldInfo(
            "isBreakByPlayerCollide:1",
            "Is Destroyed on Player Collision",
            True,
            int,
            'Broken when the player touches (0: no, 1:)',
        ),
        ParamFieldInfo(
            "isBreakByEnemyCollide:1",
            "Is Destroyed on Enemy Collision",
            True,
            int,
            'Broken when an enemy character touches (0: No, 1: Ru)',
        ),
        ParamFieldInfo(
            "isBreak_ByChrRide:1",
            "Is Destroyed by Riding",
            True,
            int,
            "Will it break if the character gets on (0: it won't break 1: it will break)",
        ),
        ParamFieldInfo(
            "isDisableBreakForFirstAppear:1",
            "Is Destroyed by Default",
            True,
            int,
            'Broken at the initial appearance of the player (0: ru, 1: no)',
        ),
        ParamFieldInfo(
            "isAnimBreak:1",
            "Is Animated Destruction",
            True,
            int,
            'Is it animation destruction (0: physical destruction, 1: animation destruction)',
        ),
        ParamFieldInfo(
            "isDamageCover:1",
            "Is Damage Transferred",
            True,
            int,
            'Whether to pass the damage to the other side when receiving damage (0: pass, 1: do not pass)',
        ),
        ParamFieldInfo(
            "isAttackBacklash:1",
            "Is Attack Backlash",
            True,
            int,
            'Do you play the attack (0: do not play, 1: play)',
        ),
        ParamFieldInfo(
            "Reserve_2:1",
            "Reserve 2",
            False,
            bit_pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "isLadder:1",
            "Is Ladder",
            True,
            int,
            'Is it a ladder (0: different, 1: yes)',
        ),
        ParamFieldInfo(
            "isMoveObj:1",
            "Is Moving Object",
            True,
            int,
            'Is it a moving object? It is a flag used for branching of movement processing at the time of multi (0: different, 1: yes)',
        ),
        ParamFieldInfo(
            "isSkydomeFlag:1",
            "Is Celestial Sphere",
            True,
            int,
            'Processing that treats the celestial sphere (player tracking, etc.) is performed (0: different, 1: yes)',
        ),
        ParamFieldInfo(
            "isAnimPauseOnRemoPlay:1",
            "Is Paused during Cutscene",
            True,
            int,
            'Do you want to stop the animation during the poly play (0: not, 1: do)',
        ),
        ParamFieldInfo(
            "isBurn:1",
            "Is Flammable",
            True,
            int,
            'Will it burn (0: not, 1:)',
        ),
        ParamFieldInfo(
            "isEnableRepick:1",
            "Is Repicked",
            True,
            int,
            'If this flag is ��, the parameter "At the time of recollection _ ***" will be used for the assets to be collected again in units of placement.',
        ),
        ParamFieldInfo(
            "isBreakOnPickUp:1",
            "Is Destroyed on Pickup",
            True,
            int,
            'If �~, play the animation at the time of collection, if ��, destroy at the time of collection (destroy in all cases including replacement)',
        ),
        ParamFieldInfo(
            "isBreakByHugeenemyCollide:1",
            "Is Destroyed by Giant Collision",
            True,
            int,
            'Broken when a giant enemy touches (0: No, 1:)',
        ),
        ParamFieldInfo(
            "navimeshFlag",
            "Pre-destruction Navmesh Flag",
            True,
            int,
            'Navigation mesh flag set from assets before destruction',
        ),
        ParamFieldInfo(
            "burnBulletInterval",
            "Burn Bullet Interval",
            True,
            int,
            'Interval (frame) to generate bullets for spreading fire',
        ),
        ParamFieldInfo(
            "clothUpdateDist",
            "Camera Distance to Update Cloth",
            True,
            float,
            'Distance from the camera to update havokCloth (0: always update)',
        ),
        ParamFieldInfo(
            "lifeTime_forRuntimeCreate",
            "Duration after Creation until Disappearance",
            True,
            float,
            'Runtime-generated time after creation until disappearance (0: does not disappear)',
        ),
        ParamFieldInfo(
            "contactSeId",
            "Contact SE ID",
            True,
            int,
            'SE ID to play when touched by a local player operated by you (-1: Do not play)',
        ),
        ParamFieldInfo(
            "repickAnimIdOffset",
            "Repick Anim ID Offset",
            True,
            int,
            'When recollecting assets with "Is there a change at the time of recollection?" In units of placement, play the uncollected / collected animation with the anime ID offset by this value.',
        ),
        ParamFieldInfo(
            "windEffectRate_0",
            "Wind Effect Rate - Before Destruction",
            True,
            float,
            'Wind coefficient (before destruction)',
        ),
        ParamFieldInfo(
            "windEffectRate_1",
            "Wind Effect Rate - After Destruction",
            True,
            float,
            'Wind coefficient (after destruction)',
        ),
        ParamFieldInfo(
            "windEffectType_0",
            "Wind Effect Type - Before Destruction",
            True,
            int,
            'Wind effect type (before destruction)',
        ),
        ParamFieldInfo(
            "windEffectType_1",
            "Wind Effect Type - After Destruction",
            True,
            int,
            'Wind effect type (after destruction)',
        ),
        ParamFieldInfo(
            "overrideMaterialId",
            "Override Material ID",
            True,
            int,
            'Asset material ID overwrite setting (-1: Do not overwrite model material ID 0 or more: Material ID overwrite) On the ladder, the material ID is reflected only with this setting',
        ),
        ParamFieldInfo(
            "autoCreateOffsetHeight",
            "Automatic Generation Height Offset",
            True,
            float,
            'Height offset of how much it floats from where the raycast hits the map when it is automatically generated [m]',
        ),
        ParamFieldInfo(
            "burnTime",
            "Burn Time",
            True,
            float,
            'Burning time (seconds) (continues to burn at 0)',
        ),
        ParamFieldInfo(
            "burnBraekRate",
            "Burn Destroy Rate",
            True,
            float,
            'Burnup threshold for switching to the ruptured state',
        ),
        ParamFieldInfo(
            "burnSfxId",
            "Burn SFX ID [0]",
            True,
            int,
            'SFX ID at the time of combustion: 0 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnSfxId_1",
            "Burn SFX ID [1]",
            True,
            int,
            'SFX ID at the time of combustion: 1 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnSfxId_2",
            "Burn SFX ID [2]",
            True,
            int,
            'SFX ID at the time of combustion: 2 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnSfxId_3",
            "Burn SFX ID [3]",
            True,
            int,
            'SFX ID at the time of combustion: 3 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin",
            "Burn SFX Minimum Delay Time [0]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin_1",
            "Burn SFX Minimum Delay Time [1]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin_2",
            "Burn SFX Minimum Delay Time [2]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin_3",
            "Burn SFX Minimum Delay Time [3]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax",
            "Burn SFX Maximum Delay Time [0]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax_1",
            "Burn SFX Maximum Delay Time [1]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax_2",
            "Burn SFX Maximum Delay Time [2]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax_3",
            "Burn SFX Maximum Delay Time [3]",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId",
            "Burn Bullet Behavior ID [0]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 0 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId_1",
            "Burn Bullet Behavior ID [1]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 1 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId_2",
            "Burn Bullet Behavior ID [2]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 2 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId_3",
            "Burn Bullet Behavior ID [3]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 3 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletDelayTime",
            "Burn Bullet Delay Time",
            True,
            float,
            'Time to delay the generation of bullets for fire spread (seconds)',
        ),
        ParamFieldInfo(
            "paintDecalTargetTextureSize",
            "Paint Decal Target Texture Size",
            True,
            int,
            'Paint decal target size 0: Decal disabled (0 to 4096 power of 2 0, 2, 4, 8,�c 2048 only valid)',
        ),
        ParamFieldInfo(
            "navimeshFlag_after",
            "Post-destruction Navmesh Flag",
            True,
            int,
            'Navimesh flag set from the destroyed asset',
        ),
        ParamFieldInfo(
            "camNearBehaviorType",
            "Near Camera Behavior Type",
            True,
            int,
            'Drawing settings when approaching the camera. [GR] SEQ07529',
        ),
        ParamFieldInfo(
            "breakItemLotParamId",
            "Destroyed Item Lot Param ID",
            True,
            int,
            'Item to be drawn at the time of destruction Lottery ID_for map-1: No lottery',
        ),
        ParamFieldInfo(
            "pickUpActionButtonParamId",
            "Pickup Action Button Param ID",
            True,
            int,
            'Action button ID issued for collection-1: Collection function is disabled',
        ),
        ParamFieldInfo(
            "pickUpItemLotParamId",
            "Pickup Item Lot Param ID",
            True,
            int,
            'Item to be drawn at the time of collection For lottery ID_map-1: Collection function is invalid',
        ),
        ParamFieldInfo(
            "autoDrawGroupBackFaceCheck",
            "Auto Draw Group: Backface Check",
            True,
            int,
            'Automatic drawing group_Back side check',
        ),
        ParamFieldInfo(
            "autoDrawGroupDepthWrite",
            "Auto Draw Group: Depth Write",
            True,
            int,
            'Auto drawing group_shield',
        ),
        ParamFieldInfo(
            "autoDrawGroupShadowTest",
            "Auto Draw Group: Shadow Test",
            True,
            int,
            'Automatic drawing group_shadow test',
        ),
        ParamFieldInfo(
            "debug_isHeightCheckEnable",
            "Is Height Check Enabled",
            True,
            int,
            'Debug_Allow Ground Height Check See SEQ07876 for details',
        ),
        ParamFieldInfo(
            "hitCarverCancelAreaFlag",
            "Exclude from Subfloor Navmesh if below Hit",
            True,
            int,
            'If it is placed lower than the hit on the floor (ground), set whether to exclude it from the underfloor navigation mesh deletion target Refer to from the tool',
        ),
        ParamFieldInfo(
            "assetNavimeshNoCombine",
            "Block Navmesh Combine",
            True,
            int,
            'The set assets are excluded from the target of joining hit parts when building the Nav Mesh.',
        ),
        ParamFieldInfo(
            "navimeshFlagApply",
            "Navmesh Flag Apply Type",
            True,
            int,
            'Where to apply the navigation mesh flag set from the asset',
        ),
        ParamFieldInfo(
            "navimeshFlagApply_after",
            "Navmesh Flag Apply Type - Destroyed",
            True,
            int,
            'Where to apply the navigation mesh flag set from the destroyed asset',
        ),
        ParamFieldInfo(
            "autoDrawGroupPassPixelNum",
            "Auto Draw Group: Pass Pixel Number",
            True,
            float,
            'Automatic drawing group_Pass pixel (set to 0.0-1.0 to enlarge at the time of shooting)',
        ),
        ParamFieldInfo(
            "pickUpReplacementEventFlag",
            "Pickup Replacement - Event Flag",
            True,
            int,
            'When this event flag is ON, use the ID of the subsequent replacement 0: Do not always replace',
        ),
        ParamFieldInfo(
            "pickUpReplacementAnimIdOffset",
            "Pickup Replacement - Anim ID Offset",
            True,
            int,
            'When "Collecting_replacement flag condition" is ON, play the uncollected / collected animation with the animation ID offset by this value.',
        ),
        ParamFieldInfo(
            "pickUpReplacementActionButtonParamId",
            "Pickup Replacement - Action Button Param ID",
            True,
            int,
            'This action button ID is used when "Collecting_replacement flag condition" is ON.',
        ),
        ParamFieldInfo(
            "pickUpReplacementItemLotParamId",
            "Pickup Replacement - Item Lot Param ID",
            True,
            int,
            'When "Collecting_replacement flag condition" is ON, this item lottery ID_map is used.',
        ),
        ParamFieldInfo(
            "slidingBulletHitType",
            "Sliding Bullet Hit Type",
            True,
            int,
            'When a bullet of the follow-up type "Crawling on the ground even if it collides" collides with an asset, does it bend in the direction along the landing point? Behavior',
        ),
        ParamFieldInfo(
            "isBushesForDamage",
            "Is Damaged by Special Attacks",
            True,
            int,
            '�� Assets can only be damaged by "damage to bushes" �� and "object attack power> defense power" attacks [GR] SEQ20617',
        ),
        ParamFieldInfo(
            "penetrationBulletType",
            "Penetration Bullet Type",
            True,
            int,
            'Will the bullet hit and land? Which bullet para to refer to when deciding? The value that determines.',
        ),
        ParamFieldInfo(
            "Reserve_3[1]",
            "Reserve 3",
            False,
            pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "Reserve_4[4]",
            "Reserve 4",
            False,
            pad_field(4),
            '',
        ),
        ParamFieldInfo(
            "soundBreakSECpId",
            "Destruction - Sound SE Dummy Poly ID",
            True,
            int,
            'Damipoli ID of the place where the destruction sound is played (-1: Placement position)',
        ),
        ParamFieldInfo(
            "debug_HeightCheckCapacityMin",
            "Debug - Height Check Minimum",
            True,
            float,
            'Debug_Allowable ground height_Minimum [m] See SEQ07876 for details. Must be smaller than maximum',
        ),
        ParamFieldInfo(
            "debug_HeightCheckCapacityMax",
            "Debug - Height Check Maximum",
            True,
            float,
            'Debug_Allowable ground height_Max [m] See SEQ07876 for details. Must be larger than minimum',
        ),
        ParamFieldInfo(
            "repickActionButtonParamId",
            "Repick - Action Button ID",
            True,
            int,
            'This action button ID is used when recollecting assets whose "Is there a change at the time of recollection?"',
        ),
        ParamFieldInfo(
            "repickItemLotParamId",
            "Repick - Item Lot Param ID",
            True,
            int,
            'Assets with "Is there a change at the time of recollection?" Are used for this item lottery ID_map when recollecting in units of placement.',
        ),
        ParamFieldInfo(
            "repickReplacementAnimIdOffset",
            "Repick Replacement - Anim ID Offset",
            True,
            int,
            'Use this parameter instead of "At the time of collection_replacement animation offset" at the time of recollection for assets whose "Is there a change at the time of recollection?"',
        ),
        ParamFieldInfo(
            "repickReplacementActionButtonParamId",
            "Repick Replacement - Action Button Param ID",
            True,
            int,
            'Use this parameter instead of "At the time of collection_replacement action button ID" when recollecting assets whose "Is there a change at the time of recollection?"',
        ),
        ParamFieldInfo(
            "repickReplacementItemLotParamId",
            "Repick Replacement - Item Lot ID",
            True,
            int,
            'Use this parameter instead of "At the time of collection_Replacement item lottery ID_For map" when recollecting assets whose "Is there a change at the time of recollection?"',
        ),
        ParamFieldInfo(
            "noGenerateCarver",
            "Is Hit Carver Generation Blocked",
            True,
            int,
            'Asset with this set does not create Carver',
        ),
        ParamFieldInfo(
            "noHitHugeAfterBreak",
            "Is Giant Enemy Hit by Destruction",
            True,
            int,
            'Overwrite the hit filter after destruction with a collision detection type that does not hit a huge enemy (static �� dynamic ��)',
        ),
        ParamFieldInfo(
            "isEnabledBreakSync:1",
            "Is Destruction Synchronized",
            True,
            int,
            'If this is x, do not perform initial synchronization, map activation synchronization, asset destruction synchronization during in-game, and the attack of the remote PC will not hit.',
        ),
        ParamFieldInfo(
            "isHiddenOnRepick:1",
            "Is Hidden on Repick",
            True,
            int,
            "Hide assets if you can't get them by lottery when recollecting by placement unit",
        ),
        ParamFieldInfo(
            "isCreateMultiPlayOnly:1",
            "Is Valid for Multiplayer Only",
            True,
            int,
            'Is it valid only during multi? Only valid for dynamic assets. (Details: SEQ15087)',
        ),
        ParamFieldInfo(
            "isDisableBulletHitSfx:1",
            "Is Bullet Hit SFX Disabled",
            True,
            int,
            'In the case of ��, the landing SFX does not occur regardless of whether the hit bullet penetrates or lands.',
        ),
        ParamFieldInfo(
            "isEnableSignPreBreak:1",
            "Is Bloodstain/Sign Enabled before Destruction",
            True,
            int,
            'Set whether sign / blood character can be created when on the asset (before destruction) �Z: Possible, �~: Impossible (Details: SEQ122568)',
        ),
        ParamFieldInfo(
            "isEnableSignPostBreak:1",
            "Is Bloodstain/Sign Enabled after Destruction",
            True,
            int,
            'Set whether sign / blood character can be created when on the asset (after destruction) �Z: Possible, �~: Impossible (Details: SEQ122568)',
        ),
        ParamFieldInfo(
            "Reserve_1:2",
            "Reserve 1",
            False,
            bit_pad_field(2),
            '',
        ),
        ParamFieldInfo(
            "generateMultiForbiddenRegion",
            "Multiplayer Forbidden Region Type",
            True,
            int,
            'Summoning prohibited / intrusion prohibited area generation (Damipoli)',
        ),
        ParamFieldInfo(
            "residentSeId0",
            "Resident SE ID [0]",
            True,
            int,
            'Sound ID 0 (9 digits) to be resident in the asset (-1: No resident)',
        ),
        ParamFieldInfo(
            "residentSeId1",
            "Resident SE ID [1]",
            True,
            int,
            'Sound ID 1 (9 digits) to be resident in the asset (-1: No resident)',
        ),
        ParamFieldInfo(
            "residentSeId2",
            "Resident SE ID [2]",
            True,
            int,
            'Sound ID 2 (9 digits) to be resident in the asset (-1: No resident)',
        ),
        ParamFieldInfo(
            "residentSeId3",
            "Resident SE ID [3]",
            True,
            int,
            'Sound ID 3 (9 digits) to be resident in the asset (-1: not resident)',
        ),
        ParamFieldInfo(
            "residentSeDmypolyId0",
            "Resident SE ID - Dummy Poly [0]",
            True,
            int,
            'Damipoli ID0 to attach resident sound (-1: placement position)',
        ),
        ParamFieldInfo(
            "residentSeDmypolyId1",
            "Resident SE ID - Dummy Poly [1]",
            True,
            int,
            'Damipoli ID1 to attach resident sound (-1: placement position)',
        ),
        ParamFieldInfo(
            "residentSeDmypolyId2",
            "Resident SE ID - Dummy Poly [2]",
            True,
            int,
            'Damipoli ID2 to attach resident sound (-1: placement position)',
        ),
        ParamFieldInfo(
            "residentSeDmypolyId3",
            "Resident SE ID - Dummy Poly [3]",
            True,
            int,
            'Damipoli ID3 to attach resident sound (-1: placement position)',
        ),
        ParamFieldInfo(
            "excludeActivateRatio_Xboxone_Grid",
            "Exclude Activate Ratio - Xbox One Grid",
            True,
            int,
            'Open_XB1 exclusion rate [GR] SEQ25310',
        ),
        ParamFieldInfo(
            "excludeActivateRatio_Xboxone_Legacy",
            "Exclude Activate Ratio - Xbox One Legacy",
            True,
            int,
            'Legacy_XB1 exclusion rate [GR] SEQ25310',
        ),
        ParamFieldInfo(
            "excludeActivateRatio_PS4_Grid",
            "Exclude Activate Ratio - PS4 Grid",
            True,
            int,
            'Open_PS4 exclusion rate [GR] SEQ25310',
        ),
        ParamFieldInfo(
            "excludeActivateRatio_PS4_Legacy",
            "Exclude Activate Ratio - PS4 Legacy",
            True,
            int,
            'Legacy_PS4 exclusion rate [GR] SEQ25310',
        ),
        ParamFieldInfo(
            "Reserve_0[32]",
            "Reserve 0",
            False,
            pad_field(32),
            'Reserve 0',
        ),
    ],
}
