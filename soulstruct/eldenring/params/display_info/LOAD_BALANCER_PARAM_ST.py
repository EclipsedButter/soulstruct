from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


LOAD_BALANCER_PARAM_ST = {
    "param_type": "LOAD_BALANCER_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "lowerFpsThreshold",
            "Lower FPS Threshold - Raise Balance Level",
            True,
            float,
            'If it falls below this FPS, increase the load balance level by 1.',
        ),
        ParamFieldInfo(
            "upperFpsThreshold",
            "Upper FPS Threshold - Lower Balance Level",
            True,
            float,
            'If you exceed this FPS, lower the load balance level by 1.',
        ),
        ParamFieldInfo(
            "lowerFpsContinousCount",
            "Lower FPS Continous - Raise Balance Level",
            True,
            int,
            'If this frame continues below the threshold, level up',
        ),
        ParamFieldInfo(
            "upperFpsContinousCount",
            "Upper FPS Continous - Lower Balance Level",
            True,
            int,
            'If the threshold is exceeded continuously for this frame, level down',
        ),
        ParamFieldInfo(
            "downAfterChangeSleep",
            "Sleep Frame Count after Level Lower",
            True,
            int,
            'Sleep frame count after level down',
        ),
        ParamFieldInfo(
            "upAfterChangeSleep",
            "Sleep Frame Count after Level Raise",
            True,
            int,
            'Sleep frame count after leveling up',
        ),
        ParamFieldInfo(
            "postProcessLightShaft",
            "Post Process: Light Shaft",
            True,
            int,
            'Light shaft of filter',
        ),
        ParamFieldInfo(
            "postProcessBloom",
            "Post Process: Bloom",
            True,
            int,
            'Bloom',
        ),
        ParamFieldInfo(
            "postProcessGlow",
            "Post Process: Glow",
            True,
            int,
            'Glow',
        ),
        ParamFieldInfo(
            "postProcessAA",
            "Post Process: Anti-Aliasing",
            True,
            int,
            'Antialiasing',
        ),
        ParamFieldInfo(
            "postProcessSSAO",
            "Post Process: SSAO",
            True,
            int,
            'SSAO',
        ),
        ParamFieldInfo(
            "postProcessDOF",
            "Post Process: Depth of Field",
            True,
            int,
            'DOF',
        ),
        ParamFieldInfo(
            "postProcessMotionBlur",
            "Post Process: Motion Blur",
            True,
            int,
            'Motion Blur',
        ),
        ParamFieldInfo(
            "postProcessMotionBlurIteration",
            "Post Process: Motion Blur Iteration",
            True,
            int,
            'Reduce the number of Motion Blur iterations',
        ),
        ParamFieldInfo(
            "reserve0[1]",
            "Reserve",
            False,
            pad_field(1),
            'Reserve',
        ),
        ParamFieldInfo(
            "shadowBlur",
            "Cut Shadow Blur",
            True,
            int,
            'Cut the shadow blur',
        ),
        ParamFieldInfo(
            "sfxParticleHalf",
            "Halve SFX Particle",
            True,
            int,
            'Emit interval, number of emits, LOD distance halved in graphics config',
        ),
        ParamFieldInfo(
            "sfxReflection",
            "Omit SFX Reflection",
            True,
            int,
            'Omit the reflection scene SFX',
        ),
        ParamFieldInfo(
            "sfxWaterInteraction",
            "Omit Water Surface SFX Interaction",
            True,
            int,
            'Omit water surface interact SFX',
        ),
        ParamFieldInfo(
            "sfxGlow",
            "Omit SFX Glow",
            True,
            int,
            'Omit Glow playing with SFX',
        ),
        ParamFieldInfo(
            "sfxDistortion",
            "Omit SFX Distortion",
            True,
            int,
            'Omit of distortion applied by SFX',
        ),
        ParamFieldInfo(
            "sftSoftSprite",
            "Omit SFX Soft Sprite",
            True,
            int,
            'Soft sprite omit with SFX',
        ),
        ParamFieldInfo(
            "sfxLightShaft",
            "Omit SFX Light Shaft",
            True,
            int,
            'SFX Light Shaft Omit',
        ),
        ParamFieldInfo(
            "sfxScaleRenderDistanceScale",
            "SFX Scale - Render Distance Scale",
            True,
            int,
            'Scale to the distance judgment of the effect dynamically registered in the reduction buffer by the distance of SFX',
        ),
        ParamFieldInfo(
            "dynamicResolution",
            "Dynamic Resolution",
            True,
            int,
            'Dynamic resolution',
        ),
        ParamFieldInfo(
            "shadowCascade0ResolutionHalf",
            "Halve Shadow Cascade [0] Resolution",
            True,
            int,
            'Cut the shadow (cascade 0) resolution in half',
        ),
        ParamFieldInfo(
            "shadowCascade1ResolutionHalf",
            "Halve Shadow Cascade [1] Resolution",
            True,
            int,
            'Cut the shadow (cascade 1) resolution in half',
        ),
        ParamFieldInfo(
            "chrWetDisablePlayer",
            "Disable Wetness for Player",
            True,
            int,
            'Turn off the water wetting process for local players',
        ),
        ParamFieldInfo(
            "chrWetDisableRemotePlayer",
            "Disable Wetness for Remote Player",
            True,
            int,
            'Turn off the water wetting process of the remote player',
        ),
        ParamFieldInfo(
            "chrWetDisableEnemy",
            "Disable Wetness for NPC",
            True,
            int,
            'Turn off the water wetting process of enemy characters',
        ),
        ParamFieldInfo(
            "dynamicResolutionPercentageMin",
            "Lower Limit of Resolution Reduction",
            True,
            int,
            'Resolution reduction lower limit (%)',
        ),
        ParamFieldInfo(
            "dynamicResolutionPercentageMax",
            "Upper Limit of Resolution Reduction",
            True,
            int,
            'Resolution reduction upper limit (%)',
        ),
        ParamFieldInfo(
            "reserve1[30]",
            "Reserve",
            False,
            pad_field(30),
            'Reserve',
        ),
    ],
}
