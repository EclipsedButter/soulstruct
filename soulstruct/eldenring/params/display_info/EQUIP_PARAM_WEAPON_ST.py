from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


EQUIP_PARAM_WEAPON_ST = {
    "param_type": "EQUIP_PARAM_WEAPON_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "disableParam_NT:1",
            "Disable Param - Network Test",
            True,
            int,
            'Parameters marked with �� are excluded in the NT version package.',
        ),
        ParamFieldInfo(
            "disableParamReserve1:7",
            "Reserve for Package Output [1]",
            False,
            bit_pad_field(7),
            'Reserve for package output 1',
        ),
        ParamFieldInfo(
            "disableParamReserve2[3]",
            "Reserve for Package Output [2]",
            False,
            pad_field(3),
            'Reserve for package output 2',
        ),
        ParamFieldInfo(
            "behaviorVariationId",
            "Behavior Variation ID",
            True,
            int,
            'Used when determining the action parameter ID to be referenced during an attack',
        ),
        ParamFieldInfo(
            "sortId",
            "Sort ID",
            True,
            int,
            'Sort ID (-1: Do not collect) (7 digits is the limit in s32 to add the enhancement level in the program)',
        ),
        ParamFieldInfo(
            "wanderingEquipId",
            "Wandering Equip ID",
            True,
            int,
            'Replacement equipment ID for wandering ghosts.',
        ),
        ParamFieldInfo(
            "weight",
            "Weight",
            True,
            float,
            'Weight [kg].',
        ),
        ParamFieldInfo(
            "weaponWeightRate",
            "Weapon Weight %",
            True,
            float,
            'Equipment weight ratio',
        ),
        ParamFieldInfo(
            "fixPrice",
            "Repair Price",
            True,
            int,
            'Basic repair price',
        ),
        ParamFieldInfo(
            "reinforcePrice",
            "Reinforcement Price",
            True,
            int,
            'Enhanced price',
        ),
        ParamFieldInfo(
            "sellValue",
            "Sell Price",
            True,
            int,
            'Selling price',
        ),
        ParamFieldInfo(
            "correctStrength",
            "Correction: STR",
            True,
            float,
            'Charapara correction value.',
        ),
        ParamFieldInfo(
            "correctAgility",
            "Correction: DEX",
            True,
            float,
            'Charapara correction value.',
        ),
        ParamFieldInfo(
            "correctMagic",
            "Correction: INT",
            True,
            float,
            'Charapara correction value.',
        ),
        ParamFieldInfo(
            "correctFaith",
            "Correction: FTH",
            True,
            float,
            'Charapara correction value.',
        ),
        ParamFieldInfo(
            "physGuardCutRate",
            "Guard Absorption: Physical",
            True,
            float,
            'Set the damage cut rate when guarding for each attack',
        ),
        ParamFieldInfo(
            "magGuardCutRate",
            "Guard Absorption: Magic",
            True,
            float,
            'If it is not a guard attack, enter 0',
        ),
        ParamFieldInfo(
            "fireGuardCutRate",
            "Guard Absorption: Fire",
            True,
            float,
            'How much to cut the fire attack?',
        ),
        ParamFieldInfo(
            "thunGuardCutRate",
            "Guard Absorption: Lightning",
            True,
            float,
            'How much to cut the electric shock attack?',
        ),
        ParamFieldInfo(
            "spEffectBehaviorId0",
            "Behavior SpEffect 1",
            True,
            int,
            'Register when adding special effects to weapons',
        ),
        ParamFieldInfo(
            "spEffectBehaviorId1",
            "Behavior SpEffect 2",
            True,
            int,
            'Register when adding special effects to weapons',
        ),
        ParamFieldInfo(
            "spEffectBehaviorId2",
            "Behavior SpEffect 3",
            True,
            int,
            'Register when adding special effects to weapons',
        ),
        ParamFieldInfo(
            "residentSpEffectId",
            "Passive SpEffect 1",
            True,
            int,
            'Resident special effect ID0',
        ),
        ParamFieldInfo(
            "residentSpEffectId1",
            "Passive SpEffect 2",
            True,
            int,
            'Resident special effect ID1',
        ),
        ParamFieldInfo(
            "residentSpEffectId2",
            "Passive SpEffect 3",
            True,
            int,
            'Resident special effect ID2',
        ),
        ParamFieldInfo(
            "materialSetId",
            "Reinforcement Material Set ID",
            True,
            int,
            'Material parameter ID required for weapon enhancement',
        ),
        ParamFieldInfo(
            "originEquipWep",
            "Origin Weapon +0",
            True,
            int,
            "This weapon's enhancement source weapon ID",
        ),
        ParamFieldInfo(
            "originEquipWep1",
            "Origin Weapon +1",
            True,
            int,
            "This weapon's enhancement source weapon ID1",
        ),
        ParamFieldInfo(
            "originEquipWep2",
            "Origin Weapon +2",
            True,
            int,
            "This weapon's enhancement source weapon ID2",
        ),
        ParamFieldInfo(
            "originEquipWep3",
            "Origin Weapon +3",
            True,
            int,
            "This weapon's enhancement source weapon ID3",
        ),
        ParamFieldInfo(
            "originEquipWep4",
            "Origin Weapon +4",
            True,
            int,
            "This weapon's enhancement source weapon ID 4",
        ),
        ParamFieldInfo(
            "originEquipWep5",
            "Origin Weapon +5",
            True,
            int,
            "This weapon's enhancement source weapon ID 5",
        ),
        ParamFieldInfo(
            "originEquipWep6",
            "Origin Weapon +6",
            True,
            int,
            "This weapon's enhancement source weapon ID 6",
        ),
        ParamFieldInfo(
            "originEquipWep7",
            "Origin Weapon +7",
            True,
            int,
            "This weapon's enhancement source weapon ID 7",
        ),
        ParamFieldInfo(
            "originEquipWep8",
            "Origin Weapon +8",
            True,
            int,
            "This weapon's enhancement source weapon ID8",
        ),
        ParamFieldInfo(
            "originEquipWep9",
            "Origin Weapon +9",
            True,
            int,
            "This weapon's enhancement source weapon ID 9",
        ),
        ParamFieldInfo(
            "originEquipWep10",
            "Origin Weapon +10",
            True,
            int,
            "This weapon's enhancement source weapon ID 10",
        ),
        ParamFieldInfo(
            "originEquipWep11",
            "Origin Weapon +11",
            True,
            int,
            "This weapon's enhancement source weapon ID 11",
        ),
        ParamFieldInfo(
            "originEquipWep12",
            "Origin Weapon +12",
            True,
            int,
            "This weapon's enhancement source weapon ID 12",
        ),
        ParamFieldInfo(
            "originEquipWep13",
            "Origin Weapon +13",
            True,
            int,
            "This weapon's enhancement source weapon ID 13",
        ),
        ParamFieldInfo(
            "originEquipWep14",
            "Origin Weapon +14",
            True,
            int,
            "This weapon's enhancement source weapon ID14",
        ),
        ParamFieldInfo(
            "originEquipWep15",
            "Origin Weapon +15",
            True,
            int,
            "This weapon's enhancement source weapon ID 15",
        ),
        ParamFieldInfo(
            "weakA_DamageRate",
            "Damage Multiplier %: Type A",
            True,
            float,
            'Damage multiplier for special attack A',
        ),
        ParamFieldInfo(
            "weakB_DamageRate",
            "Damage Multiplier %: Type B",
            True,
            float,
            'Damage multiplier for special attack B',
        ),
        ParamFieldInfo(
            "weakC_DamageRate",
            "Damage Multiplier %: Type C",
            True,
            float,
            'Damage multiplier for special attack C',
        ),
        ParamFieldInfo(
            "weakD_DamageRate",
            "Damage Multiplier %: Type D",
            True,
            float,
            'Damage multiplier for special attack D',
        ),
        ParamFieldInfo(
            "sleepGuardResist_MaxCorrect",
            "Max Correction: Sleep Guard Resist",
            True,
            float,
            'Maximum value of cut rate correction value for attack power against sleep (set as special effect parameter)',
        ),
        ParamFieldInfo(
            "madnessGuardResist_MaxCorrect",
            "Max Correction: Madness Guard Resist",
            True,
            float,
            'Maximum value of cut rate correction value for attack power against madness (set as special effect parameter)',
        ),
        ParamFieldInfo(
            "saWeaponDamage",
            "Poise Damage",
            True,
            float,
            'Super Armor Basic Attack Power',
        ),
        ParamFieldInfo(
            "equipModelId",
            "Equip Model ID",
            True,
            int,
            'Equipment model number.',
        ),
        ParamFieldInfo(
            "iconId",
            "Icon ID",
            True,
            int,
            'Menu icon ID.',
        ),
        ParamFieldInfo(
            "durability",
            "Durability",
            True,
            int,
            'Initial durability.',
        ),
        ParamFieldInfo(
            "durabilityMax",
            "Max Durability",
            True,
            int,
            'New durability.',
        ),
        ParamFieldInfo(
            "attackThrowEscape",
            "Throw Escape Damage",
            True,
            int,
            'Basic value of throw-through attack power',
        ),
        ParamFieldInfo(
            "parryDamageLife",
            "Parry Occurrence Duration",
            True,
            int,
            'Limit the life of parry damage. It does not last longer than it is set in TimeAct.',
        ),
        ParamFieldInfo(
            "attackBasePhysics",
            "Damage: Physical",
            True,
            int,
            "Basic value of physical attribute attack that damages the enemy's HP",
        ),
        ParamFieldInfo(
            "attackBaseMagic",
            "Damage: Magic",
            True,
            int,
            "Basic value of magic attribute attack that damages the enemy's HP",
        ),
        ParamFieldInfo(
            "attackBaseFire",
            "Damage: Fire",
            True,
            int,
            "Basic value of fire attribute attack that damages the enemy's HP",
        ),
        ParamFieldInfo(
            "attackBaseThunder",
            "Damage: Lightning",
            True,
            int,
            "Basic value of electric shock attribute attack that damages the enemy's HP",
        ),
        ParamFieldInfo(
            "attackBaseStamina",
            "Damage: Stamina",
            True,
            int,
            'Stamina attack power against the enemy',
        ),
        ParamFieldInfo(
            "guardAngle",
            "Guard Angle",
            True,
            int,
            'Defense occurrence range angle when guarding weapons',
        ),
        ParamFieldInfo(
            "saDurability",
            "Poise Durability",
            True,
            float,
            'Additional SA durability used during attack motion',
        ),
        ParamFieldInfo(
            "staminaGuardDef",
            "Guard Stability",
            True,
            int,
            'Defense against enemy stamina attacks when guarding successfully',
        ),
        ParamFieldInfo(
            "reinforceTypeId",
            "Reinforce Type ID",
            True,
            int,
            'Enhanced type ID',
        ),
        ParamFieldInfo(
            "trophySGradeId",
            "Achievement ID [1]",
            True,
            int,
            'Is it related to the trophy system?',
        ),
        ParamFieldInfo(
            "trophySeqId",
            "Achievement ID [2]",
            True,
            int,
            'Trophy SEQ number (13-29)',
        ),
        ParamFieldInfo(
            "throwAtkRate",
            "Critical Multiplier",
            True,
            int,
            'Throw attack power multiplier',
        ),
        ParamFieldInfo(
            "bowDistRate",
            "Bow Distance %",
            True,
            int,
            'Up% to extend the flight distance',
        ),
        ParamFieldInfo(
            "equipModelCategory",
            "Equip Model Category",
            True,
            int,
            'Equipment model type.',
        ),
        ParamFieldInfo(
            "equipModelGender",
            "Equip Model Gender",
            True,
            int,
            'Gender of equipment model.',
        ),
        ParamFieldInfo(
            "weaponCategory",
            "Weapon Category",
            True,
            int,
            'Weapon category.\n8 - Enables Sorcery/Incantation Display\n10 - Enables Ammunition Usage and Range Display\n11 - Enables Bolt Usage and Range Display',
        ),
        ParamFieldInfo(
            "wepmotionCategory",
            "Weapon Motion Category",
            True,
            int,
            'Weapon motion category.',
        ),
        ParamFieldInfo(
            "guardmotionCategory",
            "Guard Motion Category",
            True,
            int,
            'Guard motion category',
        ),
        ParamFieldInfo(
            "atkMaterial",
            "Attack Material",
            True,
            int,
            'Attack material used from attack para',
        ),
        ParamFieldInfo(
            "defSeMaterial1",
            "Defence SE Material [1]",
            True,
            int,
            'Defense SE material used from attack para 1',
        ),
        ParamFieldInfo(
            "correctType_Physics",
            "Correction Type: Physical",
            True,
            int,
            'Correcting physical attack power by primary parameters Determines the type of graph',
        ),
        ParamFieldInfo(
            "spAttribute",
            "Speical Attribute",
            True,
            int,
            'Weapon special attribute value',
        ),
        ParamFieldInfo(
            "spAtkcategory",
            "Special Motion Category",
            True,
            int,
            'Special attack category (possible from 50 to 999)',
        ),
        ParamFieldInfo(
            "wepmotionOneHandId",
            "Weapon Motion Position - 1H",
            True,
            int,
            'Basic motion ID when equipped with one hand.',
        ),
        ParamFieldInfo(
            "wepmotionBothHandId",
            "Weapon Motion Position - 2H",
            True,
            int,
            'Basic motion ID when equipped with both hands.',
        ),
        ParamFieldInfo(
            "properStrength",
            "Requirement: STR",
            True,
            int,
            'Equipment appropriate value.',
        ),
        ParamFieldInfo(
            "properAgility",
            "Requirement: DEX",
            True,
            int,
            'Equipment appropriate value.',
        ),
        ParamFieldInfo(
            "properMagic",
            "Requirement: INT",
            True,
            int,
            'Equipment appropriate value.',
        ),
        ParamFieldInfo(
            "properFaith",
            "Requirement: FTH",
            True,
            int,
            'Equipment appropriate value.',
        ),
        ParamFieldInfo(
            "overStrength",
            "Strength over Start Value",
            True,
            int,
            'Strength over start value',
        ),
        ParamFieldInfo(
            "attackBaseParry",
            "Base Parry Attack",
            True,
            int,
            "Basic value to defeat the enemy's parry",
        ),
        ParamFieldInfo(
            "defenseBaseParry",
            "Base Parry Defens",
            True,
            int,
            'Used to judge whether to be a parry or a guard at the time of parry judgment',
        ),
        ParamFieldInfo(
            "guardBaseRepel",
            "Base Guard Repel",
            True,
            int,
            'Used to determine if it will pop when guarding an enemy attack',
        ),
        ParamFieldInfo(
            "attackBaseRepel",
            "Base Attack Repel",
            True,
            int,
            'Guard Used to determine whether or not to be repelled when attacking an enemy',
        ),
        ParamFieldInfo(
            "guardCutCancelRate",
            "Guard Bypass %",
            True,
            int,
            "Magnification that invalidates the opponent's guard cut. -100 is completely invalid. Double the defense effect of the opponent at 100.",
        ),
        ParamFieldInfo(
            "guardLevel",
            "Guard Level",
            True,
            int,
            'When guarding, which guard motion will the enemy attack? Decide',
        ),
        ParamFieldInfo(
            "slashGuardCutRate",
            "Guard Absorption: Slash",
            True,
            int,
            'Looking at the attack type, what percentage of the damage of the slashing attribute is cut? Specify',
        ),
        ParamFieldInfo(
            "blowGuardCutRate",
            "Guard Absorption: Strike",
            True,
            int,
            'Looking at the attack type, what percentage of the damage of the hit attribute is cut? Specify',
        ),
        ParamFieldInfo(
            "thrustGuardCutRate",
            "Guard Absorption: Thrust",
            True,
            int,
            'Looking at the attack type, what percentage of the damage of the piercing attribute is cut? Specify',
        ),
        ParamFieldInfo(
            "poisonGuardResist",
            "Guard Resist: Poison",
            True,
            int,
            'How much to cut the attack power to poison (set to the special effect parameter)',
        ),
        ParamFieldInfo(
            "diseaseGuardResist",
            "Guard Resist: Scarlet Rot",
            True,
            int,
            'How much to cut the attack power (set as a special effect parameter) to make it a plague',
        ),
        ParamFieldInfo(
            "bloodGuardResist",
            "Guard Resist: Hemorrhage",
            True,
            int,
            'How much to cut the attack power (set as a special effect parameter) to make bleeding',
        ),
        ParamFieldInfo(
            "curseGuardResist",
            "Guard Resist: Blight",
            True,
            int,
            'How much to cut the attack power (set as a special effect parameter) to curse',
        ),
        ParamFieldInfo(
            "atkAttribute",
            "Attack Attribute",
            True,
            int,
            'Physical attribute 1',
        ),
        ParamFieldInfo(
            "rightHandEquipable:1",
            "Can wield in Right Hand",
            True,
            int,
            'Is it possible to equip it with the right hand?',
        ),
        ParamFieldInfo(
            "leftHandEquipable:1",
            "Can wield in Left Hand",
            True,
            int,
            'Is it possible to equip it with the left hand?',
        ),
        ParamFieldInfo(
            "bothHandEquipable:1",
            "Can wield in Both Hands",
            True,
            int,
            'Is it possible to equip with both hands?',
        ),
        ParamFieldInfo(
            "arrowSlotEquipable:1",
            "Can wield in Arrow Slot",
            True,
            int,
            'Is it possible to equip a bow bullet?',
        ),
        ParamFieldInfo(
            "boltSlotEquipable:1",
            "Can wield in Bolt Slot",
            True,
            int,
            'Is it possible to equip a crossbow bullet?',
        ),
        ParamFieldInfo(
            "enableGuard:1",
            "Allow Shield Buff",
            True,
            int,
            'Guard with L1 when equipped with left hand',
        ),
        ParamFieldInfo(
            "enableParry:1",
            "Enables Parry",
            True,
            int,
            'Parry with L2 when equipped with left hand',
        ),
        ParamFieldInfo(
            "enableMagic:1",
            "Enables Sorcery",
            True,
            int,
            'Activates magic when attacking',
        ),
        ParamFieldInfo(
            "enableSorcery:1",
            "Enables Pyromancy",
            True,
            int,
            'Cast magic when attacking',
        ),
        ParamFieldInfo(
            "enableMiracle:1",
            "Enables Incantations",
            True,
            int,
            'Miracle activated when attacking',
        ),
        ParamFieldInfo(
            "enableVowMagic:1",
            "Enables Vow Magic",
            True,
            int,
            'Activates pledge magic when attacking',
        ),
        ParamFieldInfo(
            "isNormalAttackType:1",
            "Type Display: Normal",
            True,
            int,
            'Attack type for menu display. Is it normal?',
        ),
        ParamFieldInfo(
            "isBlowAttackType:1",
            "Type Display: Strike",
            True,
            int,
            'Attack type for menu display. Is it a blow?',
        ),
        ParamFieldInfo(
            "isSlashAttackType:1",
            "Type Display: Slash",
            True,
            int,
            'Attack type for menu display. Is it a slash?',
        ),
        ParamFieldInfo(
            "isThrustAttackType:1",
            "Type Display: Thrust",
            True,
            int,
            'Attack type for menu display. Is it a piercing?',
        ),
        ParamFieldInfo(
            "isEnhance:1",
            "Is Buffable",
            True,
            int,
            'Can it be strengthened with pine fat?',
        ),
        ParamFieldInfo(
            "isHeroPointCorrect:1",
            "Is Humanity Correction",
            True,
            int,
            'Is there an attack power correction by human nature?',
        ),
        ParamFieldInfo(
            "isCustom:1",
            "Is Reinforcable",
            True,
            int,
            'Listed in the enhancement target list at the enhancement shop (may be deleted due to specification changes?)',
        ),
        ParamFieldInfo(
            "disableBaseChangeReset:1",
            "Disable Base Change Reset",
            True,
            int,
            'Is job change reset prohibited?',
        ),
        ParamFieldInfo(
            "disableRepair:1",
            "Repair is Disabled",
            True,
            int,
            'Is repair prohibited?',
        ),
        ParamFieldInfo(
            "isDarkHand:1",
            "Is Dark Hand",
            True,
            int,
            'Is it a dark hand?',
        ),
        ParamFieldInfo(
            "simpleModelForDlc:1",
            "Is Simple Model for DLC",
            True,
            int,
            'Is there a simple model for DLC?',
        ),
        ParamFieldInfo(
            "lanternWep:1",
            "Is a Light Source",
            True,
            int,
            'Is it a lantern weapon?',
        ),
        ParamFieldInfo(
            "isVersusGhostWep:1",
            "Can Hit Ghost Enemy",
            True,
            int,
            'NPC Para\'s "spirit body" will now hit the opponent of ��. Also, the attack para "Is it a ghost attack?" Will be able to guard the attack of ��.',
        ),
        ParamFieldInfo(
            "baseChangeCategory:6",
            "Base Change Category",
            True,
            int,
            'Weapon career change category. Used to display the attribute icon.',
        ),
        ParamFieldInfo(
            "isDragonSlayer:1",
            "Is Greatbow Type",
            True,
            int,
            'For weapons/ammunition. Is it a dragon hunting weapon?',
        ),
        ParamFieldInfo(
            "isDeposit:1",
            "Can Deposit",
            True,
            int,
            'Can you leave it in the warehouse?',
        ),
        ParamFieldInfo(
            "disableMultiDropShare:1",
            "Cannot Drop in Multiplayer",
            True,
            int,
            'Is multi-drop sharing prohibited?',
        ),
        ParamFieldInfo(
            "isDiscard:1",
            "Can Discard",
            True,
            int,
            'Can you throw away the item? TRUE = thrown away',
        ),
        ParamFieldInfo(
            "isDrop:1",
            "Can Drop",
            True,
            int,
            'Can I put the item on the spot? TRUE = can be placed',
        ),
        ParamFieldInfo(
            "showLogCondType:1",
            "Item Acquisition Log Condition Type",
            True,
            int,
            'Whether to display in the item acquisition log when acquiring the item (not entered: ��)',
        ),
        ParamFieldInfo(
            "enableThrow:1",
            "Enable Throw",
            True,
            int,
            'Whether it is a throwable weapon',
        ),
        ParamFieldInfo(
            "showDialogCondType:2",
            "Item Acquisition Dialog Condition Type",
            True,
            int,
            'Whether to display it in the item acquisition dialog when acquiring an item (not entered: new only)',
        ),
        ParamFieldInfo(
            "disableGemAttr:1",
            "Prevent Affinity Change",
            True,
            int,
            'Is it prohibited to change the magic stone attribute?',
        ),
        ParamFieldInfo(
            "defSfxMaterial1",
            "Defence SFX Material [1]",
            True,
            int,
            'Defensive SFX material used from attack para 1',
        ),
        ParamFieldInfo(
            "wepCollidableType0",
            "Weapon Collidable Type [0]",
            True,
            int,
            'Weapon collaborative setting',
        ),
        ParamFieldInfo(
            "wepCollidableType1",
            "Weapon Collidable Type [1]",
            True,
            int,
            'Weapon 1 collaborative setting',
        ),
        ParamFieldInfo(
            "postureControlId_Right",
            "Posture Control ID - Weapon Right",
            True,
            int,
            'Attitude control ID (right hand)',
        ),
        ParamFieldInfo(
            "postureControlId_Left",
            "Posture Control ID - Weapon Left",
            True,
            int,
            'Attitude control ID (left hand)',
        ),
        ParamFieldInfo(
            "traceSfxId0",
            "Trace SFX ID [0]",
            True,
            int,
            'Sword flash SfxID_0 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead0",
            "Trace SFX ID [0] - Dummy Poly ID - Head",
            True,
            int,
            'Sword flash root Damipoli ID_0 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail0",
            "Trace SFX ID [0] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_0',
        ),
        ParamFieldInfo(
            "traceSfxId1",
            "Trace SFX ID [1]",
            True,
            int,
            'Sword flash SfxID_1 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead1",
            "Trace SFX ID [1] - Dummy Poly ID - Head",
            True,
            int,
            'Sword Flash Root Damipoli ID_1 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail1",
            "Trace SFX ID [1] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_1',
        ),
        ParamFieldInfo(
            "traceSfxId2",
            "Trace SFX ID [2]",
            True,
            int,
            'Sword flash SfxID_2 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead2",
            "Trace SFX ID [2] - Dummy Poly ID - Head",
            True,
            int,
            'Sword Flash Root Damipoli ID_2 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail2",
            "Trace SFX ID [2] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_2',
        ),
        ParamFieldInfo(
            "traceSfxId3",
            "Trace SFX ID [3]",
            True,
            int,
            'Sword Flash SfxID_3 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead3",
            "Trace SFX ID [3] - Dummy Poly ID - Head",
            True,
            int,
            'Sword flash root Damipoli ID_3 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail3",
            "Trace SFX ID [3] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_3',
        ),
        ParamFieldInfo(
            "traceSfxId4",
            "Trace SFX ID [4]",
            True,
            int,
            'Sword Flash SfxID_4 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead4",
            "Trace SFX ID [4] - Dummy Poly ID - Head",
            True,
            int,
            'Sword flash root Damipoli ID_4 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail4",
            "Trace SFX ID [4] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_4',
        ),
        ParamFieldInfo(
            "traceSfxId5",
            "Trace SFX ID [5]",
            True,
            int,
            'Sword Flash SfxID_5 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead5",
            "Trace SFX ID [5] - Dummy Poly ID - Head",
            True,
            int,
            'Sword Flash Root Damipoli ID_5 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail5",
            "Trace SFX ID [5] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_5',
        ),
        ParamFieldInfo(
            "traceSfxId6",
            "Trace SFX ID [6]",
            True,
            int,
            'Sword Flash SfxID_6 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead6",
            "Trace SFX ID [6] - Dummy Poly ID - Head",
            True,
            int,
            'Sword Flash Root Damipoli ID_6 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail6",
            "Trace SFX ID [6] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_6',
        ),
        ParamFieldInfo(
            "traceSfxId7",
            "Trace SFX ID [7]",
            True,
            int,
            'Sword Flash SfxID_7 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead7",
            "Trace SFX ID [7] - Dummy Poly ID - Head",
            True,
            int,
            'Sword Flash Root Damipoli ID_7 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail7",
            "Trace SFX ID [7] - Dummy Poly ID - Tail",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_7',
        ),
        ParamFieldInfo(
            "defSfxMaterial2",
            "Defence SFX Material [2]",
            True,
            int,
            'Defensive SFX material used from attack para 2',
        ),
        ParamFieldInfo(
            "defSeMaterial2",
            "Defence SE Material [2]",
            True,
            int,
            'Defense SE material used from attack para 2',
        ),
        ParamFieldInfo(
            "absorpParamId",
            "Weapon Sheath Position ID",
            True,
            int,
            'Weapon adsorption position parameter Id. This value determines the position where the weapon is attracted (-1: Refer to the value written directly in the old source code).',
        ),
        ParamFieldInfo(
            "toughnessCorrectRate",
            "Toughness Correction",
            True,
            float,
            'It is a magnification that corrects the basic value of toughness.',
        ),
        ParamFieldInfo(
            "isValidTough_ProtSADmg:1",
            "Is Toughness Perfomed if Poise is Initial Value",
            True,
            int,
            'Whether the toughness calculation is performed even if the armor SA is the initial value. Check the toughness specification .xlsx for details',
        ),
        ParamFieldInfo(
            "isDualBlade:1",
            "Is Dual Weapon",
            True,
            int,
            'Is this weapon a twin sword?',
        ),
        ParamFieldInfo(
            "isAutoEquip:1",
            "Is Auto Equipped",
            True,
            int,
            'Only valid for arrows and bolts. Whether to automatically equip this weapon if the target equipment slot is empty when picking up this weapon',
        ),
        ParamFieldInfo(
            "isEnableEmergencyStep:1",
            "Is Emergency Avoidance Possible",
            True,
            int,
            'Is it an emergency avoidable weapon? Pass it to the behavior script.',
        ),
        ParamFieldInfo(
            "invisibleOnRemo:1",
            "Is Hidden in Cutscene",
            True,
            int,
            'Is it hidden during cutscenes?',
        ),
        ParamFieldInfo(
            "pad2:3",
            "pad",
            False,
            bit_pad_field(3),
            '',
        ),
        ParamFieldInfo(
            "correctType_Magic",
            "Correction Type: Magic",
            True,
            int,
            'Determining the type of magic attack power correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "correctType_Fire",
            "Correction Type: Fire",
            True,
            int,
            'Determine the type of flame attack power correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "correctType_Thunder",
            "Correction Type: Lightning",
            True,
            int,
            'Determine the type of lightning attack power correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "weakE_DamageRate",
            "Damage Multiplier %: Type E",
            True,
            float,
            'Damage multiplier for special attack E',
        ),
        ParamFieldInfo(
            "weakF_DamageRate",
            "Damage Multiplier %: Type F",
            True,
            float,
            'Damage multiplier for special attack F',
        ),
        ParamFieldInfo(
            "darkGuardCutRate",
            "Guard Absorption: Holy",
            True,
            float,
            'How much to cut the dark attack?',
        ),
        ParamFieldInfo(
            "attackBaseDark",
            "Damage: Holy",
            True,
            int,
            "Basic value of darkness attack that damages the enemy's HP",
        ),
        ParamFieldInfo(
            "correctType_Dark",
            "Correction Type: Holy",
            True,
            int,
            'Determine the type of darkness attack power correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "correctType_Poison",
            "Correction Type: Poison",
            True,
            int,
            'Determining the type of poison attack power correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "sortGroupId",
            "Sort Group ID",
            True,
            int,
            'Sort item type ID. In the sort "Item type order", the same ID is displayed together as the same group.',
        ),
        ParamFieldInfo(
            "atkAttribute2",
            "Attack Attribute [2]",
            True,
            int,
            'Physical attribute 2',
        ),
        ParamFieldInfo(
            "sleepGuardResist",
            "Guard Resist: Sleep",
            True,
            int,
            'How much to cut the attack power (set as a special effect parameter) to sleep',
        ),
        ParamFieldInfo(
            "madnessGuardResist",
            "Guard Resist: Madness",
            True,
            int,
            'How much to cut the attack power (set to the special effect parameter) that makes you go mad',
        ),
        ParamFieldInfo(
            "correctType_Blood",
            "Correction Type: Hemorrhage",
            True,
            int,
            'Determine the type of bleeding attack power correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "properLuck",
            "Requirement: ARC",
            True,
            int,
            'Equipment appropriate value.',
        ),
        ParamFieldInfo(
            "freezeGuardResist",
            "Guard Resist: Frostbite",
            True,
            int,
            'How much to cut the attack power (set to the special effect parameter) to cool down',
        ),
        ParamFieldInfo(
            "autoReplenishType",
            "Auto Replenish Type",
            True,
            int,
            'Controls whether or not to automatically replenish and default settings',
        ),
        ParamFieldInfo(
            "swordArtsParamId",
            "Sword Arts Param ID",
            True,
            int,
            'Arts parameter ID',
        ),
        ParamFieldInfo(
            "correctLuck",
            "Correction: ARC",
            True,
            float,
            'Charapara correction value.',
        ),
        ParamFieldInfo(
            "arrowBoltEquipId",
            "Quiver ID",
            True,
            int,
            'Equipment number of the quiver (magazine) display model. In the case of a bow, it is displayed as a quiver, and in the case of a crossbow, it is displayed as a magazine.',
        ),
        ParamFieldInfo(
            "DerivationLevelType",
            "Derivation Level Type",
            True,
            int,
            'Type of how to set the enhancement level when returning or deriving a weapon',
        ),
        ParamFieldInfo(
            "enchantSfxSize",
            "Enchantment SFX Size",
            True,
            int,
            'Value offset to enchantment SfxId',
        ),
        ParamFieldInfo(
            "wepType",
            "Weapon Type",
            True,
            int,
            'Weapon type. Used for linking text and magic stones (* It is now used for other than text)',
        ),
        ParamFieldInfo(
            "physGuardCutRate_MaxCorrect",
            "Max Correction: Physical Guard Absorption",
            True,
            float,
            'Maximum damage physical cut rate correction value when guarding',
        ),
        ParamFieldInfo(
            "magGuardCutRate_MaxCorrect",
            "Max Correction: Magic Guard Absorption",
            True,
            float,
            'Maximum value of correction value of damage magic cut rate when guarding',
        ),
        ParamFieldInfo(
            "fireGuardCutRate_MaxCorrect",
            "Max Correction: Fire Guard Absorption",
            True,
            float,
            'Maximum value of correction value of damage flame cut rate when guarding',
        ),
        ParamFieldInfo(
            "thunGuardCutRate_MaxCorrect",
            "Max Correction: Lightning Guard Absorption",
            True,
            float,
            'Maximum value of correction value of damage electric shock cut rate when guarding',
        ),
        ParamFieldInfo(
            "darkGuardCutRate_MaxCorrect",
            "Max Correction: Holy Guard Absorption",
            True,
            float,
            'Maximum value of correction value of damage darkness cut rate when guarding',
        ),
        ParamFieldInfo(
            "poisonGuardResist_MaxCorrect",
            "Max Correction: Poison Guard Absorption",
            True,
            float,
            'Maximum value of cut rate correction value for attack power against poison (set as special effect parameter)',
        ),
        ParamFieldInfo(
            "diseaseGuardResist_MaxCorrect",
            "Max Correction: Scarlet Rot Guard Absorption",
            True,
            float,
            'Maximum value of cut rate correction value for attack power against plague (set as special effect parameter)',
        ),
        ParamFieldInfo(
            "bloodGuardResist_MaxCorrect",
            "Max Correction: Hemorrhage Guard Absorption",
            True,
            float,
            'Maximum value of cut rate correction value for attack power against bleeding (set as special effect parameter)',
        ),
        ParamFieldInfo(
            "curseGuardResist_MaxCorrect",
            "Max Correction: Blight Guard Absorption",
            True,
            float,
            'Maximum value of cut rate correction value for attack power against curse (set as special effect parameter)',
        ),
        ParamFieldInfo(
            "freezeGuardResist_MaxCorrect",
            "Max Correction: Frostbite Guard Absorption",
            True,
            float,
            'Maximum value of cut rate correction value for attack power against cold air (set as special effect parameter)',
        ),
        ParamFieldInfo(
            "staminaGuardDef_MaxCorrect",
            "Max Correction: Guard Stability",
            True,
            float,
            "When the guard is successful, the maximum value of the defense power correction value against the enemy's stamina attack",
        ),
        ParamFieldInfo(
            "residentSfxId_1",
            "Resident SFX [1]",
            True,
            int,
            'Resident SfxId1',
        ),
        ParamFieldInfo(
            "residentSfxId_2",
            "Resident SFX [2]",
            True,
            int,
            'Resident SfxId2',
        ),
        ParamFieldInfo(
            "residentSfxId_3",
            "Resident SFX [3]",
            True,
            int,
            'Resident SfxId3',
        ),
        ParamFieldInfo(
            "residentSfxId_4",
            "Resident SFX [4]",
            True,
            int,
            'Resident SfxId4',
        ),
        ParamFieldInfo(
            "residentSfx_DmyId_1",
            "Resident SFX - Dummy Poly [1]",
            True,
            int,
            'Resident Sfx Damipoli Id1',
        ),
        ParamFieldInfo(
            "residentSfx_DmyId_2",
            "Resident SFX - Dummy Poly [2]",
            True,
            int,
            'Resident Sfx Damipoli Id2',
        ),
        ParamFieldInfo(
            "residentSfx_DmyId_3",
            "Resident SFX - Dummy Poly [3]",
            True,
            int,
            'Resident Sfx Damipoli Id3',
        ),
        ParamFieldInfo(
            "residentSfx_DmyId_4",
            "Resident SFX - Dummy Poly [4]",
            True,
            int,
            'Resident Sfx Damipoli Id4',
        ),
        ParamFieldInfo(
            "staminaConsumptionRate",
            "Stamina Consumption %",
            True,
            float,
            'Stamina consumption ratio',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Physics",
            "Vs. Player - Physical Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Magic",
            "Vs. Player - Magic Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Fire",
            "Vs. Player - Fire Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Thunder",
            "Vs. Player - Lightning Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Dark",
            "Vs. Player - Holy Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Poison",
            "Vs. Player - Poison Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Blood",
            "Vs. Player - Hemorrhage Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Freeze",
            "Vs. Player - Frostbite Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "attainmentWepStatusStr",
            "Unique R2 Attack - STR Requirement",
            True,
            int,
            'To change the R2 attack into a special action when the status is X or higher when using a specific weapon.',
        ),
        ParamFieldInfo(
            "attainmentWepStatusDex",
            "Unique R2 Attack - DEX Requirement",
            True,
            int,
            'To change the R2 attack into a special action when the status is X or higher when using a specific weapon.',
        ),
        ParamFieldInfo(
            "attainmentWepStatusMag",
            "Unique R2 Attack - INT Requirement",
            True,
            int,
            'To change the R2 attack into a special action when the status is X or higher when using a specific weapon.',
        ),
        ParamFieldInfo(
            "attainmentWepStatusFai",
            "Unique R2 Attack - FTH Requirement",
            True,
            int,
            'This is to change the R2 attack into a special action when the status is X or higher when using a specific weapon.',
        ),
        ParamFieldInfo(
            "attainmentWepStatusLuc",
            "Unique R2 Attack - ARC Requirement",
            True,
            int,
            'This is to change the R2 attack into a special action when the status is X or higher when using a specific weapon.',
        ),
        ParamFieldInfo(
            "attackElementCorrectId",
            "Attack Element Correct ID",
            True,
            int,
            'ID of the parameter that corrects the attack attribute',
        ),
        ParamFieldInfo(
            "saleValue",
            "Sale Value",
            True,
            int,
            'Selling price',
        ),
        ParamFieldInfo(
            "reinforceShopCategory",
            "Reinforcement Menu Type",
            True,
            int,
            'Enhanced shop category',
        ),
        ParamFieldInfo(
            "maxArrowQuantity",
            "Max Ammunition Held",
            True,
            int,
            'Maximum number of arrows',
        ),
        ParamFieldInfo(
            "residentSfx_1_IsVisibleForHang:1",
            "Hide Resident SFX [1] when Sheathed",
            True,
            int,
            'If "Do you want to display when resident SFX1 is delivered?" Is true, hide the SFX set to "resident SFX ID1" when the weapon is delivered.',
        ),
        ParamFieldInfo(
            "residentSfx_2_IsVisibleForHang:1",
            "Hide Resident SFX [2] when Sheathed",
            True,
            int,
            'If "Do you want to display when resident SFX2 is delivered?" Is true, hide the SFX set to "resident SFX ID2" when the weapon is delivered.',
        ),
        ParamFieldInfo(
            "residentSfx_3_IsVisibleForHang:1",
            "Hide Resident SFX [3] when Sheathed",
            True,
            int,
            'If "Do you want to display when resident SFX3 is delivered?" Is true, hide the SFX set to "resident SFX ID3" when the weapon is delivered.',
        ),
        ParamFieldInfo(
            "residentSfx_4_IsVisibleForHang:1",
            "Hide Resident SFX [4] when Sheathed",
            True,
            int,
            'If "Do you want to display when resident SFX4 is delivered?" Is true, hide the SFX set to "resident SFX ID 4" when the weapon is delivered.',
        ),
        ParamFieldInfo(
            "isSoulParamIdChange_model0:1",
            "Apply Weapon VFX Parameters [0]",
            True,
            int,
            'Whether the vfx parameter "Soul Param ID for Weapon Enchantment" and "Invisible Weapon for Weapon Enchantment" settings are applied',
        ),
        ParamFieldInfo(
            "isSoulParamIdChange_model1:1",
            "Apply Weapon VFX Parameters [1]",
            True,
            int,
            'Whether the vfx parameter "Soul Param ID for Weapon Enchantment" and "Invisible Weapon for Weapon Enchantment" settings are applied',
        ),
        ParamFieldInfo(
            "isSoulParamIdChange_model2:1",
            "Apply Weapon VFX Parameters [2]",
            True,
            int,
            'Whether the vfx parameter "Soul Param ID for Weapon Enchantment" and "Invisible Weapon for Weapon Enchantment" settings are applied',
        ),
        ParamFieldInfo(
            "isSoulParamIdChange_model3:1",
            "Apply Weapon VFX Parameters [3]",
            True,
            int,
            'Whether the vfx parameter "Soul Param ID for Weapon Enchantment" and "Invisible Weapon for Weapon Enchantment" settings are applied',
        ),
        ParamFieldInfo(
            "wepSeIdOffset",
            "Weapon SE ID Offset",
            True,
            int,
            'SEID offset value',
        ),
        ParamFieldInfo(
            "baseChangePrice",
            "Affinity Price",
            True,
            int,
            'Evolution price',
        ),
        ParamFieldInfo(
            "levelSyncCorrectId",
            "Level Sync Correction ID",
            True,
            int,
            'Level sync correction ID',
        ),
        ParamFieldInfo(
            "correctType_Sleep",
            "Correction Type: Sleep",
            True,
            int,
            'Determine the type of sleep attack correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "correctType_Madness",
            "Correction Type: Madness",
            True,
            int,
            'Determining the type of mad attack power correction graph with primary parameters',
        ),
        ParamFieldInfo(
            "rarity",
            "Rarity",
            True,
            int,
            'Rarity used in item acquisition logs',
        ),
        ParamFieldInfo(
            "gemMountType",
            "Ash of War Type",
            True,
            int,
            'Is it possible to attach magic stones?',
        ),
        ParamFieldInfo(
            "wepRegainHp",
            "Weapon Regain HP Amount",
            True,
            int,
            'Weapon regain amount',
        ),
        ParamFieldInfo(
            "spEffectMsgId0",
            "SpEffect Message ID [0]",
            True,
            int,
            'Effect text ID 00 (Weapon_Effect). Weapon-specific effect text to display in status',
        ),
        ParamFieldInfo(
            "spEffectMsgId1",
            "SpEffect Message ID [1]",
            True,
            int,
            'Effect text ID 01 (Weapon_Effect). Weapon-specific effect text to display in status',
        ),
        ParamFieldInfo(
            "spEffectMsgId2",
            "SpEffect Message ID [2]",
            True,
            int,
            'Effect text ID 02 (Weapon_Effect). Weapon-specific effect text to display in status',
        ),
        ParamFieldInfo(
            "originEquipWep16",
            "Origin Weapon +16",
            True,
            int,
            "This weapon's enhancement source weapon ID 16",
        ),
        ParamFieldInfo(
            "originEquipWep17",
            "Origin Weapon +17",
            True,
            int,
            "This weapon's enhancement source weapon ID 17",
        ),
        ParamFieldInfo(
            "originEquipWep18",
            "Origin Weapon +18",
            True,
            int,
            "This weapon's enhancement source weapon ID18",
        ),
        ParamFieldInfo(
            "originEquipWep19",
            "Origin Weapon +19",
            True,
            int,
            "This weapon's enhancement source weapon ID 19",
        ),
        ParamFieldInfo(
            "originEquipWep20",
            "Origin Weapon +20",
            True,
            int,
            "This weapon's enhancement source weapon ID 20",
        ),
        ParamFieldInfo(
            "originEquipWep21",
            "Origin Weapon +21",
            True,
            int,
            "This weapon's enhancement source weapon ID21",
        ),
        ParamFieldInfo(
            "originEquipWep22",
            "Origin Weapon +22",
            True,
            int,
            "This weapon's enhancement source weapon ID 22",
        ),
        ParamFieldInfo(
            "originEquipWep23",
            "Origin Weapon +23",
            True,
            int,
            "This weapon's enhancement source weapon ID 23",
        ),
        ParamFieldInfo(
            "originEquipWep24",
            "Origin Weapon +24",
            True,
            int,
            "This weapon's enhancement source weapon ID 24",
        ),
        ParamFieldInfo(
            "originEquipWep25",
            "Origin Weapon +25",
            True,
            int,
            "This weapon's enhancement source weapon ID 25",
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Sleep",
            "Vs. Player - Sleep Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Madness",
            "Vs. Player - Madness Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "saGuardCutRate",
            "Poise Damage - Guard Absorption",
            True,
            float,
            'SA damage cut rate when guard is successful',
        ),
        ParamFieldInfo(
            "defMaterialVariationValue",
            "Defence Material - Variation Value",
            True,
            int,
            'It is a value used to divide the damage SFX and SE into variations in combination with the defense material used when guarding. SEQ16473',
        ),
        ParamFieldInfo(
            "spAttributeVariationValue",
            "Special Attribute - Variation Value",
            True,
            int,
            'It is a value used to give variation to abnormal state SFX, SE, etc. in combination with the special attribute of the weapon. SEQ16473',
        ),
        ParamFieldInfo(
            "stealthAtkRate",
            "Stealth Attack Multiplier",
            True,
            int,
            'Applies additional multiplier to baseline stealth attack multiplier. For example: 10 = 110%.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Disease",
            "Vs. Player - Scarlet Rot Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "vsPlayerDmgCorrectRate_Curse",
            "Vs. Player - Blight Damage %",
            True,
            float,
            'Only attacks on the player will correct the damage done.',
        ),
        ParamFieldInfo(
            "pad[8]",
            "pad",
            False,
            pad_field(8),
            'pad',
        ),
    ],
}
