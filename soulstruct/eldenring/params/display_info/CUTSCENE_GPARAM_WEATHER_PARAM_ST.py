from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


CUTSCENE_GPARAM_WEATHER_PARAM_ST = {
    "param_type": "CUTSCENE_GPARAM_WEATHER_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "disableParam_NT:1",
            "Disable Param - Network Test",
            True,
            int,
            'Parameters marked with �� are excluded in the NT version package.',
        ),
        ParamFieldInfo(
            "disableParam_Debug:1",
            "Disable Param - Debug",
            True,
            int,
            'Parameters marked with a circle are excluded from all packages (because they are for debugging).',
        ),
        ParamFieldInfo(
            "disableParamReserve1:6",
            "Reserve for package output 1",
            False,
            bit_pad_field(6),
            'Reserve for package output 1',
        ),
        ParamFieldInfo(
            "disableParamReserve2[3]",
            "Reserve for package output 2",
            False,
            pad_field(3),
            'Reserve for package output 2',
        ),
        ParamFieldInfo(
            "DstWeather_Sunny",
            "Destination Weather: Sunny",
            True,
            int,
            'Sunny',
        ),
        ParamFieldInfo(
            "DstWeather_ClearSky",
            "Destination Weather: Clear Sky",
            True,
            int,
            'Sunny',
        ),
        ParamFieldInfo(
            "DstWeather_WeakCloudy",
            "Destination Weather: Light Cloud",
            True,
            int,
            'Light cloudy',
        ),
        ParamFieldInfo(
            "DstWeather_Cloud",
            "Destination Weather: Cloud",
            True,
            int,
            'cloudy',
        ),
        ParamFieldInfo(
            "DstWeather_Rain",
            "Destination Weather: Rain",
            True,
            int,
            'rain',
        ),
        ParamFieldInfo(
            "DstWeather_HeavyRain",
            "Destination Weather: Heavy Rain",
            True,
            int,
            'Heavy rain',
        ),
        ParamFieldInfo(
            "DstWeather_Storm",
            "Destination Weather: Storm",
            True,
            int,
            'storm',
        ),
        ParamFieldInfo(
            "DstWeather_StormForBattle",
            "Destination Weather: Storm for Battle",
            True,
            int,
            'Storm (for combat with the descendants of the guardian)',
        ),
        ParamFieldInfo(
            "DstWeather_Snow",
            "Destination Weather: Snow",
            True,
            int,
            'snow',
        ),
        ParamFieldInfo(
            "DstWeather_HeavySnow",
            "Destination Weather: Heavy Snow",
            True,
            int,
            'heavy snow',
        ),
        ParamFieldInfo(
            "DstWeather_Fog",
            "Destination Weather: Fog",
            True,
            int,
            'fog',
        ),
        ParamFieldInfo(
            "DstWeather_HeavyFog",
            "Destination Weather: Heavy Fog",
            True,
            int,
            'Thick fog',
        ),
        ParamFieldInfo(
            "DstWeather_SandStorm",
            "Destination Weather: Sandstorm",
            True,
            int,
            'Sandstorm',
        ),
        ParamFieldInfo(
            "DstWeather_HeavyFogRain",
            "Destination Weather: Heavy Fog and Rain",
            True,
            int,
            'Thick fog (rain)',
        ),
        ParamFieldInfo(
            "PostPlayIngameWeather",
            "Post Cutscene In-game Weather",
            True,
            int,
            'In-game weather specifications at the end of playback (nothing is done if blank or "invalid")',
        ),
        ParamFieldInfo(
            "IndoorOutdoorType",
            "Indoor/Outdoor Type",
            True,
            int,
            'When indoors, the SFX specified by "Weather SfxId (Outdoor)" and "Wind SfxId (Outdoor)" in "Weather Parameter.xlsm" will be invalid in the cutscene.',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Sunny",
            "Replacement Weather: Sunny",
            True,
            int,
            'In-game weather SFX to take over? _Sunny',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_ClearSky",
            "Replacement Weather: Clear Sky",
            True,
            int,
            'In-game weather SFX to take over? _ Sunny',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_WeakCloudy",
            "Replacement Weather: Light Cloud",
            True,
            int,
            'Will the in-game weather SFX be taken over? _ Light cloudy',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Cloud",
            "Replacement Weather: Cloud",
            True,
            int,
            'Will the in-game weather SFX be taken over? _cloudy',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Rain",
            "Replacement Weather: Rain",
            True,
            int,
            'In-game weather SFX to take over? _rain',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_HeavyRain",
            "Replacement Weather: Heavy Rain",
            True,
            int,
            'In-game weather SFX to take over? _ Heavy rain',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Storm",
            "Replacement Weather: Storm",
            True,
            int,
            'In-game weather SFX to take over? _storm',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_StormForBattle",
            "Replacement Weather: Storm for Battle",
            True,
            int,
            'In-game weather SFX to take over? _ Storm (for battle with the descendants of the guardian)',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Snow",
            "Replacement Weather: Snow",
            True,
            int,
            'In-game weather SFX to take over? _snow',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_HeavySnow",
            "Replacement Weather: Heavy Snow",
            True,
            int,
            'In-game weather SFX to take over? _heavy snow',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Fog",
            "Replacement Weather: Fog",
            True,
            int,
            'Will the in-game weather SFX be taken over? _fog',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_HeavyFog",
            "Replacement Weather: Heavy Fog",
            True,
            int,
            'Will the in-game weather SFX be taken over? _ Thick fog',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_SandStorm",
            "Replacement Weather: Sandstorm",
            True,
            int,
            'In-game weather SFX to take over? _ Sandstorm',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_HeavyFogRain",
            "Replacement Weather: Heavy Fog and Rain",
            True,
            int,
            'In-game weather SFX to take over? _ Thick fog (rain)',
        ),
        ParamFieldInfo(
            "reserved[7]",
            "reserved",
            False,
            pad_field(7),
            'reserved',
        ),
        ParamFieldInfo(
            "DstWeather_Snowstorm",
            "Destination Weather: Snowstorm",
            True,
            int,
            'Snowstorm',
        ),
        ParamFieldInfo(
            "DstWeather_LightningStorm",
            "Destination Weather: Lightning Storm",
            True,
            int,
            'Preliminary weather 2',
        ),
        ParamFieldInfo(
            "DstWeather_Reserved3",
            "Destination Weather: Reserved 3",
            True,
            int,
            'Preliminary weather 3',
        ),
        ParamFieldInfo(
            "DstWeather_Reserved4",
            "Destination Weather: Reserved 4",
            True,
            int,
            'Preliminary weather 4',
        ),
        ParamFieldInfo(
            "DstWeather_Reserved5",
            "Destination Weather: Reserved 5",
            True,
            int,
            'Preliminary weather 5',
        ),
        ParamFieldInfo(
            "DstWeather_Reserved6",
            "Destination Weather: Reserved 6",
            True,
            int,
            'Preliminary weather 6',
        ),
        ParamFieldInfo(
            "DstWeather_Reserved7",
            "Destination Weather: Reserved 7",
            True,
            int,
            'Preliminary weather 7',
        ),
        ParamFieldInfo(
            "DstWeather_Reserved8",
            "Destination Weather: Reserved 8",
            True,
            int,
            'Preliminary weather 8',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Snowstorm",
            "Replacement Weather: Snowstorm",
            True,
            int,
            'In-game weather SFX to take over? _ Snowstorm',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_LightningStorm",
            "Replacement Weather: Lightning Storm",
            True,
            int,
            'In-game weather SFX to take over? _ Storm (thunder)',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Reserved3",
            "Replacement Weather: Reserved 3",
            True,
            int,
            'Will the in-game weather SFX be taken over? _ Preliminary weather 3',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Reserved4",
            "Replacement Weather: Reserved 4",
            True,
            int,
            'In-game weather SFX to take over? _ Preliminary weather 4',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Reserved5",
            "Replacement Weather: Reserved 5",
            True,
            int,
            'Will the in-game weather SFX be taken over? _ Preliminary weather 5',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Reserved6",
            "Replacement Weather: Reserved 6",
            True,
            int,
            'Will the in-game weather SFX be taken over? _ Preliminary weather 6',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Reserved7",
            "Replacement Weather: Reserved 7",
            True,
            int,
            'Will the in-game weather SFX be taken over? _ Preliminary weather 7',
        ),
        ParamFieldInfo(
            "TakeOverDstWeather_Reserved8",
            "Replacement Weather: Reserved 8",
            True,
            int,
            'In-game weather SFX to take over? _ Preliminary weather 8',
        ),
        ParamFieldInfo(
            "IsEnableApplyMapGdRegionIdForGparam",
            "Apply MapGdRegionID for GPARAM Enabled",
            True,
            int,
            'Do you want to apply the mapGD local ID changes to the cutscene weather Gparam as in the in-game? ([GR] SEQ30194)',
        ),
        ParamFieldInfo(
            "reserved2[1]",
            "reserved1",
            False,
            pad_field(1),
            'reserved1 ver4-> 5 64-> 96',
        ),
        ParamFieldInfo(
            "OverrideMapGdRegionId",
            "Override MapGdRegion ID",
            True,
            int,
            'Overwrite the ID used for cutscene weather Gparam (-1: No overwrite. MapGD local ID during cutscene playback is used). If "Do you want to apply MapGD local ID to weather Gparam?" Is x, it is not referenced.',
        ),
        ParamFieldInfo(
            "reserved1[12]",
            "reserved1",
            False,
            pad_field(12),
            'reserved1 ver4-> 5 64-> 96',
        ),
    ],
}
