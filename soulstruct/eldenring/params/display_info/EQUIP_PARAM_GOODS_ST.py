from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


EQUIP_PARAM_GOODS_ST = {
    "param_type": "EQUIP_PARAM_GOODS_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "disableParam_NT:1",
            "Disable Param - Network Test",
            True,
            int,
            'Parameters marked with �� are excluded in the NT version package.',
        ),
        ParamFieldInfo(
            "disableParamReserve1:7",
            "Reserve for package output 1",
            False,
            bit_pad_field(7),
            'Reserve for package output 1',
        ),
        ParamFieldInfo(
            "disableParamReserve2[3]",
            "Reserve for package output 2",
            False,
            pad_field(3),
            'Reserve for package output 2',
        ),
        ParamFieldInfo(
            "refId_default",
            "Reference ID",
            True,
            int,
            'ID0 called from the item (default)',
        ),
        ParamFieldInfo(
            "sfxVariationId",
            "SFX Variation ID",
            True,
            int,
            'Specify SFX variation (used to identify SFX in combination with TimeActEditor ID)',
        ),
        ParamFieldInfo(
            "weight",
            "Weight",
            True,
            float,
            'Weight [kg]',
        ),
        ParamFieldInfo(
            "basicPrice",
            "Basic Price",
            True,
            int,
            'Basic price',
        ),
        ParamFieldInfo(
            "sellValue",
            "Sell Value",
            True,
            int,
            'Selling price',
        ),
        ParamFieldInfo(
            "behaviorId",
            "Behavior ID",
            True,
            int,
            'Set the effect that occurs when using a tool',
        ),
        ParamFieldInfo(
            "replaceItemId",
            "Replace Item ID",
            True,
            int,
            'Item ID when replacing',
        ),
        ParamFieldInfo(
            "sortId",
            "Sort ID",
            True,
            int,
            'Sort ID (-1: Do not collect)',
        ),
        ParamFieldInfo(
            "appearanceReplaceItemId",
            "Appearance Replace Item ID",
            True,
            int,
            'Conditionally replace the display with another tool ID. The tool ID on the game data side does not change',
        ),
        ParamFieldInfo(
            "yesNoDialogMessageId",
            "Dialog Message ID",
            True,
            int,
            'YesNo Message ID used when displaying the dialog',
        ),
        ParamFieldInfo(
            "useEnableSpEffectType",
            "Use Enable SpEffect Type",
            True,
            int,
            'Allow to use only when the special effect of the set state change type is applied',
        ),
        ParamFieldInfo(
            "potGroupId",
            "Pot Group ID",
            True,
            int,
            '"Consumable items" for which 0 or more is set for the pot group ID can be possessed by the number of "pots" with the same pot group ID.',
        ),
        ParamFieldInfo(
            "pad[1]",
            "PAD",
            False,
            pad_field(1),
            'Old (magic ID linked to a scroll)',
        ),
        ParamFieldInfo(
            "iconId",
            "Icon ID",
            True,
            int,
            'Menu icon ID',
        ),
        ParamFieldInfo(
            "modelId",
            "Model ID",
            True,
            int,
            'Model ID',
        ),
        ParamFieldInfo(
            "shopLv",
            "Shop Level",
            True,
            int,
            'Level that can be sold at the store',
        ),
        ParamFieldInfo(
            "compTrophySedId",
            "Achivement ID",
            True,
            int,
            'SEQ number of complete trophy',
        ),
        ParamFieldInfo(
            "trophySeqId",
            "Achivement Sequential ID",
            True,
            int,
            'Trophy SEQ number',
        ),
        ParamFieldInfo(
            "maxNum",
            "Max Amount",
            True,
            int,
            'Maximum number of possessions',
        ),
        ParamFieldInfo(
            "consumeHeroPoint",
            "Consume Humanity",
            True,
            int,
            'Consumer nature',
        ),
        ParamFieldInfo(
            "overDexterity",
            "Over Dexterity",
            True,
            int,
            'Skill over start value',
        ),
        ParamFieldInfo(
            "goodsType",
            "Goods Type",
            True,
            int,
            'Types of tools',
        ),
        ParamFieldInfo(
            "refCategory",
            "Reference Type",
            True,
            int,
            '�� ID category [Attack, Projectile, Special]',
        ),
        ParamFieldInfo(
            "spEffectCategory",
            "SpEffect Category",
            True,
            int,
            'Since there are effects (enchantment weapons, etc.) whose parameters fluctuate depending on skills, magic, items, etc., set each action so that the determined effect can correspond to the effect such as "power up only weapon attack". Set "None" for items that do not need to be set, such as varistor.',
        ),
        ParamFieldInfo(
            "pad3[1]",
            "pad",
            False,
            pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "goodsUseAnim",
            "Goods Use Animation",
            True,
            int,
            'Set the animation to play when using the tool',
        ),
        ParamFieldInfo(
            "opmeMenuType",
            "Interaction Menu Type",
            True,
            int,
            'Menu type that opens when using an item',
        ),
        ParamFieldInfo(
            "useLimitCategory",
            "Use Limit Category",
            True,
            int,
            'Specified to control whether it can be used by the special effect applied',
        ),
        ParamFieldInfo(
            "replaceCategory",
            "Replace Category",
            True,
            int,
            'Condition category to add to call ID',
        ),
        ParamFieldInfo(
            "reserve4[2]",
            "Reserve",
            False,
            pad_field(2),
            '',
        ),
        ParamFieldInfo(
            "enable_live:1",
            "Enable Host Player",
            True,
            int,
            'Is it possible to use a surviving player?',
        ),
        ParamFieldInfo(
            "enable_gray:1",
            "Enable as Gray Phantom",
            True,
            int,
            'Can Gray Ghost be used?',
        ),
        ParamFieldInfo(
            "enable_white:1",
            "Enable as White Phantom",
            True,
            int,
            'Can white ghost be used?',
        ),
        ParamFieldInfo(
            "enable_black:1",
            "Enable as Black Phantom",
            True,
            int,
            'Is it possible to do a black ghost?',
        ),
        ParamFieldInfo(
            "enable_multi:1",
            "Enable in Multiplayer",
            True,
            int,
            'Can it be used during multiplayer?',
        ),
        ParamFieldInfo(
            "disable_offline:1",
            "Enable Online Only",
            True,
            int,
            'Is it unavailable while offline?',
        ),
        ParamFieldInfo(
            "isEquip:1",
            "Is Equippable",
            True,
            int,
            'Whether it can be equipped',
        ),
        ParamFieldInfo(
            "isConsume:1",
            "Is Consumed",
            True,
            int,
            'Will it be consumed when used (whether the number of possessions will decrease)',
        ),
        ParamFieldInfo(
            "isAutoEquip:1",
            "Is Auto Equipped",
            True,
            int,
            'Will it be equipped automatically when picked up?',
        ),
        ParamFieldInfo(
            "isEstablishment:1",
            "Is Guidance Item",
            True,
            int,
            'Is it a stationary item?',
        ),
        ParamFieldInfo(
            "isOnlyOne:1",
            "Is Unique Item",
            True,
            int,
            'Is it an item that you can only have one?',
        ),
        ParamFieldInfo(
            "isDiscard:1",
            "Can Discard",
            True,
            int,
            'Can you throw away the item? TRUE = thrown away',
        ),
        ParamFieldInfo(
            "isDeposit:1",
            "Can Deposit",
            True,
            int,
            'Can you leave it in the warehouse?',
        ),
        ParamFieldInfo(
            "isDisableHand:1",
            "Disable if Right Hand is Empty",
            True,
            int,
            "Can't be used when the right-handed weapon is bare-handed?",
        ),
        ParamFieldInfo(
            "isRemoveItem_forGameClear:1",
            "Remove Item on Game Clear",
            True,
            int,
            'Whether to delete at the time of lap',
        ),
        ParamFieldInfo(
            "isSuppleItem:1",
            "Is Regenerative Item",
            True,
            int,
            'Used to determine replenishable items',
        ),
        ParamFieldInfo(
            "isFullSuppleItem:1",
            "Is Full Regenerative Item",
            True,
            int,
            'Used to determine replenished items',
        ),
        ParamFieldInfo(
            "isEnhance:1",
            "Is Enhancement Item",
            True,
            int,
            'Do you want to enchant your weapon?',
        ),
        ParamFieldInfo(
            "isFixItem:1",
            "Can Repair Item",
            True,
            int,
            'Is it an item to repair?',
        ),
        ParamFieldInfo(
            "disableMultiDropShare:1",
            "Disable Dropping in Multiplayer",
            True,
            int,
            'Is multi-drop sharing prohibited?',
        ),
        ParamFieldInfo(
            "disableUseAtColiseum:1",
            "Disable Usage in Multiplayer Arena",
            True,
            int,
            'Is it prohibited to use in the arena?',
        ),
        ParamFieldInfo(
            "disableUseAtOutOfColiseum:1",
            "Disable Usage outside of Multiplayer Arena",
            True,
            int,
            'Is it prohibited to use outside the arena?',
        ),
        ParamFieldInfo(
            "isEnableFastUseItem:1",
            "Can Cancel Application Early",
            True,
            int,
            'Is it possible to cancel early?',
        ),
        ParamFieldInfo(
            "isApplySpecialEffect:1",
            "Apply SpEffect Modifiers",
            True,
            int,
            'Whether to reflect special effects (such as ability value correction)',
        ),
        ParamFieldInfo(
            "syncNumVaryId",
            "Synchronized Item Usage ID",
            True,
            int,
            'When the number of items is changed, the items with the same ID will be changed at the same time. 0: Not synchronized',
        ),
        ParamFieldInfo(
            "refId_1",
            "Reference ID - Left Hand",
            True,
            int,
            'ID1 called from the item',
        ),
        ParamFieldInfo(
            "refVirtualWepId",
            "Weapon Reference ID",
            True,
            int,
            'Weapon ID to refer to when using the tool',
        ),
        ParamFieldInfo(
            "vagrantItemLotId",
            "Vagrant Item Lot ID",
            True,
            int,
            '-1: No vagrant 0: No lottery 1 ~: With lottery',
        ),
        ParamFieldInfo(
            "vagrantBonusEneDropItemLotId",
            "Vagrant Enemy Item Lot ID",
            True,
            int,
            '-1: No drop 0: No lottery 1 ~: With lottery',
        ),
        ParamFieldInfo(
            "vagrantItemEneDropItemLotId",
            "Vagrant Bonus Item Lot ID",
            True,
            int,
            '-1: No drop 0: No lottery 1 ~: With lottery',
        ),
        ParamFieldInfo(
            "castSfxId",
            "Usage VFX - Cast",
            True,
            int,
            'SFXID until the effect is activated when you try to use the item',
        ),
        ParamFieldInfo(
            "fireSfxId",
            "Usage VFX  - Activate",
            True,
            int,
            'SFX ID when the item is activated',
        ),
        ParamFieldInfo(
            "effectSfxId",
            "Usage VFX - Effect",
            True,
            int,
            'After the item is activated, the SFX ID in effect',
        ),
        ParamFieldInfo(
            "enable_ActiveBigRune:1",
            "Usable with Great Rune Active",
            True,
            int,
            'Can it be used with a large rune activated?',
        ),
        ParamFieldInfo(
            "isBonfireWarpItem:1",
            "Is Bonfire Warp Item",
            True,
            int,
            'If the state change type "Warp Prohibition" is applied when TRUE, remove the function to disable the item.',
        ),
        ParamFieldInfo(
            "enable_Ladder:1",
            "Enable on Ladder",
            True,
            int,
            'Check here for items available in the ladder',
        ),
        ParamFieldInfo(
            "isUseMultiPlayPreparation:1",
            "Usable before Multiplayer Session",
            True,
            int,
            'Whether items can be used between session probability and initial synchronization',
        ),
        ParamFieldInfo(
            "canMultiUse:1",
            "Usable in Multiplayer",
            True,
            int,
            'Can it be used together?',
        ),
        ParamFieldInfo(
            "isShieldEnchant:1",
            "Is Shield Enchantment",
            True,
            int,
            'Is it a shield enchantment?',
        ),
        ParamFieldInfo(
            "isWarpProhibited:1",
            "Is Warp Prohibited",
            True,
            int,
            'When this is TRUE, disable the item if the state change type "Warp Prohibition" is applied.',
        ),
        ParamFieldInfo(
            "isUseMultiPenaltyOnly:1",
            "Usable if Disconnect Penalty is Active",
            True,
            int,
            'A flag that allows you to determine if an item is only available when a client disconnect penalty is incurred.',
        ),
        ParamFieldInfo(
            "suppleType",
            "Regenerative Item Type",
            True,
            int,
            'Replenishment item / Replenishment type when replenishing a replenished item.',
        ),
        ParamFieldInfo(
            "autoReplenishType",
            "Auto Replenishment Type",
            True,
            int,
            'Controls whether or not to automatically replenish and default settings',
        ),
        ParamFieldInfo(
            "isDrop:1",
            "Can be Dropped",
            True,
            int,
            'Can I put the item on the spot? TRUE = can be placed',
        ),
        ParamFieldInfo(
            "showLogCondType:1",
            "Item Acquisition Log Condition Type",
            True,
            int,
            'Whether to display in the item acquisition log when acquiring the item (not entered: ��)',
        ),
        ParamFieldInfo(
            "isSummonHorse:1",
            "Is Horse Summon",
            True,
            int,
            'Is it an item that summons a horse? Cannot be used if the horse died or the PC is in a horse-prohibited area',
        ),
        ParamFieldInfo(
            "showDialogCondType:2",
            "Item Acquisition Dialog Condition Type",
            True,
            int,
            'Whether to display it in the item acquisition dialog when acquiring an item (not entered: new only)',
        ),
        ParamFieldInfo(
            "isSleepCollectionItem:1",
            "Is Sleep Collection Item",
            True,
            int,
            'Is it a Nemuri collection item?',
        ),
        ParamFieldInfo(
            "enableRiding:1",
            "Enabled while Riding",
            True,
            int,
            'Can it be used while riding?',
        ),
        ParamFieldInfo(
            "disableRiding:1",
            "Disabled while Riding",
            True,
            int,
            'Is it prohibited to use while not riding?',
        ),
        ParamFieldInfo(
            "maxRepositoryNum",
            "Max Number Stored in Itembox",
            True,
            int,
            'Number of warehouses',
        ),
        ParamFieldInfo(
            "sortGroupId",
            "Sort Group ID",
            True,
            int,
            'Sort item type ID. In the sort "Item type order", the same ID is displayed together as the same group.',
        ),
        ParamFieldInfo(
            "isUseNoAttackRegion:1",
            "Enabled in No Attack Region",
            True,
            int,
            'Can it be used in an attack-prohibited area?',
        ),
        ParamFieldInfo(
            "pad1:7",
            "pad",
            False,
            bit_pad_field(7),
            '(Old log icon)',
        ),
        ParamFieldInfo(
            "saleValue",
            "Sale Value",
            True,
            int,
            'Selling price',
        ),
        ParamFieldInfo(
            "rarity",
            "Rarity",
            True,
            int,
            'Rarity used in item acquisition logs',
        ),
        ParamFieldInfo(
            "useLimitSummonBuddy",
            "Use Limit - Spirit Summon",
            True,
            int,
            'Whether there are item usage restrictions for buddy items',
        ),
        ParamFieldInfo(
            "useLimitSpEffectType",
            "Use Limit - SpEffect Type",
            True,
            int,
            'Specified to control whether it can be used depending on the state change type of the special effect applied',
        ),
        ParamFieldInfo(
            "aiUseJudgeId",
            "AI Usage Judgment ID",
            True,
            int,
            'AI usage judgment ID',
        ),
        ParamFieldInfo(
            "consumeMP",
            "FP Cost",
            True,
            int,
            'MP consumption',
        ),
        ParamFieldInfo(
            "consumeHP",
            "HP Cost",
            True,
            int,
            'HP consumed',
        ),
        ParamFieldInfo(
            "reinforceGoodsId",
            "Reinforcement Goods ID",
            True,
            int,
            'Strengthening tool ID',
        ),
        ParamFieldInfo(
            "reinforceMaterialId",
            "Reinforcement Material ID",
            True,
            int,
            'Material ID at the time of strengthening',
        ),
        ParamFieldInfo(
            "reinforcePrice",
            "Reinforcement Cost",
            True,
            int,
            'Enhanced price',
        ),
        ParamFieldInfo(
            "useLevel_vowType0",
            "Use Level - Vow Level [0]",
            True,
            int,
            'Pledge 0 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType1",
            "Use Level - Vow Level [1]",
            True,
            int,
            'Pledge 1 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType2",
            "Use Level - Vow Level [2]",
            True,
            int,
            'Pledge 2 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType3",
            "Use Level - Vow Level [3]",
            True,
            int,
            'Pledge 3 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType4",
            "Use Level - Vow Level [4]",
            True,
            int,
            'Pledge 4 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType5",
            "Use Level - Vow Level [5]",
            True,
            int,
            'Pledge 5 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType6",
            "Use Level - Vow Level [6]",
            True,
            int,
            'Pledge 6 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType7",
            "Use Level - Vow Level [7]",
            True,
            int,
            'Pledge 7 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType8",
            "Use Level - Vow Level [8]",
            True,
            int,
            'Pledge 8 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType9",
            "Use Level - Vow Level [9]",
            True,
            int,
            'Pledge 9 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType10",
            "Use Level - Vow Level [10]",
            True,
            int,
            'Pledge 10 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType11",
            "Use Level - Vow Level [11]",
            True,
            int,
            'Pledge 11 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType12",
            "Use Level - Vow Level [12]",
            True,
            int,
            'Pledge 12 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType13",
            "Use Level - Vow Level [13]",
            True,
            int,
            'Pledge 13 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType14",
            "Use Level - Vow Level [14]",
            True,
            int,
            'Pledge 14 usage level',
        ),
        ParamFieldInfo(
            "useLevel_vowType15",
            "Use Level - Vow Level [15]",
            True,
            int,
            'Pledge 15 usage level',
        ),
        ParamFieldInfo(
            "useLevel",
            "Use Level",
            True,
            int,
            'Appropriate level of use',
        ),
        ParamFieldInfo(
            "reserve5[2]",
            "Reserved area",
            False,
            pad_field(2),
            'Reserved area',
        ),
        ParamFieldInfo(
            "itemGetTutorialFlagId",
            "Item Get Tutorial Flag ID",
            True,
            int,
            'Event flag ID for the tutorial when you first get the item. Flag ON when item is obtained.',
        ),
        ParamFieldInfo(
            "reserve3[8]",
            "Reserved area",
            False,
            pad_field(8),
            'Reserved area',
        ),
    ],
}
