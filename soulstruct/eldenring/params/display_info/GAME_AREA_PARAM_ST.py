from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


GAME_AREA_PARAM_ST = {
    "param_type": "GAME_AREA_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "disableParam_NT:1",
            "Disable Param - Network Test",
            True,
            int,
            'Parameters marked with �� are excluded in the NT version package.',
        ),
        ParamFieldInfo(
            "disableParamReserve1:7",
            "Reserve for package output 1",
            False,
            bit_pad_field(7),
            'Reserve for package output 1',
        ),
        ParamFieldInfo(
            "disableParamReserve2[3]",
            "Reserve for package output 2",
            False,
            pad_field(3),
            'Reserve for package output 2',
        ),
        ParamFieldInfo(
            "bonusSoul_single",
            "Bonus Runes - Singleplayer",
            True,
            int,
            'Amount of soul that can be obtained when defeating an area boss (in single play)',
        ),
        ParamFieldInfo(
            "bonusSoul_multi",
            "Bonus Runes - Multiplayer",
            True,
            int,
            'Amount of soul that can be obtained when defeating an area boss (during multiplayer)',
        ),
        ParamFieldInfo(
            "humanityPointCountFlagIdTop",
            "Humanity Point Count Flag ID",
            True,
            int,
            'First flag ID for managing humanity drop points (using 20 Bit)',
        ),
        ParamFieldInfo(
            "humanityDropPoint1",
            "Humanity Drop Threshold [1]",
            True,
            int,
            'Threshold for acquiring humanity 1',
        ),
        ParamFieldInfo(
            "humanityDropPoint2",
            "Humanity Drop Threshold [2]",
            True,
            int,
            'Threshold 2 for acquiring humanity',
        ),
        ParamFieldInfo(
            "humanityDropPoint3",
            "Humanity Drop Threshold [3]",
            True,
            int,
            'Threshold 3 for acquiring humanity',
        ),
        ParamFieldInfo(
            "humanityDropPoint4",
            "Humanity Drop Threshold [4]",
            True,
            int,
            'Threshold 4 for acquiring humanity',
        ),
        ParamFieldInfo(
            "humanityDropPoint5",
            "Humanity Drop Threshold [5]",
            True,
            int,
            'Threshold 5 for acquiring humanity',
        ),
        ParamFieldInfo(
            "humanityDropPoint6",
            "Humanity Drop Threshold [6]",
            True,
            int,
            'Threshold 6 for acquiring humanity',
        ),
        ParamFieldInfo(
            "humanityDropPoint7",
            "Humanity Drop Threshold [7]",
            True,
            int,
            'Threshold for acquiring humanity 7',
        ),
        ParamFieldInfo(
            "humanityDropPoint8",
            "Humanity Drop Threshold [8]",
            True,
            int,
            'Threshold for acquiring humanity 8',
        ),
        ParamFieldInfo(
            "humanityDropPoint9",
            "Humanity Drop Threshold [9]",
            True,
            int,
            'Threshold for acquiring humanity 9',
        ),
        ParamFieldInfo(
            "humanityDropPoint10",
            "Humanity Drop Threshold [10]",
            True,
            int,
            'Threshold 10 for acquiring humanity',
        ),
        ParamFieldInfo(
            "soloBreakInPoint_Min",
            "Min Invasion Spawns added after Boss Defeat",
            True,
            int,
            'The minimum value of solo intrusion points to be added when defeating an area boss.',
        ),
        ParamFieldInfo(
            "soloBreakInPoint_Max",
            "Max Invasion Spawns added after Boss Defeat",
            True,
            int,
            'The maximum value of solo intrusion points to be added when defeating an area boss.',
        ),
        ParamFieldInfo(
            "defeatBossFlagId_forSignAimList",
            "Boss Defeat Flag - For Purpose List",
            True,
            int,
            'If this flag is ON, it will not be displayed in the list of purpose settings at the time of hosting. If it is 0, it is always displayed.',
        ),
        ParamFieldInfo(
            "displayAimFlagId",
            "Display Purpose Flag ID",
            True,
            int,
            '',
        ),
        ParamFieldInfo(
            "foundBossFlagId",
            "Discovered Boss Flag ID",
            True,
            int,
            '',
        ),
        ParamFieldInfo(
            "foundBossTextId",
            "Discovered Boss Text ID",
            True,
            int,
            '',
        ),
        ParamFieldInfo(
            "notFindBossTextId",
            "Undiscovered Boss Text ID",
            True,
            int,
            '',
        ),
        ParamFieldInfo(
            "bossChallengeFlagId",
            "Boss Challenge Flag ID",
            True,
            int,
            'Boss challengeable flag ID. When selecting the target boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para is ��, the boss with this flag ON is targeted. If it is 0, it is always the target.',
        ),
        ParamFieldInfo(
            "defeatBossFlagId",
            "Boss Defeat Flag ID",
            True,
            int,
            'Boss defeat flag ID. When selecting the target boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para is ��, the boss with this flag OFF is targeted.',
        ),
        ParamFieldInfo(
            "bossPosX",
            "Boss Coordinate: X",
            True,
            float,
            'Boss position_X coordinates (relative coordinates from the specified map). It is used to check the distance between the host and the boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para.',
        ),
        ParamFieldInfo(
            "bossPosY",
            "Boss Coordinate: Y",
            True,
            float,
            'Boss position_Y coordinates (relative coordinates from the specified map). It is used to check the distance between the host and the boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para.',
        ),
        ParamFieldInfo(
            "bossPosZ",
            "Boss Coordinate: Z",
            True,
            float,
            'Boss position_Z coordinates (relative coordinates from the specified map). It is used to check the distance between the host and the boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para.',
        ),
        ParamFieldInfo(
            "bossMapAreaNo",
            "Map Area",
            True,
            int,
            'Boss position_area number (mXX_00_00_00). It is used to check the distance between the host and the boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para.',
        ),
        ParamFieldInfo(
            "bossMapBlockNo",
            "Map Block",
            True,
            int,
            'Boss position_grid X number (m00_XX_00_00). It is used to check the distance between the host and the boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para.',
        ),
        ParamFieldInfo(
            "bossMapMapNo",
            "Map Region",
            True,
            int,
            'Boss position_grid Z number (m00_00_XX_00). It is used to check the distance between the host and the boss in the intrusion position search when "Is the intrusion point automatically generated?" In the multiplayer area para.',
        ),
        ParamFieldInfo(
            "reserve[9]",
            "Reserved area",
            False,
            pad_field(9),
            'Reserved area',
        ),
    ],
}
