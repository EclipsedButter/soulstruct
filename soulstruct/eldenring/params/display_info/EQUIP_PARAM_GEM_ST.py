from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


EQUIP_PARAM_GEM_ST = {
    "param_type": "EQUIP_PARAM_GEM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "disableParam_NT:1",
            "Disable Param - Network Test",
            True,
            int,
            'Parameters marked with �� are excluded in the NT version package.',
        ),
        ParamFieldInfo(
            "disableParamReserve1:7",
            "Reserve for package output 1",
            False,
            bit_pad_field(7),
            'Reserve for package output 1',
        ),
        ParamFieldInfo(
            "disableParamReserve2[3]",
            "Reserve for package output 2",
            False,
            pad_field(3),
            'Reserve for package output 2',
        ),
        ParamFieldInfo(
            "iconId",
            "Icon ID",
            True,
            int,
            'Menu icon ID',
        ),
        ParamFieldInfo(
            "rank",
            "Rank",
            True,
            int,
            'Magic stone rank',
        ),
        ParamFieldInfo(
            "sortGroupId",
            "Sort Group ID",
            True,
            int,
            'Sort item type ID. In the sort "Item type order", the same ID is displayed together as the same group.',
        ),
        ParamFieldInfo(
            "spEffectId0",
            "SpEffect ID [0]",
            True,
            int,
            'Special effect ID00',
        ),
        ParamFieldInfo(
            "spEffectId1",
            "SpEffect ID [1]",
            True,
            int,
            'Special effect ID01',
        ),
        ParamFieldInfo(
            "spEffectId2",
            "SpEffect ID [2]",
            True,
            int,
            'Special effect ID02',
        ),
        ParamFieldInfo(
            "itemGetTutorialFlagId",
            "Item Get Tutorial Flag ID",
            True,
            int,
            'Event flag ID for the tutorial when you first get the item. Flag ON when item is obtained.',
        ),
        ParamFieldInfo(
            "swordArtsParamId",
            "Sword Arts ID",
            True,
            int,
            'ID of the destination arts parameter',
        ),
        ParamFieldInfo(
            "mountValue",
            "Application Cost",
            True,
            int,
            'Installation price',
        ),
        ParamFieldInfo(
            "sellValue",
            "Sell Value",
            True,
            int,
            'Sale price',
        ),
        ParamFieldInfo(
            "saleValue",
            "Sale Value",
            True,
            int,
            'Selling price',
        ),
        ParamFieldInfo(
            "sortId",
            "Sort ID",
            True,
            int,
            'Sort ID (-1: Do not collect)',
        ),
        ParamFieldInfo(
            "compTrophySedId",
            "Achievement ID",
            True,
            int,
            'SEQ number of complete trophy',
        ),
        ParamFieldInfo(
            "trophySeqId",
            "Achievement Sequential ID",
            True,
            int,
            'Trophy SEQ number',
        ),
        ParamFieldInfo(
            "configurableWepAttr00:1",
            "Affinity: Standard",
            True,
            int,
            'Configurable weapon attribute ID 0',
        ),
        ParamFieldInfo(
            "configurableWepAttr01:1",
            "Affinity: Heavy",
            True,
            int,
            'Configurable Weapon Attribute ID 1',
        ),
        ParamFieldInfo(
            "configurableWepAttr02:1",
            "Affinity: Keen",
            True,
            int,
            'Configurable Weapon Attribute ID 2',
        ),
        ParamFieldInfo(
            "configurableWepAttr03:1",
            "Affinity: Quality",
            True,
            int,
            'Configurable Weapon Attribute ID 3',
        ),
        ParamFieldInfo(
            "configurableWepAttr04:1",
            "Affinity: Fire",
            True,
            int,
            'Configurable Weapon Attribute ID 4',
        ),
        ParamFieldInfo(
            "configurableWepAttr05:1",
            "Affinity: Flame Art",
            True,
            int,
            'Configurable Weapon Attribute ID 5',
        ),
        ParamFieldInfo(
            "configurableWepAttr06:1",
            "Affinity: Lightning",
            True,
            int,
            'Configurable Weapon Attribute ID 6',
        ),
        ParamFieldInfo(
            "configurableWepAttr07:1",
            "Affinity: Sacred",
            True,
            int,
            'Configurable Weapon Attribute ID 7',
        ),
        ParamFieldInfo(
            "configurableWepAttr08:1",
            "Affinity: Magic",
            True,
            int,
            'Configurable Weapon Attribute ID 8',
        ),
        ParamFieldInfo(
            "configurableWepAttr09:1",
            "Affinity: Cold",
            True,
            int,
            'Configurable Weapon Attribute ID 9',
        ),
        ParamFieldInfo(
            "configurableWepAttr10:1",
            "Affinity: Poison",
            True,
            int,
            'Configurable Weapon Attribute ID 10',
        ),
        ParamFieldInfo(
            "configurableWepAttr11:1",
            "Affinity: Blood",
            True,
            int,
            'Configurable Weapon Attribute ID 11',
        ),
        ParamFieldInfo(
            "configurableWepAttr12:1",
            "Affinity: Occult",
            True,
            int,
            'Configurable Weapon Attribute ID 12',
        ),
        ParamFieldInfo(
            "configurableWepAttr13:1",
            "Affinity: Unused [13]",
            True,
            int,
            'Configurable Weapon Attribute ID 13',
        ),
        ParamFieldInfo(
            "configurableWepAttr14:1",
            "Affinity: Unused [14]",
            True,
            int,
            'Configurable Weapon Attribute ID 14',
        ),
        ParamFieldInfo(
            "configurableWepAttr15:1",
            "Affinity: Unused [15]",
            True,
            int,
            'Configurable Weapon Attribute ID 15',
        ),
        ParamFieldInfo(
            "rarity",
            "Rarity",
            True,
            int,
            'Rarity used in item acquisition logs',
        ),
        ParamFieldInfo(
            "configurableWepAttr16:1",
            "Affinity: Unused [16]",
            True,
            int,
            'Configurable Weapon Attribute ID 16',
        ),
        ParamFieldInfo(
            "configurableWepAttr17:1",
            "Affinity: Unused [17]",
            True,
            int,
            'Configurable Weapon Attribute ID 17',
        ),
        ParamFieldInfo(
            "configurableWepAttr18:1",
            "Affinity: Unused [18]",
            True,
            int,
            'Configurable Weapon Attribute ID 18',
        ),
        ParamFieldInfo(
            "configurableWepAttr19:1",
            "Affinity: Unused [19]",
            True,
            int,
            'Configurable Weapon Attribute ID 19',
        ),
        ParamFieldInfo(
            "configurableWepAttr20:1",
            "Affinity: Unused [20]",
            True,
            int,
            'Configurable Weapon Attribute ID 20',
        ),
        ParamFieldInfo(
            "configurableWepAttr21:1",
            "Affinity: Unused [21]",
            True,
            int,
            'Configurable Weapon Attribute ID 21',
        ),
        ParamFieldInfo(
            "configurableWepAttr22:1",
            "Affinity: Unused [22]",
            True,
            int,
            'Configurable Weapon Attribute ID 22',
        ),
        ParamFieldInfo(
            "configurableWepAttr23:1",
            "Affinity: Unused [23]",
            True,
            int,
            'Configurable Weapon Attribute ID 23',
        ),
        ParamFieldInfo(
            "isDiscard:1",
            "Is Discardable",
            True,
            int,
            'Can you throw away the item? TRUE = thrown away',
        ),
        ParamFieldInfo(
            "isDrop:1",
            "Is Droppable",
            True,
            int,
            'Can I put the item on the spot? TRUE = can be placed',
        ),
        ParamFieldInfo(
            "isDeposit:1",
            "Is Depositable",
            True,
            int,
            'Can you leave it in the warehouse?',
        ),
        ParamFieldInfo(
            "disableMultiDropShare:1",
            "Is Drop Disabled in Multiplayer",
            True,
            int,
            'Is multi-drop sharing prohibited?',
        ),
        ParamFieldInfo(
            "showDialogCondType:2",
            "Item Acquisition Dialog Condition Type",
            True,
            int,
            'Whether to display it in the item acquisition dialog when acquiring an item (not entered: new only)',
        ),
        ParamFieldInfo(
            "showLogCondType:1",
            "Item Acquisition Show Condition Type",
            True,
            int,
            'Whether to display in the item acquisition log when acquiring the item (not entered: ��)',
        ),
        ParamFieldInfo(
            "pad:1",
            "pad",
            False,
            bit_pad_field(1),
            'pad',
        ),
        ParamFieldInfo(
            "defaultWepAttr",
            "Default Weapon Affinity",
            True,
            int,
            'Default weapon attribute ID. Can be installed even with unopened weapon attributes',
        ),
        ParamFieldInfo(
            "pad2[2]",
            "pad2",
            False,
            pad_field(2),
            'pad2',
        ),
        ParamFieldInfo(
            "canMountWep_Dagger:1",
            "Available: Dagger",
            True,
            int,
            'Can it be attached to "Weapon type: Dagger"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SwordNormal:1",
            "Available: Straight Sword",
            True,
            int,
            'Can it be attached to "Weapon type: Straight sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SwordLarge:1",
            "Available: Greatsword",
            True,
            int,
            'Can it be attached to "Weapon Type: Large Sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SwordGigantic:1",
            "Available: Colossal Sword",
            True,
            int,
            'Can it be attached to "Weapon Type: Oversized Sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SaberNormal:1",
            "Available: Curved Sword",
            True,
            int,
            'Can it be attached to "Weapon Type: Curly Sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SaberLarge:1",
            "Available: Curved Greatsword",
            True,
            int,
            'Can it be attached to "Weapon Type: Omagari Sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_katana:1",
            "Available: Katana",
            True,
            int,
            'Can it be attached to "Weapon type: Sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SwordDoubleEdge:1",
            "Available: Twinblade",
            True,
            int,
            'Can it be attached to "Weapon type: Double-edged sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SwordPierce:1",
            "Available: Thrusting Sword",
            True,
            int,
            'Can it be attached to "Weapon type: Sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_RapierHeavy:1",
            "Available: Heavy Thrusting Sword",
            True,
            int,
            'Can it be attached to "Weapon Type: Large Sword"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_AxeNormal:1",
            "Available: Axe",
            True,
            int,
            'Can it be attached to "Weapon Type: Ax"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_AxeLarge:1",
            "Available: Greataxe",
            True,
            int,
            'Can it be attached to "Weapon Type: Large Ax"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_HammerNormal:1",
            "Available: Hammer",
            True,
            int,
            'Can it be attached to "Weapon type: Hammer"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_HammerLarge:1",
            "Available: Great Hammer",
            True,
            int,
            'Can it be attached to "Weapon Type: Gavel"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Flail:1",
            "Available: Flail",
            True,
            int,
            'Can it be attached to "Weapon Type: Frail"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SpearNormal:1",
            "Available: Spear",
            True,
            int,
            'Can it be attached to "Weapon Type: Spear"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SpearLarge:1",
            "Available: Large Spear",
            True,
            int,
            'Can it be attached to "Weapon Type: Long Spear"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SpearHeavy:1",
            "Available: Heavy Spear",
            True,
            int,
            'Can it be attached to "Weapon Type: Large Spear"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_SpearAxe:1",
            "Available: Halberd",
            True,
            int,
            'Can it be attached to "Weapon Type: Halberd"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Sickle:1",
            "Available: Reaper",
            True,
            int,
            'Can it be attached to "Weapon type: Sickle"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Knuckle:1",
            "Available: Fist",
            True,
            int,
            'Can it be attached to "Weapon type: Fist"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Claw:1",
            "Available: Claw",
            True,
            int,
            'Can it be attached to "Weapon type: Claw"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Whip:1",
            "Available: Whip",
            True,
            int,
            'Can it be attached to "Weapon type: Whip"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_AxhammerLarge:1",
            "Available: Colossal Weapon",
            True,
            int,
            'Can it be attached to "Weapon type: Oversized ax mallet"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_BowSmall:1",
            "Available: Light Bow",
            True,
            int,
            'Can it be attached to "Weapon type: Small bow"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_BowNormal:1",
            "Available: Bow",
            True,
            int,
            'Can it be attached to "Weapon Type: Bow"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_BowLarge:1",
            "Available: Greatbow",
            True,
            int,
            'Can it be attached to "Weapon Type: Large Bow"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_ClossBow:1",
            "Available: Crossbow",
            True,
            int,
            'Can it be attached to "Weapon Type: Crossbow"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Ballista:1",
            "Available: Ballista",
            True,
            int,
            'Can it be attached to "Weapon Type: Varistor"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Staff:1",
            "Available: Staff",
            True,
            int,
            'Can it be attached to "Weapon type: Wand"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Sorcery:1",
            "Available: Unused Catalyst",
            True,
            int,
            'Can it be attached to "Weapon type: Tattoo"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Talisman:1",
            "Available: Seal",
            True,
            int,
            'Can it be attached to "Weapon Type: Holy Mark"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_ShieldSmall:1",
            "Available: Small Shield",
            True,
            int,
            'Can it be attached to "Weapon Type: Small Shield"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_ShieldNormal:1",
            "Available: Medium Shield",
            True,
            int,
            'Can it be attached to "Weapon Type: Middle Shield"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_ShieldLarge:1",
            "Available: Greatshield",
            True,
            int,
            'Can it be attached to "Weapon Type: Large Shield"? No input becomes x',
        ),
        ParamFieldInfo(
            "canMountWep_Torch:1",
            "Available: Torch",
            True,
            int,
            'Can it be attached to "Weapon type: Torch"? No input becomes x',
        ),
        ParamFieldInfo(
            "reserved_canMountWep:4",
            "Reserved area (weapon type that can be installed)",
            False,
            bit_pad_field(4),
            'Reserved area for each type of weapon that can be installed (64 bits in total)',
        ),
        ParamFieldInfo(
            "reserved2_canMountWep[3]",
            "Reserved area (weapon type that can be installed)",
            False,
            pad_field(3),
            'Reserved area for each type of weapon that can be installed (64 bits in total)',
        ),
        ParamFieldInfo(
            "spEffectMsgId0",
            "SpEffect Message ID [0]",
            True,
            int,
            'Effect text ID 00 (Gem_Effect). Magic stone effect text to display in status',
        ),
        ParamFieldInfo(
            "spEffectMsgId1",
            "SpEffect Message ID [1]",
            True,
            int,
            'Effect text ID 01 (Gem_Effect). Magic stone effect text to display in status',
        ),
        ParamFieldInfo(
            "spEffectId_forAtk0",
            "SpEffect ID - Attack Hit [0]",
            True,
            int,
            'Special effect parameter ID for attack hit',
        ),
        ParamFieldInfo(
            "spEffectId_forAtk1",
            "SpEffect ID - Attack Hit [1]",
            True,
            int,
            'Special effect parameter ID for attack hit',
        ),
        ParamFieldInfo(
            "spEffectId_forAtk2",
            "SpEffect ID - Attack Hit [2]",
            True,
            int,
            'Special effect parameter ID for attack hit',
        ),
        ParamFieldInfo(
            "mountWepTextId",
            "Mount Weapon Text ID",
            True,
            int,
            'Corresponding Weapon Type Overwrite Text ID (-1: Do not overwrite) [Menu Text]',
        ),
        ParamFieldInfo(
            "pad6[8]",
            "pad6",
            False,
            pad_field(8),
            '',
        ),
    ],
}
