from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


WEATHER_ASSET_CREATE_PARAM_ST = {
    "param_type": "WEATHER_ASSET_CREATE_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "AssetId",
            "Asset ID",
            True,
            int,
            'Specify the asset ID to generate. AEG999_999-> 999999',
        ),
        ParamFieldInfo(
            "SlotNo",
            "Slot Number",
            True,
            int,
            'This is the number for generation control. Only one asset can be generated in the same slot. You can control whether you want to generate duplicates or not.',
        ),
        ParamFieldInfo(
            "CreateConditionType",
            "Create Condition Type",
            True,
            int,
            'The type of condition of occurrence',
        ),
        ParamFieldInfo(
            "padding0[3]",
            "padding0",
            False,
            pad_field(3),
            '',
        ),
        ParamFieldInfo(
            "TransitionSrcWeather",
            "Transition Source Weather",
            True,
            int,
            'Specify the transition source weather. It is referenced only when the occurrence condition is "transition".',
        ),
        ParamFieldInfo(
            "TransitionDstWeather",
            "Transition Destination Weather",
            True,
            int,
            'Specify the transition destination weather. It is referenced only when the occurrence condition is "transition".',
        ),
        ParamFieldInfo(
            "ElapsedTimeCheckweather",
            "Check Weather Elapsed Time",
            True,
            int,
            'Specify the weather to check the elapsed time.',
        ),
        ParamFieldInfo(
            "padding1[2]",
            "padding1",
            False,
            pad_field(2),
            '',
        ),
        ParamFieldInfo(
            "ElapsedTime",
            "Elapsed Time",
            True,
            float,
            'Specify the elapsed time. It is referenced only when the occurrence condition is "time elapsed". Real time Specify in seconds.',
        ),
        ParamFieldInfo(
            "CreateDelayTime",
            "Create Delay Time",
            True,
            float,
            'Specifies the time to delay after the generation is determined. The created slot will be in use while it is delayed. Created immediately with 0 or less.',
        ),
        ParamFieldInfo(
            "CreateProbability",
            "Create Probability",
            True,
            int,
            'Specifies the probability of occurrence when conditions for weather transitions or elapsed time are met.',
        ),
        ParamFieldInfo(
            "LifeTime",
            "Duration",
            True,
            float,
            'Specifies the life of the generated asset. Real time Specify in seconds.',
        ),
        ParamFieldInfo(
            "FadeTime",
            "Fade Time",
            True,
            float,
            'Time [seconds] used for fade-in and fade-out. No fade below 0.',
        ),
        ParamFieldInfo(
            "EnableCreateTimeMin",
            "Enable Create Time Min",
            True,
            float,
            'Specifies a start time that can be generated [0.0 --24.0]. If you put -1 in either the start or the end, it will be treated as unlimited (can be generated in all time).',
        ),
        ParamFieldInfo(
            "EnableCreateTimeMax",
            "Enable Create Time Max",
            True,
            float,
            'Specifies the end time that can be generated [0.0 --24.0]. If you put -1 in either the start or the end, it will be treated as unlimited (can be generated in all time).',
        ),
        ParamFieldInfo(
            "CreatePoint0",
            "Create Point [0]",
            True,
            int,
            'Specify the generation point number. Specify the last 3 digits of the "Weather Asset Generation Point" in MapStudio. -1 will be invalid',
        ),
        ParamFieldInfo(
            "CreatePoint1",
            "Create Point [1]",
            True,
            int,
            'Specify the generation point number. Specify the last 3 digits of the "Weather Asset Generation Point" in MapStudio. -1 will be invalid',
        ),
        ParamFieldInfo(
            "CreatePoint2",
            "Create Point [2]",
            True,
            int,
            'Specify the generation point number. Specify the last 3 digits of the "Weather Asset Generation Point" in MapStudio. -1 will be invalid',
        ),
        ParamFieldInfo(
            "CreatePoint3",
            "Create Point [3]",
            True,
            int,
            'Specify the generation point number. Specify the last 3 digits of the "Weather Asset Generation Point" in MapStudio. -1 will be invalid',
        ),
        ParamFieldInfo(
            "CreateAssetLimitId0",
            "Create Asset Limit ID [0]",
            True,
            int,
            'ID for production restriction. -1: Unlimited. Generation is allowed only if it matches the generation limit ID in "Map default parameter .xlsm" (SEQ08921).',
        ),
        ParamFieldInfo(
            "CreateAssetLimitId1",
            "Create Asset Limit ID [1]",
            True,
            int,
            'ID for production restriction. -1: Unlimited. Generation is allowed only if it matches the generation limit ID in "Map default parameter .xlsm" (SEQ08921).',
        ),
        ParamFieldInfo(
            "CreateAssetLimitId2",
            "Create Asset Limit ID [2]",
            True,
            int,
            'ID for production restriction. -1: Unlimited. Generation is allowed only if it matches the generation limit ID in "Map default parameter .xlsm" (SEQ08921).',
        ),
        ParamFieldInfo(
            "CreateAssetLimitId3",
            "Create Asset Limit ID [3]",
            True,
            int,
            'ID for production restriction. -1: Unlimited. Generation is allowed only if it matches the generation limit ID in "Map default parameter .xlsm" (SEQ08921).',
        ),
        ParamFieldInfo(
            "Reserved2[4]",
            "Reserved2",
            False,
            pad_field(4),
            '',
        ),
    ],
}
