from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


ATK_PARAM_ST = {
    "param_type": "ATK_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "hit0_Radius",
            "Hit 0: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit1_Radius",
            "Hit 1: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit2_Radius",
            "Hit 2: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit3_Radius",
            "Hit 3: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "knockbackDist",
            "Knockback Distance",
            True,
            float,
            'Knockback distance [m]',
        ),
        ParamFieldInfo(
            "hitStopTime",
            "Hit Stop Time",
            True,
            float,
            'Hit stop stop time [s]',
        ),
        ParamFieldInfo(
            "spEffectId0",
            "Target SpEffect [0]",
            True,
            int,
            'Enter the ID created with the special effects parameter',
        ),
        ParamFieldInfo(
            "spEffectId1",
            "Target SpEffect [1]",
            True,
            int,
            'Enter the ID created with the special effects parameter',
        ),
        ParamFieldInfo(
            "spEffectId2",
            "Target SpEffect [2]",
            True,
            int,
            'Enter the ID created with the special effects parameter',
        ),
        ParamFieldInfo(
            "spEffectId3",
            "Target SpEffect [3]",
            True,
            int,
            'Enter the ID created with the special effects parameter',
        ),
        ParamFieldInfo(
            "spEffectId4",
            "Target SpEffect [4]",
            True,
            int,
            'Enter the ID created with the special effects parameter',
        ),
        ParamFieldInfo(
            "hit0_DmyPoly1",
            "Hit 0: Dummy Poly [1]",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit1_DmyPoly1",
            "Hit 1: Dummy Poly [1]",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit2_DmyPoly1",
            "Hit 2: Dummy Poly [1]",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit3_DmyPoly1",
            "Hit 3: Dummy Poly [1]",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit0_DmyPoly2",
            "Hit 0: Dummy Poly [2]",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit1_DmyPoly2",
            "Hit 1: Dummy Poly [2]",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit2_DmyPoly2",
            "Hit 2: Dummy Poly [2]",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit3_DmyPoly2",
            "Hit 3: Dummy Poly [2]",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "blowingCorrection",
            "Attack Correction: Blowing",
            True,
            int,
            'Correction value when blowing off',
        ),
        ParamFieldInfo(
            "atkPhysCorrection",
            "Attack Correction: Physical",
            True,
            int,
            'PC only. Multiplier by multiplying the basic physical attack power',
        ),
        ParamFieldInfo(
            "atkMagCorrection",
            "Attack Correction: Magic",
            True,
            int,
            'PC only. Multiply the magic attack power (in the case of a bow, correct the missile)',
        ),
        ParamFieldInfo(
            "atkFireCorrection",
            "Attack Correction: Fire",
            True,
            int,
            'PC only. Multiply the fire attack power (in the case of a bow, correct the missile)',
        ),
        ParamFieldInfo(
            "atkThunCorrection",
            "Attack Correction: Lightning",
            True,
            int,
            'PC only. Multiplier for electric shock attack power (in the case of a bow, correct the missile)',
        ),
        ParamFieldInfo(
            "atkStamCorrection",
            "Attack Correction: Stamina",
            True,
            int,
            'PC only. Multiplier for stamina attack power',
        ),
        ParamFieldInfo(
            "guardAtkRateCorrection",
            "Attack Correction: Guard Attack Rate",
            True,
            int,
            'PC only. 1 only',
        ),
        ParamFieldInfo(
            "guardBreakCorrection",
            "Attack Correction: Guard Break",
            True,
            int,
            'PC only. Multiplying the base value by the repelling of the attack',
        ),
        ParamFieldInfo(
            "atkThrowEscapeCorrection",
            "Attack Correction: Throw Escape",
            True,
            int,
            'Weapon correction value for throw-through attacks',
        ),
        ParamFieldInfo(
            "subCategory1",
            "Conditional Category [1]",
            True,
            int,
            'Subcategory 1',
        ),
        ParamFieldInfo(
            "subCategory2",
            "Conditional Category [2]",
            True,
            int,
            'Subcategory 2',
        ),
        ParamFieldInfo(
            "atkPhys",
            "Damage: Physical",
            True,
            int,
            'NPCs only. Basic damage of physical attack',
        ),
        ParamFieldInfo(
            "atkMag",
            "Damage: Magic",
            True,
            int,
            'NPCs only. Additional damage from magic attacks',
        ),
        ParamFieldInfo(
            "atkFire",
            "Damage: Fire",
            True,
            int,
            'NPCs only. Additional damage from fire attacks',
        ),
        ParamFieldInfo(
            "atkThun",
            "Damage: Lightning",
            True,
            int,
            'NPCs only. Additional damage from electric shock attacks',
        ),
        ParamFieldInfo(
            "atkStam",
            "Damage: Stamina",
            True,
            int,
            'NPCs only. Amount of damage to enemy (player) stamina',
        ),
        ParamFieldInfo(
            "guardAtkRate",
            "Damage: Guard Attack Rate",
            True,
            int,
            'NPCs only. Flick value',
        ),
        ParamFieldInfo(
            "guardBreakRate",
            "Damage: Guard Break Rate",
            True,
            int,
            'NPCs only. Value used to determine if an attack is repelled',
        ),
        ParamFieldInfo(
            "pad6[1]",
            "pad",
            False,
            pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "isEnableCalcDamageForBushesObj",
            "Is Considered Special Attack for Asset Destruction",
            True,
            int,
            'Do you want to calculate damage for assets that are "Break due to bush damage"? To set. �Z: Calculate, �~: Do not calculate (that is, you cannot inflict damage) [GR] SEQ20617',
        ),
        ParamFieldInfo(
            "atkThrowEscape",
            "Damage: Throw Escape",
            True,
            int,
            'Throw-through attack power',
        ),
        ParamFieldInfo(
            "atkObj",
            "Damage: Object",
            True,
            int,
            'Attack power against OBJ',
        ),
        ParamFieldInfo(
            "guardStaminaCutRate",
            "Guard Cut Stamina Rate",
            True,
            int,
            'Correct the [stamina cut rate when guarding] set in the weapon parameter and NPC parameter.',
        ),
        ParamFieldInfo(
            "guardRate",
            "Guard Rate",
            True,
            int,
            'NPC, the guard performance set in the weapon parameter is uniformly corrected. 0, 1x / 100, 2x / -100, guard multiplier = (guard multiplier / 100) to increase / decrease the parameter to 0. + 1)',
        ),
        ParamFieldInfo(
            "throwTypeId",
            "Throw Type ID",
            True,
            int,
            'ID associated with the throw parameter',
        ),
        ParamFieldInfo(
            "hit0_hitType",
            "Hit 0: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit1_hitType",
            "Hit 1: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit2_hitType",
            "Hit 2: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit3_hitType",
            "Hit 3: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hti0_Priority",
            "Hit 0: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti1_Priority",
            "Hit 1: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti2_Priority",
            "Hit 2: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti3_Priority",
            "Hit 3: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "dmgLevel",
            "Damage Level",
            True,
            int,
            'Which damage motion should be played against the enemy when attacking? To decide.',
        ),
        ParamFieldInfo(
            "mapHitType",
            "Map Hit Type",
            True,
            int,
            'Which map do you see around the attack? The set',
        ),
        ParamFieldInfo(
            "guardCutCancelRate",
            "Guard Absorption Bypass Rate",
            True,
            int,
            'Guard cut rate invalidation ratio (-100 to 100) �� Normal at 0 / Completely invalidated at -100 / Doubles the defense effect of the opponent at 100 �� -50, 100% cut shield becomes 50% cut Become ',
        ),
        ParamFieldInfo(
            "atkAttribute",
            "Attack Attribute",
            True,
            int,
            'Physical attributes to set for attacks',
        ),
        ParamFieldInfo(
            "spAttribute",
            "Special Attribute",
            True,
            int,
            'Special attributes to set for attacks',
        ),
        ParamFieldInfo(
            "atkType",
            "Attack Type",
            True,
            int,
            'Specify SFX / SE at the time of attack (1 set by attribute, material, size)',
        ),
        ParamFieldInfo(
            "atkMaterial",
            "Attack Material",
            True,
            int,
            'Specify SFX / SE at the time of attack (1 set by attribute, material, size)',
        ),
        ParamFieldInfo(
            "guardRangeType",
            "Guard Range Type",
            True,
            int,
            'Guard judgment position',
        ),
        ParamFieldInfo(
            "defSeMaterial1",
            "Defence SE Material",
            True,
            int,
            'Used for SE when guarding 1',
        ),
        ParamFieldInfo(
            "hitSourceType",
            "Hit Source Type",
            True,
            int,
            'Where do you get the Damipoli ID per attack? To specify',
        ),
        ParamFieldInfo(
            "throwFlag",
            "Throw Flag",
            True,
            int,
            'Flag used for throwing information',
        ),
        ParamFieldInfo(
            "disableGuard:1",
            "Disable Guard",
            True,
            int,
            'If 1, ignore the guard on the guard side and enter the damage level',
        ),
        ParamFieldInfo(
            "disableStaminaAttack:1",
            "Disable Stamina Attack",
            True,
            int,
            '"Destruction judgment" is performed by stamina attack power, but stamina is not actually reduced.',
        ),
        ParamFieldInfo(
            "disableHitSpEffect:1",
            "Disable Hit SpEffect",
            True,
            int,
            'Disables special effects when an attack hits. SCE bug countermeasures',
        ),
        ParamFieldInfo(
            "IgnoreNotifyMissSwingForAI:1",
            "Disable Missed Attack Notification For AI",
            True,
            int,
            'Do not notify AI of missed swing',
        ),
        ParamFieldInfo(
            "repeatHitSfx:1",
            "Repeat Hit Sound FX",
            True,
            int,
            'Enemy only: Does SFX occur continuously when hitting a wall?',
        ),
        ParamFieldInfo(
            "isArrowAtk:1",
            "Is Physical Projectile",
            True,
            int,
            'Used for site damage judgment.',
        ),
        ParamFieldInfo(
            "isGhostAtk:1",
            "Is Attack By Ghost",
            True,
            int,
            'Used for determining spirit damage.',
        ),
        ParamFieldInfo(
            "isDisableNoDamage:1",
            "Disable No Damage",
            True,
            int,
            "Ignore invincible effects such as steps, TAE's complete invincibility cannot be ignored.",
        ),
        ParamFieldInfo(
            "atkPow_forSfx",
            "Attack Power - SFX Effect",
            True,
            int,
            'Attack strength [SFX]',
        ),
        ParamFieldInfo(
            "atkDir_forSfx",
            "Attack Direction - SFX Effect",
            True,
            int,
            'Attack direction [SFX]',
        ),
        ParamFieldInfo(
            "opposeTarget:1",
            "Oppose Target",
            True,
            int,
            'Target: �� Hostile',
        ),
        ParamFieldInfo(
            "friendlyTarget:1",
            "Friendly Target",
            True,
            int,
            'Target: �� Allies',
        ),
        ParamFieldInfo(
            "selfTarget:1",
            "Self Target",
            True,
            int,
            'Target: myself',
        ),
        ParamFieldInfo(
            "isCheckDoorPenetration:1",
            "Is Target Hit Through Door",
            True,
            int,
            'Whether to check the door penetration. In the case of ��, it is judged whether or not the target through the door can be attacked.',
        ),
        ParamFieldInfo(
            "isVsRideAtk:1",
            "Is Ride Special Attack",
            True,
            int,
            'If you hit the target of the riding special attack while riding, the SA damage will be multiplied by the multiplier.',
        ),
        ParamFieldInfo(
            "isAddBaseAtk:1",
            "Is Base Attack Added",
            True,
            int,
            'Do you refer to the additional attack power even in weapon attacks?',
        ),
        ParamFieldInfo(
            "excludeThreatLvNotify:1",
            "Is Excluded from Threat Level Notification",
            True,
            int,
            'Is it excluded from threat level notification?',
        ),
        ParamFieldInfo(
            "pad1:1",
            "pad1",
            False,
            bit_pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "atkBehaviorId",
            "Attack Behavior ID",
            True,
            int,
            'Behavior identification value: Extra large damage transition',
        ),
        ParamFieldInfo(
            "atkPow_forSe",
            "Attack Power - SE Effect",
            True,
            int,
            'Attack strength [SE]',
        ),
        ParamFieldInfo(
            "atkSuperArmor",
            "Damage: Poise",
            True,
            float,
            'NPCs only. Value used for SA break calculation formula',
        ),
        ParamFieldInfo(
            "decalId1",
            "Decal ID [1]",
            True,
            int,
            'Decal ID 1 (directly specified)',
        ),
        ParamFieldInfo(
            "decalId2",
            "Decal ID [2]",
            True,
            int,
            'Decal ID 2 (directly specified)',
        ),
        ParamFieldInfo(
            "AppearAiSoundId",
            "Appear AI Sound ID",
            True,
            int,
            'ID of AI sound generated when an attack occurs',
        ),
        ParamFieldInfo(
            "HitAiSoundId",
            "Hit AI Sound ID",
            True,
            int,
            'ID of AI sound generated at the time of hit',
        ),
        ParamFieldInfo(
            "HitRumbleId",
            "Hit Rumble ID - Default",
            True,
            int,
            'Vibration ID at the time of hit (-1 invalid). It is a vibration ID when none of the following three applies',
        ),
        ParamFieldInfo(
            "HitRumbleIdByNormal",
            "Hit Rumble ID - Normal",
            True,
            int,
            'Vibration ID at the time of hit when hitting the tip (-1 invalid)',
        ),
        ParamFieldInfo(
            "HitRumbleIdByMiddle",
            "Hit Rumble ID - Middle",
            True,
            int,
            'Vibration ID at the time of hit when hit in the middle (-1 invalid)',
        ),
        ParamFieldInfo(
            "HitRumbleIdByRoot",
            "Hit Rumble ID - Root",
            True,
            int,
            'Vibration ID at the time of hit when hitting the root (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceSfxId0",
            "Trace SFX ID [0]",
            True,
            int,
            'Sword flash SfxID_0 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead0",
            "Trace SFX ID [0] - Head Dummy Poly",
            True,
            int,
            'Sword flash root Damipoli ID_0 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail0",
            "Trace SFX ID [0] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_0',
        ),
        ParamFieldInfo(
            "traceSfxId1",
            "Trace SFX ID [1]",
            True,
            int,
            'Sword flash SfxID_1 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead1",
            "Trace SFX ID [1] - Head Dummy Poly",
            True,
            int,
            'Sword Flash Root Damipoli ID_1 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail1",
            "Trace SFX ID [1] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_1',
        ),
        ParamFieldInfo(
            "traceSfxId2",
            "Trace SFX ID [2]",
            True,
            int,
            'Sword flash SfxID_2 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead2",
            "Trace SFX ID [2] - Head Dummy Poly",
            True,
            int,
            'Sword Flash Root Damipoli ID_2 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail2",
            "Trace SFX ID [2] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_2',
        ),
        ParamFieldInfo(
            "traceSfxId3",
            "Trace SFX ID [3]",
            True,
            int,
            'Sword Flash SfxID_3 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead3",
            "Trace SFX ID [3] - Head Dummy Poly",
            True,
            int,
            'Sword flash root Damipoli ID_3 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail3",
            "Trace SFX ID [3] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_3',
        ),
        ParamFieldInfo(
            "traceSfxId4",
            "Trace SFX ID [4]",
            True,
            int,
            'Sword Flash SfxID_4 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead4",
            "Trace SFX ID [4] - Head Dummy Poly",
            True,
            int,
            'Sword flash root Damipoli ID_4 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail4",
            "Trace SFX ID [4] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_4',
        ),
        ParamFieldInfo(
            "traceSfxId5",
            "Trace SFX ID [5]",
            True,
            int,
            'Sword Flash SfxID_5 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead5",
            "Trace SFX ID [5] - Head Dummy Poly",
            True,
            int,
            'Sword Flash Root Damipoli ID_5 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail5",
            "Trace SFX ID [5] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_5',
        ),
        ParamFieldInfo(
            "traceSfxId6",
            "Trace SFX ID [6]",
            True,
            int,
            'Sword Flash SfxID_6 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead6",
            "Trace SFX ID [6] - Head Dummy Poly",
            True,
            int,
            'Sword Flash Root Damipoli ID_6 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail6",
            "Trace SFX ID [6] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_6',
        ),
        ParamFieldInfo(
            "traceSfxId7",
            "Trace SFX ID [7]",
            True,
            int,
            'Sword Flash SfxID_7 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdHead7",
            "Trace SFX ID [7] - Head Dummy Poly",
            True,
            int,
            'Sword Flash Root Damipoli ID_7 (-1 invalid)',
        ),
        ParamFieldInfo(
            "traceDmyIdTail7",
            "Trace SFX ID [7] - Tail Dummy Poly",
            True,
            int,
            'Sword Flash Sword Tip Damipoli ID_7',
        ),
        ParamFieldInfo(
            "hit4_Radius",
            "Hit 4: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit5_Radius",
            "Hit 5: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit6_Radius",
            "Hit 6: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit7_Radius",
            "Hit 7: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit8_Radius",
            "Hit 8: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit9_Radius",
            "Hit 9: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit10_Radius",
            "Hit 10: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit11_Radius",
            "Hit 11: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit12_Radius",
            "Hit 12: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit13_Radius",
            "Hit 13: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit14_Radius",
            "Hit 14: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit15_Radius",
            "Hit 15: Radius",
            True,
            float,
            'Sphere, capsule radius',
        ),
        ParamFieldInfo(
            "hit4_DmyPoly1",
            "Hit 4: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit5_DmyPoly1",
            "Hit 5: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit6_DmyPoly1",
            "Hit 6: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit7_DmyPoly1",
            "Hit 7: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit8_DmyPoly1",
            "Hit 8: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit9_DmyPoly1",
            "Hit 9: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit10_DmyPoly1",
            "Hit 10: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit11_DmyPoly1",
            "Hit 11: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit12_DmyPoly1",
            "Hit 12: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit13_DmyPoly1",
            "Hit 13: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit14_DmyPoly1",
            "Hit 14: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit15_DmyPoly1",
            "Hit 15: Dummy Poly 1",
            True,
            int,
            'Damipoli in sphere, capsule position',
        ),
        ParamFieldInfo(
            "hit4_DmyPoly2",
            "Hit 4: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit5_DmyPoly2",
            "Hit 5: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit6_DmyPoly2",
            "Hit 6: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit7_DmyPoly2",
            "Hit 7: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit8_DmyPoly2",
            "Hit 8: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit9_DmyPoly2",
            "Hit 9: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit10_DmyPoly2",
            "Hit 10: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit11_DmyPoly2",
            "Hit 11: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit12_DmyPoly2",
            "Hit 12: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit13_DmyPoly2",
            "Hit 13: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit14_DmyPoly2",
            "Hit 14: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit15_DmyPoly2",
            "Hit 15: Dummy Poly 2",
            True,
            int,
            'The position of another point on the capsule Damipoli. -1 makes it a sphere',
        ),
        ParamFieldInfo(
            "hit4_hitType",
            "Hit 4: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit5_hitType",
            "Hit 5: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit6_hitType",
            "Hit 6: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit7_hitType",
            "Hit 7: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit8_hitType",
            "Hit 8: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit9_hitType",
            "Hit 9: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit10_hitType",
            "Hit 10: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit11_hitType",
            "Hit 11: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit12_hitType",
            "Hit 12: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit13_hitType",
            "Hit 13: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit14_hitType",
            "Hit 14: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hit15_hitType",
            "Hit 15: Hit Type",
            True,
            int,
            'Hit part',
        ),
        ParamFieldInfo(
            "hti4_Priority",
            "Hit 4: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti5_Priority",
            "Hit 5: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti6_Priority",
            "Hit 6: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti7_Priority",
            "Hit 7: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti8_Priority",
            "Hit 8: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti9_Priority",
            "Hit 9: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti10_Priority",
            "Hit 10: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti11_Priority",
            "Hit 11: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti12_Priority",
            "Hit 12: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti13_Priority",
            "Hit 13: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti14_Priority",
            "Hit 14: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "hti15_Priority",
            "Hit 15: Priority",
            True,
            int,
            'priority. If there are two or more hits at the same time, the one with the higher priority will be adopted.',
        ),
        ParamFieldInfo(
            "defSfxMaterial1",
            "Defence SFX Material [1]",
            True,
            int,
            'Used for SFX when guarding. 1',
        ),
        ParamFieldInfo(
            "defSeMaterial2",
            "Defence SE Material [2]",
            True,
            int,
            'Used for SE when guarding 2',
        ),
        ParamFieldInfo(
            "defSfxMaterial2",
            "Defence SFX Material [2]",
            True,
            int,
            'Used for SFX when guarding. 2',
        ),
        ParamFieldInfo(
            "atkDarkCorrection",
            "Attack Correction: Holy",
            True,
            int,
            'PC only. Multiply the dark attack power (in the case of a bow, correct the missile)',
        ),
        ParamFieldInfo(
            "atkDark",
            "Damage: Holy",
            True,
            int,
            'NPCs only. Additional damage from dark attacks',
        ),
        ParamFieldInfo(
            "pad5:1",
            "pad",
            False,
            bit_pad_field(1),
            'pad',
        ),
        ParamFieldInfo(
            "isDisableParry:1",
            "Is Disable Parry",
            True,
            int,
            'This is a flag to disable the new parry control. A process that determines that the damage on the attacking side has been parried when it comes into contact with a character in the parry state on the defending side.',
        ),
        ParamFieldInfo(
            "isDisableBothHandsAtkBonus:1",
            "Is Disable 2H ATK Bonus",
            True,
            int,
            'Avoid using the 1.5x growth status adaptation with both hands',
        ),
        ParamFieldInfo(
            "isInvalidatedByNoDamageInAir:1",
            "Is Invalidated by No Damage in Air",
            True,
            int,
            'If "Do you want to penetrate invincibility" is ��, this setting will be ignored.',
        ),
        ParamFieldInfo(
            "pad2:4",
            "pad1",
            False,
            bit_pad_field(4),
            '',
        ),
        ParamFieldInfo(
            "dmgLevel_vsPlayer",
            "Damage Level - Vs. Player",
            True,
            int,
            'Damage level to the player. If it is "0 (default)", it is not used. The meaning of the range other than "0 (default)" is the same as "Damage level".',
        ),
        ParamFieldInfo(
            "statusAilmentAtkPowerCorrectRate",
            "Status Ailment Correction",
            True,
            int,
            'Magnification correction is performed for the abnormal state attack power of special effects.',
        ),
        ParamFieldInfo(
            "spEffectAtkPowerCorrectRate_byPoint",
            "Attack Correction - By SpEffect Point",
            True,
            int,
            'Magnification correction is performed for the special effect ~ ~ attack power [point].',
        ),
        ParamFieldInfo(
            "spEffectAtkPowerCorrectRate_byRate",
            "Attack Correction - By SpEffect Power",
            True,
            int,
            "Magnification is corrected for the special effect's attack power multiplier.",
        ),
        ParamFieldInfo(
            "spEffectAtkPowerCorrectRate_byDmg",
            "Attack Correction - By SpEffect Damage",
            True,
            int,
            'Attack side of special effect: ~ ~ Performs magnification correction for damage multiplier.',
        ),
        ParamFieldInfo(
            "atkBehaviorId_2",
            "Attack Behavior ID [2]",
            True,
            int,
            'Behavior identification value: Plays damage motion only at specific times',
        ),
        ParamFieldInfo(
            "throwDamageAttribute",
            "Throw Damage Attribute",
            True,
            int,
            'Attribute of throw damage of attack judgment. Corresponding special effects will be applied. It works only when the attack ATK_PATAM_THROWFLAG_TYPE is "2: Throw".',
        ),
        ParamFieldInfo(
            "statusAilmentAtkPowerCorrectRate_byPoint",
            "Status Ailment Correction - By Point",
            True,
            int,
            'Magnification correction is performed for the special effect "Whether to apply the abnormal state attack power magnification correction".',
        ),
        ParamFieldInfo(
            "overwriteAttackElementCorrectId",
            "Attack Element Correct ID",
            True,
            int,
            'For overwriting the ID of the parameter that corrects the attack attribute',
        ),
        ParamFieldInfo(
            "decalBaseId1",
            "Decal Base ID [1]",
            True,
            int,
            'Decal identifier 1 (3 digits)',
        ),
        ParamFieldInfo(
            "decalBaseId2",
            "Decal Base ID [2]",
            True,
            int,
            'Decal identifier 2 (3 digits)',
        ),
        ParamFieldInfo(
            "wepRegainHpScale",
            "Weapon HP Regain Amount Scale",
            True,
            int,
            'Weapon regain amount correction value',
        ),
        ParamFieldInfo(
            "atkRegainHp",
            "Attack HP Regain Amount",
            True,
            int,
            'Amount of attack regain',
        ),
        ParamFieldInfo(
            "regainableTimeScale",
            "HP Regain Time Scale",
            True,
            float,
            'Regainable time correction factor',
        ),
        ParamFieldInfo(
            "regainableHpRateScale",
            "HP Regain Rate Scale",
            True,
            float,
            'Regainable rate correction factor',
        ),
        ParamFieldInfo(
            "regainableSlotId",
            "Same Attack Judgment ID",
            True,
            int,
            'Same attack judgment ID',
        ),
        ParamFieldInfo(
            "spAttributeVariationValue",
            "Special Attribute VFX Variation Offset",
            True,
            int,
            'Value for giving variation to SFX and SE generated by special attribute in combination with "special attribute" (SEQ16473)',
        ),
        ParamFieldInfo(
            "parryForwardOffset",
            "Parry Forward Offset",
            True,
            int,
            'Front angle offset of [collapsed side] of parry establishment condition',
        ),
        ParamFieldInfo(
            "atkSuperArmorCorrection",
            "Attack Correction: Poise",
            True,
            float,
            'PC only. Correction value to be applied to the [basic value] set for the weapon',
        ),
        ParamFieldInfo(
            "defSfxMaterialVariationValue",
            "Defence SFX Material Variation Offset",
            True,
            int,
            'A value to have variations of damage SFX and SE in combination with "defense material 1 or 2" used when guarding. (SEQ16473)',
        ),
        ParamFieldInfo(
            "pad4[19]",
            "pad",
            False,
            pad_field(19),
            '',
        ),
    ],
}
