from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


ENEMY_STANDARD_INFO_BANK = {
    "param_type": "ENEMY_STANDARD_INFO_BANK",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "EnemyBehaviorID",
            "Behavior id",
            True,
            int,
            'Enemy behavior ID',
        ),
        ParamFieldInfo(
            "HP",
            "Hit points",
            True,
            int,
            'Hit points',
        ),
        ParamFieldInfo(
            "AttackPower",
            "Offensive power",
            True,
            int,
            'Attack power (for proto only)',
        ),
        ParamFieldInfo(
            "ChrType",
            "Character type",
            True,
            int,
            'Character type',
        ),
        ParamFieldInfo(
            "HitHeight",
            "Height per [m]",
            True,
            float,
            'Height per (Please specify a size larger than the diameter)',
        ),
        ParamFieldInfo(
            "HitRadius",
            "Radius around [m]",
            True,
            float,
            'Radius around',
        ),
        ParamFieldInfo(
            "Weight",
            "Weight [kg]",
            True,
            float,
            'The weight of the character',
        ),
        ParamFieldInfo(
            "DynamicFriction",
            "Dynamic friction force",
            True,
            float,
            'Dynamic friction force',
        ),
        ParamFieldInfo(
            "StaticFriction",
            "Static friction",
            True,
            float,
            'Static friction force',
        ),
        ParamFieldInfo(
            "UpperDefState",
            "Upper body initial state",
            True,
            int,
            'Upper body initial state (PG input)',
        ),
        ParamFieldInfo(
            "ActionDefState",
            "Initial state of action",
            True,
            int,
            'Action initial state (PG input)',
        ),
        ParamFieldInfo(
            "RotY_per_Second",
            "Angle that can be turned per unit time [deg / s]",
            True,
            float,
            'Y-axis turning angle per unit time [deg / s]',
        ),
        ParamFieldInfo(
            "reserve0[20]",
            "reserve",
            False,
            pad_field(20),
            '',
        ),
        ParamFieldInfo(
            "RotY_per_Second_old",
            "unused",
            True,
            int,
            'unused',
        ),
        ParamFieldInfo(
            "EnableSideStep",
            "Can you move left and right?",
            True,
            int,
            'Can you move left and right?',
        ),
        ParamFieldInfo(
            "UseRagdollHit",
            "Whether to use a ragdoll per character",
            True,
            int,
            'Whether to use a ragdoll per character',
        ),
        ParamFieldInfo(
            "reserve_last[5]",
            "reserve",
            False,
            pad_field(5),
            '',
        ),
        ParamFieldInfo(
            "stamina",
            "Amount of stamina",
            True,
            int,
            'Total amount of stamina',
        ),
        ParamFieldInfo(
            "staminaRecover",
            "Stamina recovery",
            True,
            int,
            'Stamina recovery amount per second',
        ),
        ParamFieldInfo(
            "staminaConsumption",
            "Stamina basic consumption",
            True,
            int,
            'Basic value of stamina consumption used when attacking and guarding',
        ),
        ParamFieldInfo(
            "deffenct_Phys",
            "Physical defense",
            True,
            int,
            'Damage reduction base value for physical attacks',
        ),
        ParamFieldInfo(
            "reserve_last2[48]",
            "Reservation 1",
            False,
            pad_field(48),
            '',
        ),
    ],
}
