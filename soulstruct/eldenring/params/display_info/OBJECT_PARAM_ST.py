from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


OBJECT_PARAM_ST = {
    "param_type": "OBJECT_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "hp",
            "HP",
            True,
            int,
            'Durability until destruction (-1: Indestructible)',
        ),
        ParamFieldInfo(
            "defense",
            "Defence",
            True,
            int,
            'Attack power below this value is no damage',
        ),
        ParamFieldInfo(
            "extRefTexId",
            "External Texture ID",
            True,
            int,
            'mAA / mAA_ ????. Tpf (-1: None) (AA: Area number)',
        ),
        ParamFieldInfo(
            "materialId",
            "Material ID",
            True,
            int,
            'Material ID. Treated the same as the floor material. When -1, the same behavior as before',
        ),
        ParamFieldInfo(
            "animBreakIdMax",
            "Destruction Animation ID",
            True,
            int,
            'What is the animation destruction ID from 0 to what?',
        ),
        ParamFieldInfo(
            "isCamHit:1",
            "Is Camera Hit",
            True,
            int,
            'Does the camera hit (0: not hit, 1: hit)',
        ),
        ParamFieldInfo(
            "isBreakByPlayerCollide:1",
            "Is Broken by Player Collision",
            True,
            int,
            'Broken when the player touches (0: no, 1:)',
        ),
        ParamFieldInfo(
            "isAnimBreak:1",
            "Is Animated Destruction",
            True,
            int,
            'Is it animation destruction (0: physical destruction, 1: animation destruction)',
        ),
        ParamFieldInfo(
            "isPenetrationBulletHit:1",
            "Is Penetrated by Bullet",
            True,
            int,
            'Will the penetrating bullet hit (0: not hit, 1: hit)',
        ),
        ParamFieldInfo(
            "isChrHit:1",
            "Is Character Hit",
            True,
            int,
            'Does the character win (0: not hit, 1: hit)',
        ),
        ParamFieldInfo(
            "isAttackBacklash:1",
            "Is Attack Backlash",
            True,
            int,
            'Do you play the attack (0: do not play, 1: play)',
        ),
        ParamFieldInfo(
            "isDisableBreakForFirstAppear:1",
            "Is Disable Destruction on First Apperance",
            True,
            int,
            'Broken at the initial appearance of the player (0: ru, 1: no)',
        ),
        ParamFieldInfo(
            "isLadder:1",
            "Is Ladder",
            True,
            int,
            'Is it a ladder (0: different, 1: yes)',
        ),
        ParamFieldInfo(
            "isAnimPauseOnRemoPlay:1",
            "Is Animation Paused in Cutscene",
            True,
            int,
            'Do you want to stop the animation during the poly play (0: not, 1: do)',
        ),
        ParamFieldInfo(
            "isDamageNoHit:1",
            "Is Damage No Hit",
            True,
            int,
            'No damage (0: hit, 1: not hit)',
        ),
        ParamFieldInfo(
            "isMoveObj:1",
            "Is Moving Object",
            True,
            int,
            'Is it a moving object (0: different, 1: yes)',
        ),
        ParamFieldInfo(
            "isRopeBridge:1",
            "Is Rope Bridge",
            True,
            int,
            'Suspension bridge object (0: different, 1: yes)',
        ),
        ParamFieldInfo(
            "isAddRigidImpulse_ByDamage:1",
            "Is Rigid Body affected by Damage Blow",
            True,
            int,
            'Does the damage blow the rigid body (0: do not blow, 1: blow)',
        ),
        ParamFieldInfo(
            "isBreak_ByChrRide:1",
            "Is Destroyed by Riding Character",
            True,
            int,
            "Will it break if the character gets on (0: it won't break 1: it will break)",
        ),
        ParamFieldInfo(
            "isBurn:1",
            "Is Flammable",
            True,
            int,
            'Will it burn (0: not, 1:)',
        ),
        ParamFieldInfo(
            "isBreakByEnemyCollide:1",
            "Is Destroyed by Enemy Collision",
            True,
            int,
            'Broken when an enemy character touches (0: No, 1: Ru)',
        ),
        ParamFieldInfo(
            "defaultLodParamId",
            "Default LOD Param ID",
            True,
            int,
            'Default LOD Param ID (-1: None)',
        ),
        ParamFieldInfo(
            "breakSfxId",
            "Destruction - SFX ID",
            True,
            int,
            'SFXID when destroying an object (-1: default (810030))',
        ),
        ParamFieldInfo(
            "breakSfxCpId",
            "Destruction - Dummy Poly ID",
            True,
            int,
            'SFX generation position when the object is destroyed Damipoly ID (-1: placement position)',
        ),
        ParamFieldInfo(
            "breakBulletBehaviorId",
            "Destruction - Bullet Behavior ID",
            True,
            int,
            'Action parameter of [bullet] at the time of destruction (-1: does not occur)',
        ),
        ParamFieldInfo(
            "breakBulletCpId",
            "Destruction - Bullet Dummy Poly ID",
            True,
            int,
            'Location of [bullet] at the time of destruction Damipoli ID (-1: placement position)',
        ),
        ParamFieldInfo(
            "breakFallHeight",
            "Fall Destruction Height",
            True,
            int,
            'Height at which the object breaks when dropped (0: does not break when dropped)',
        ),
        ParamFieldInfo(
            "windEffectType_0",
            "Wind Effect Type - Pre-Destruction",
            True,
            int,
            'Wind effect type (before destruction)',
        ),
        ParamFieldInfo(
            "windEffectType_1",
            "Wind Effect Type - Post-Destruction",
            True,
            int,
            'Wind effect type (after destruction)',
        ),
        ParamFieldInfo(
            "camAvoidType",
            "Camera Avoidance Type",
            True,
            int,
            'What to do if an object blocks between the camera and player',
        ),
        ParamFieldInfo(
            "windEffectRate_0",
            "Wind Coefficient - Pre-Destruction",
            True,
            float,
            'Wind coefficient (before destruction)',
        ),
        ParamFieldInfo(
            "windEffectRate_1",
            "Wind Coefficient - Post-Destruction",
            True,
            float,
            'Wind coefficient (after destruction)',
        ),
        ParamFieldInfo(
            "breakStopTime",
            "Destruction Stop time",
            True,
            float,
            'Time from destruction to forced stop of rigid body (do not force stop at 0)',
        ),
        ParamFieldInfo(
            "burnTime",
            "Burn Time",
            True,
            float,
            'Burning time (seconds) (continues to burn at 0)',
        ),
        ParamFieldInfo(
            "burnBraekRate",
            "Burn Destruction Rate",
            True,
            float,
            'Burnup threshold for switching to the ruptured state',
        ),
        ParamFieldInfo(
            "burnSfxId",
            "Burn - SFX ID [0]",
            True,
            int,
            'SFX ID at the time of combustion: 0 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnSfxId_1",
            "Burn - SFX ID [1]",
            True,
            int,
            'SFX ID at the time of combustion: 1 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnSfxId_2",
            "Burn - SFX ID [2]",
            True,
            int,
            'SFX ID at the time of combustion: 2 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnSfxId_3",
            "Burn - SFX ID [3]",
            True,
            int,
            'SFX ID at the time of combustion: 3 (-1: No SFX)',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId",
            "Burn - Bullet Behavior ID [0]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 0 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId_1",
            "Burn - Bullet Behavior ID [1]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 1 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId_2",
            "Burn - Bullet Behavior ID [2]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 2 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletBehaviorId_3",
            "Burn - Bullet Behavior ID [3]",
            True,
            int,
            'Bullet generation behavior parameter at the time of burning: 3 (-1: does not occur)',
        ),
        ParamFieldInfo(
            "burnBulletInterval",
            "Burn - Bullet Interval",
            True,
            int,
            'Interval (frame) to generate bullets for spreading fire',
        ),
        ParamFieldInfo(
            "navimeshFlag",
            "Navimesh Flag",
            True,
            int,
            'Navigation mesh flag set from the object',
        ),
        ParamFieldInfo(
            "collisionType",
            "Collision Detection Type",
            True,
            int,
            'Collision detection type',
        ),
        ParamFieldInfo(
            "burnBulletDelayTime",
            "Burn - Bullet Generation Delay Time",
            True,
            float,
            'Time to delay the generation of bullets for fire spread (seconds)',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin",
            "Burn - Bullet Generation Delay Time [0] (Minimum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin_1",
            "Burn - Bullet Generation Delay Time [1] (Minimum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin_2",
            "Burn - Bullet Generation Delay Time [2] (Minimum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMin_3",
            "Burn - Bullet Generation Delay Time [3] (Minimum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax",
            "Burn - Bullet Generation Delay Time [0] (Maximum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax_1",
            "Burn - Bullet Generation Delay Time [1] (Maximum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax_2",
            "Burn - Bullet Generation Delay Time [2] (Maximum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "burnSfxDelayTimeMax_3",
            "Burn - Bullet Generation Delay Time [3] (Maximum)",
            True,
            float,
            'SFX generation delay time during combustion Randomly determined between start and end times',
        ),
        ParamFieldInfo(
            "BreakAiSoundID",
            "Destruction AI Sound ID",
            True,
            int,
            'AI sound ID generated at the time of destruction',
        ),
        ParamFieldInfo(
            "FragmentInvisibleWaitTime",
            "Hidden Debris - Wait Time",
            True,
            float,
            'Material ID of debris (-1: Do not hide)',
        ),
        ParamFieldInfo(
            "FragmentInvisibleTime",
            "Hidden Debris - Invisibility Time",
            True,
            float,
            'Time to hide debris (seconds)',
        ),
        ParamFieldInfo(
            "pad_3[16]",
            "Padding",
            False,
            pad_field(16),
            'Material ID of debris (-1: Do not hide)',
        ),
        ParamFieldInfo(
            "RigidPenetrationScale_Soft",
            "Rigid Body Collision - Soft",
            True,
            float,
            'Rigid body soft contact setting Collision point distance coefficient [soft]',
        ),
        ParamFieldInfo(
            "RigidPenetrationScale_Normal",
            "Rigid Body Collision - Normal",
            True,
            float,
            'Rigid soft contact setting Collision point distance coefficient [Normal]',
        ),
        ParamFieldInfo(
            "RigidPenetrationScale_Hard",
            "Rigid Body Collision - Hard",
            True,
            float,
            'Rigid soft contact setting Collision point distance coefficient [hard]',
        ),
        ParamFieldInfo(
            "LandTouchSfxId",
            "Land Touch - SFX ID",
            True,
            int,
            'SFX ID at terrain contact (-1: offset by terrain material)',
        ),
        ParamFieldInfo(
            "isDamageCover:1",
            "Is Damage blocked after Passing Through",
            True,
            int,
            'Whether to pass the damage to the other side when receiving damage (0: pass, 1: do not pass)',
        ),
        ParamFieldInfo(
            "pad_4[1]",
            "Padding",
            False,
            pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "paintDecalTargetTextureSize",
            "Paint Decal Size",
            True,
            int,
            'Paint decal target size (only powers of 0 to 4096 2 allowed)',
        ),
        ParamFieldInfo(
            "lifeTime_forDC",
            "Dynamic Object Duration",
            True,
            float,
            'Time until dynamically generated Obj disappears after generation (0: does not disappear)',
        ),
        ParamFieldInfo(
            "clothUpdateDist",
            "Cloth Update Distance from Camera",
            True,
            float,
            'Distance from the camera to update havokCloth (0: always update)',
        ),
        ParamFieldInfo(
            "contactSeId",
            "Player Touch - SE ID",
            True,
            int,
            'SE ID to play when touched by a local player operated by you (-1: Do not play)',
        ),
        ParamFieldInfo(
            "breakLandingSfxId",
            "Landing Destruction - SFX ID",
            True,
            int,
            'Object material-dependent SFX identifier that regenerates when first landing after being destroyed (-1: does not occur)',
        ),
        ParamFieldInfo(
            "waypointDummyPolyId_0",
            "Waypoint Dummy Poly ID",
            True,
            int,
            'Waypoint Damipoli ID_0 (-1: None)',
        ),
        ParamFieldInfo(
            "waypointParamId_0",
            "Waypoint Param ID",
            True,
            int,
            'Waypoint parameter ID_0 (-1: none)',
        ),
        ParamFieldInfo(
            "soundBankId",
            "Sound Bank ID",
            True,
            int,
            'Sound bank ID (-1: no bank, other: bank with specified ID)',
        ),
        ParamFieldInfo(
            "refDrawParamId",
            "Reference Draw Param ID",
            True,
            int,
            'Reference ID of drawing parameter',
        ),
        ParamFieldInfo(
            "autoCreateDynamicOffsetHeight",
            "Automatica Generation - Appearance Height Offset",
            True,
            float,
            'Map automatic generation OBJ appearance height offset [m], does it float from where the ray cast hits?',
        ),
        ParamFieldInfo(
            "reserved0",
            "Blank",
            True,
            int,
            'Reserve',
        ),
        ParamFieldInfo(
            "soundBreakSEId",
            "Destruction - SE ID",
            True,
            int,
            'Destruction sound SEID (9 digits) -1: Generated from objId',
        ),
        ParamFieldInfo(
            "pad_5[40]",
            "Padding",
            False,
            pad_field(40),
            '',
        ),
    ],
}
