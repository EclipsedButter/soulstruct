from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


NPC_THINK_PARAM_ST = {
    "param_type": "NPC_THINK_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "disableParam_NT:1",
            "Disable Param - Network Test",
            True,
            int,
            'Parameters marked with �� are excluded in the NT version package.',
        ),
        ParamFieldInfo(
            "disableParamReserve1:7",
            "Reserve for package output 1",
            False,
            bit_pad_field(7),
            'Reserve for package output 1',
        ),
        ParamFieldInfo(
            "disableParamReserve2[3]",
            "Reserve for package output 2",
            False,
            pad_field(3),
            'Reserve for package output 2',
        ),
        ParamFieldInfo(
            "logicId",
            "Logic ID",
            True,
            int,
            'Set the ID of the logic created by the script.',
        ),
        ParamFieldInfo(
            "battleGoalID",
            "Battle Goal ID",
            True,
            int,
            'Battle goal ID',
        ),
        ParamFieldInfo(
            "searchEye_dist",
            "Vision - Distance",
            True,
            int,
            'Search range by visual search.',
        ),
        ParamFieldInfo(
            "searchEye_angY",
            "Vision - Width",
            True,
            int,
            'Search range by visual search.',
        ),
        ParamFieldInfo(
            "isNoAvoidHugeEnemy:1",
            "Don't Avoid Giant Enemy",
            True,
            int,
            'Do you not detour a huge enemy?',
        ),
        ParamFieldInfo(
            "enableWeaponOnOff:1",
            "Enable Weapon Switch",
            True,
            int,
            'Do you want to pull out the sword?',
        ),
        ParamFieldInfo(
            "targetAILockDmyPoly:1",
            "Aim for AI Target Lock Dummy Poly ID",
            True,
            int,
            'Do you aim for Rock Damipoli (for enemies)?',
        ),
        ParamFieldInfo(
            "pad8:5",
            "Padding",
            False,
            bit_pad_field(5),
            '',
        ),
        ParamFieldInfo(
            "spEffectId_RangedAttack",
            "Ranged Attack - SpEffect ID",
            True,
            int,
            'Special effects ID for ranged attacks',
        ),
        ParamFieldInfo(
            "searchTargetLv1ForgetTime",
            "Search Target - Forget Time [1]",
            True,
            float,
            'Search enemy Lv1 Target Time to forget.',
        ),
        ParamFieldInfo(
            "searchTargetLv2ForgetTime",
            "Search Target - Forget Time [2]",
            True,
            float,
            'Search enemy Lv2 time to forget the target.',
        ),
        ParamFieldInfo(
            "BackHomeLife_OnHitEneWal",
            "Back Home Time on Touching Enemy Wall",
            True,
            float,
            'The life of the BackToHome goal when it touches an enemy wall that blocks the block',
        ),
        ParamFieldInfo(
            "SightTargetForgetTime",
            "Search Target - Visual Forget Time",
            True,
            float,
            'Time to forget the visual target.',
        ),
        ParamFieldInfo(
            "idAttackCannotMove",
            "Blocked Movement - Anim ID",
            True,
            int,
            'An action that automatically takes place when a destructible object stops it.',
        ),
        ParamFieldInfo(
            "ear_dist",
            "Listen - Distance",
            True,
            float,
            'Hearing search range ...',
        ),
        ParamFieldInfo(
            "callHelp_ActionAnimId",
            "Call Help - Action Animation ID",
            True,
            int,
            'Animation ID (EzStateAnimID) when responding',
        ),
        ParamFieldInfo(
            "callHelp_CallActionId",
            "Call Help - Call Action ID",
            True,
            int,
            'Action ID (EzStateAnimID) when calling a friend',
        ),
        ParamFieldInfo(
            "eye_dist",
            "Vision - Distance",
            True,
            int,
            'Visual search range.',
        ),
        ParamFieldInfo(
            "isGuard_Act",
            "Use Guard during Action",
            True,
            int,
            'Whether to guard against actions (assumed when returning home, looking toward the target)',
        ),
        ParamFieldInfo(
            "pad6[1]",
            "Padding",
            False,
            pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "ear_soundcut_dist",
            "Listen - Sound Cutoff Distance",
            True,
            int,
            'The distance to reduce the size of the sound source. You will not hear any sound below this distance.',
        ),
        ParamFieldInfo(
            "nose_dist",
            "Sense - Distance",
            True,
            int,
            'Search range by smell.',
        ),
        ParamFieldInfo(
            "maxBackhomeDist",
            "Retreat Home - Max Distance",
            True,
            int,
            'COMMON_SetBattleActLogic argument',
        ),
        ParamFieldInfo(
            "backhomeDist",
            "Retreat Home - Distance",
            True,
            int,
            'COMMON_SetBattleActLogic argument',
        ),
        ParamFieldInfo(
            "backhomeBattleDist",
            "Retreat Home - Battle Distance",
            True,
            int,
            'COMMON_SetBattleActLogic argument',
        ),
        ParamFieldInfo(
            "nonBattleActLife",
            "Non-Battle Act Duration when in Combat",
            True,
            int,
            'COMMON_SetBattleActLogic argument',
        ),
        ParamFieldInfo(
            "BackHome_LookTargetTime",
            "Retreat Home - Look for Target Time",
            True,
            int,
            'When returning home: Time to look at the target [sec]',
        ),
        ParamFieldInfo(
            "BackHome_LookTargetDist",
            "Retreat Home - Look for Target Distance",
            True,
            int,
            'When returning home: Distance to see the target [m]',
        ),
        ParamFieldInfo(
            "SoundTargetForgetTime",
            "Sound Target - Forget Time",
            True,
            float,
            'Time to forget the sound target.',
        ),
        ParamFieldInfo(
            "BattleStartDist",
            "Battle - Start Distance",
            True,
            int,
            '',
        ),
        ParamFieldInfo(
            "callHelp_MyPeerId",
            "Call Help - My Peer ID",
            True,
            int,
            'My fellow group ID',
        ),
        ParamFieldInfo(
            "callHelp_CallPeerId",
            "Call Help - Call Peer ID",
            True,
            int,
            'Companion group ID to call a companion',
        ),
        ParamFieldInfo(
            "targetSys_DmgEffectRate",
            "Target System - Damage Effect Rate",
            True,
            int,
            'Damage impact rate acquisition (target system evaluation information)',
        ),
        ParamFieldInfo(
            "TeamAttackEffectivity",
            "Team Attack Effectivity",
            True,
            int,
            'A value for determining the number of simultaneous attacks in a team. Increasing the value reduces the number of people who can participate in the attack at the same time.',
        ),
        ParamFieldInfo(
            "eye_angX",
            "Vision - Height Angle",
            True,
            int,
            'Visual search range.',
        ),
        ParamFieldInfo(
            "eye_angY",
            "Vision - Width Angle",
            True,
            int,
            'Visual search range.',
        ),
        ParamFieldInfo(
            "disableDark",
            "Disable Darkness Modifier to Distance",
            True,
            int,
            'Whether the alert vision_distance and battle start distance are not affected by the darkness',
        ),
        ParamFieldInfo(
            "caravanRole",
            "Caravan Role",
            True,
            int,
            'Role in the caravan',
        ),
        ParamFieldInfo(
            "callHelp_CallValidMinDistTarget",
            "Call Help - Valid Target Min Distance",
            True,
            int,
            'If it is closer than this value, you cannot call a friend.',
        ),
        ParamFieldInfo(
            "callHelp_CallValidRange",
            "Call Help - Valid Target Range",
            True,
            int,
            'Do not call if the companion is farther than this value.',
        ),
        ParamFieldInfo(
            "callHelp_ForgetTimeByArrival",
            "Call Help - Forget Time by Arrival",
            True,
            int,
            'Time to respond',
        ),
        ParamFieldInfo(
            "callHelp_MinWaitTime",
            "Call Help - Min Wait Time",
            True,
            int,
            'Minimum time for the first wait goal of the response goal [101 => 10.1sec]',
        ),
        ParamFieldInfo(
            "callHelp_MaxWaitTime",
            "Call Help - Max Wait Time",
            True,
            int,
            'Maximum time for the first waiting goal of the response goal [101 => 10.1sec]',
        ),
        ParamFieldInfo(
            "goalAction_ToCaution",
            "Goal Action - To Caution (Sound)",
            True,
            int,
            'Goal action: Target becomes alert due to normal sound detection',
        ),
        ParamFieldInfo(
            "ear_listenLevel",
            "Listen - Listen Level",
            True,
            int,
            'How good your ears are',
        ),
        ParamFieldInfo(
            "callHelp_ReplyBehaviorType",
            "Call Help - Reply Behavior Type",
            True,
            int,
            'Action type to target position after response',
        ),
        ParamFieldInfo(
            "disablePathMove",
            "Disable Path Move",
            True,
            int,
            'Whether to move directly without following the path even if a path move command comes',
        ),
        ParamFieldInfo(
            "skipArrivalVisibleCheck",
            "Skip Arrival Visibility Check",
            True,
            int,
            'Do you want to skip the arrival judgment by the line of sight? When set to On, arrival judgment is performed even if the line of sight does not pass.',
        ),
        ParamFieldInfo(
            "thinkAttr_doAdmirer",
            "Think Attribute - Do Admirer",
            True,
            int,
            'Thinking attribute: When turned on, it plays a role of surrounding.',
        ),
        ParamFieldInfo(
            "enableNaviFlg_Edge:1",
            "Navigation - Edge",
            True,
            int,
            'Can you pass through the node "cliff"? (def: 1)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_LargeSpace:1",
            "Navigation - Large Space",
            True,
            int,
            'Can you pass through the node "wide"? (def: 1)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_Ladder:1",
            "Navigation - Ladder",
            True,
            int,
            'Can you pass through the node "ladder"? (def: 0)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_Hole:1",
            "Navigation - Hole",
            True,
            int,
            'Can you go through the node "hole"? (def: 0)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_Door:1",
            "Navigation - Door",
            True,
            int,
            'Can you pass through the node "door"? (def: 0)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_InSideWall:1",
            "Navigation - Ignore Navmesh Wall",
            True,
            int,
            'Can you pass through the node "in the wall"? (def: 0)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_Lava:1",
            "Navigation - Lava",
            True,
            int,
            'Can you pass through the node "lava"? (def: 0)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_Edge_Ordinary:1",
            "Navigation - Cliff Edge",
            True,
            int,
            'Can you pass the node "cliff" under normal / alert conditions? (def: 1)',
        ),
        ParamFieldInfo(
            "enableNaviFlg_reserve1[3]",
            "Really booked",
            False,
            pad_field(3),
            'If you need a new flag, put it here (Not Padding)',
        ),
        ParamFieldInfo(
            "searchThreshold_Lv0toLv1",
            "Search Threshold - Level 0 to Level 1",
            True,
            int,
            'Search enemy Lv0 �� Lv1 threshold',
        ),
        ParamFieldInfo(
            "searchThreshold_Lv1toLv2",
            "Search Threshold - Level 1 to Level 2",
            True,
            int,
            'Search enemy Lv1 �� Lv2 threshold',
        ),
        ParamFieldInfo(
            "platoonReplyTime",
            "Platoon - Reply Time",
            True,
            float,
            'Platoon reaction delay time [sec]',
        ),
        ParamFieldInfo(
            "platoonReplyAddRandomTime",
            "Platoon - Reply Add Random Time",
            True,
            float,
            'Platoon reaction additional random time [sec]',
        ),
        ParamFieldInfo(
            "searchEye_angX",
            "Search Vision - Height Angle",
            True,
            int,
            'Searching enemy vision_angle (height) [deg]',
        ),
        ParamFieldInfo(
            "isUpdateBattleSight",
            "Update Battle Vision",
            True,
            int,
            'Do you want to overwrite the battle view?',
        ),
        ParamFieldInfo(
            "battleEye_updateDist",
            "Battle Vision - Overwrite Distance",
            True,
            int,
            'Battle Vision_Overwrite Distance [m]',
        ),
        ParamFieldInfo(
            "battleEye_updateAngX",
            "Battle Vision - Overwrite Height Angle",
            True,
            int,
            'Battle Vision_Overwrite Angle (Height) [deg]',
        ),
        ParamFieldInfo(
            "battleEye_updateAngY",
            "Battle Vision - Overwrite Width Angle",
            True,
            int,
            'Battle Vision_Overwrite Angle (Width) [deg]',
        ),
        ParamFieldInfo(
            "pad4[16]",
            "Padding",
            False,
            pad_field(16),
            '',
        ),
        ParamFieldInfo(
            "eye_BackOffsetDist",
            "Vision - Start Position - Backward Offset",
            True,
            int,
            'The viewing angle start position is behind this distance from the center of the character.',
        ),
        ParamFieldInfo(
            "eye_BeginDist",
            "Vision - Start Distance",
            True,
            int,
            'This distance is not recognized from the viewing angle generation position',
        ),
        ParamFieldInfo(
            "actTypeOnFailedPath",
            "Act Type on Failed Path",
            True,
            int,
            'Default action type to be performed when the path search fails, when the end point of the alternative path is reached / when the homecoming limit distance is reached',
        ),
        ParamFieldInfo(
            "goalAction_ToCautionImportant",
            "Goal Action - Target Alerted by Important Sound",
            True,
            int,
            'Goal action: Target becomes alert due to detection of important sound',
        ),
        ParamFieldInfo(
            "shiftAnimeId_RangedAttack",
            "Shift Animation ID on Ranged Attack",
            True,
            int,
            'Reference ID for AI attack parameters',
        ),
        ParamFieldInfo(
            "actTypeOnNonBtlFailedPath",
            "Act Type on Non-BTL Failed Path",
            True,
            int,
            'Target [None] Sometimes, the action to be taken after rewriting the current location to a nest',
        ),
        ParamFieldInfo(
            "isBuddyAI",
            "Is Spirit Summon AI",
            True,
            int,
            'Thinking for a buddy',
        ),
        ParamFieldInfo(
            "goalAction_ToSearchLv1",
            "Goal Action - Target Search Level 1",
            True,
            int,
            'Goal action: Target becomes Lv1',
        ),
        ParamFieldInfo(
            "goalAction_ToSearchLv2",
            "Goal Action - Target Search Level 2",
            True,
            int,
            'Goal action: Target became enemy Lv2',
        ),
        ParamFieldInfo(
            "enableJumpMove",
            "Jump Move Type",
            True,
            int,
            'Whether to jump over the user edge for jumping (non-combat state)',
        ),
        ParamFieldInfo(
            "disableLocalSteering",
            "Disable Local Steering",
            True,
            int,
            'Do you want to turn off the behavior (local steering) that tries to move while avoiding other characters?',
        ),
        ParamFieldInfo(
            "goalAction_ToDisappear",
            "Goal Action - Target Lost",
            True,
            int,
            'Goal action: Lost target',
        ),
        ParamFieldInfo(
            "changeStateAction_ToNormal",
            "Change State Action - To Normal",
            True,
            int,
            'Action when transitioning to the normal state',
        ),
        ParamFieldInfo(
            "MemoryTargetForgetTime",
            "Time to Forget Target",
            True,
            float,
            'Time to forget the memory target.',
        ),
        ParamFieldInfo(
            "rangedAttackId",
            "Attack ID - On Ranged Attack",
            True,
            int,
            'A parameter that specifies the attack ID issued by the enemy when making a ranged attack',
        ),
        ParamFieldInfo(
            "useFall_onNormalCaution",
            "Use Fall Jump - Outside of Combat",
            True,
            int,
            'Allows AI to pass the jumping edge in non-combat state',
        ),
        ParamFieldInfo(
            "useFall_onSearchBattle",
            "Use Fall Jump - In Combat",
            True,
            int,
            'Allow AI to pass through the jumping edge in combat',
        ),
        ParamFieldInfo(
            "enableJumpMove_onBattle",
            "Enable Jump - In Combat",
            True,
            int,
            'Whether to jump over the user edge for jumping (combat state)',
        ),
        ParamFieldInfo(
            "backToHomeStuckAct",
            "Back to Home Stuck Act",
            True,
            int,
            'Behavior when addicted to the homecoming limit',
        ),
        ParamFieldInfo(
            "pad3[4]",
            "Padding",
            False,
            pad_field(4),
            'pad',
        ),
        ParamFieldInfo(
            "soundBehaviorId01",
            "Sound Behavior ID [1]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "soundBehaviorId02",
            "Sound Behavior ID [2]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "soundBehaviorId03",
            "Sound Behavior ID [3]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "soundBehaviorId04",
            "Sound Behavior ID [4]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "soundBehaviorId05",
            "Sound Behavior ID [5]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "soundBehaviorId06",
            "Sound Behavior ID [6]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "soundBehaviorId07",
            "Sound Behavior ID [7]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "soundBehaviorId08",
            "Sound Behavior ID [8]",
            True,
            int,
            'Corresponds to the behavior ID of the sound target that can be heard',
        ),
        ParamFieldInfo(
            "weaponOffSpecialEffectId",
            "Weapon Switch Out - SpEffect ID",
            True,
            int,
            'Special effect ID at the time of sword delivery',
        ),
        ParamFieldInfo(
            "weaponOnSpecialEffectId",
            "Weapon Switch In - SpEffect ID",
            True,
            int,
            'Special effect ID when pulling out a sword',
        ),
        ParamFieldInfo(
            "weaponOffAnimId",
            "Weapon Switch Out - Animation ID",
            True,
            int,
            'Katana Anime ID',
        ),
        ParamFieldInfo(
            "weaponOnAnimId",
            "Weapon Switch In - Animation ID",
            True,
            int,
            'Sword animation ID',
        ),
        ParamFieldInfo(
            "surpriseAnimId",
            "Stealth Attack - Animation ID",
            True,
            int,
            'Amazing anime ID',
        ),
    ],
}
