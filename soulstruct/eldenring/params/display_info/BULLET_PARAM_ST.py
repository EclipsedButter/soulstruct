from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


BULLET_PARAM_ST = {
    "param_type": "BULLET_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "atkId_Bullet",
            "AtkParam ID",
            True,
            int,
            'Register each attack parameter ID. �� Attack type / Attack material / Physical attack power / Magic attack power / Stamina attack power / Knockback distance.',
        ),
        ParamFieldInfo(
            "sfxId_Bullet",
            "Projectile SFX ID",
            True,
            int,
            'Enter the SFX ID for [Bullet]. -1 does not occur.',
        ),
        ParamFieldInfo(
            "sfxId_Hit",
            "Impact SFX ID",
            True,
            int,
            '[Impact] Enter the SFX ID. -1 does not occur.',
        ),
        ParamFieldInfo(
            "sfxId_Flick",
            "Repel SFX ID",
            True,
            int,
            '[At the time of repelling] Enter the SFX ID. -1 does not occur.',
        ),
        ParamFieldInfo(
            "life",
            "Duration",
            True,
            float,
            'Time for missiles to continue to exist (-1 is infinite).',
        ),
        ParamFieldInfo(
            "dist",
            "Attenuation Range",
            True,
            float,
            'Distance at which attenuation begins (not actual flight distance).',
        ),
        ParamFieldInfo(
            "shootInterval",
            "Shoot Interval",
            True,
            float,
            'Specify how many seconds the missile will be fired.',
        ),
        ParamFieldInfo(
            "gravityInRange",
            "Gravity: In Range",
            True,
            float,
            'Downward gravity within range.',
        ),
        ParamFieldInfo(
            "gravityOutRange",
            "Gravity: Out of Range",
            True,
            float,
            'Gravity applied downward when damping begins (expresses the feeling of falling down.',
        ),
        ParamFieldInfo(
            "hormingStopRange",
            "Homing Stop Range",
            True,
            float,
            'The distance to the target to stop the guidance. A parameter that prevents you from hitting too much with a guided bullet.',
        ),
        ParamFieldInfo(
            "initVellocity",
            "Initial Velocity",
            True,
            float,
            'Initial speed of SFX.',
        ),
        ParamFieldInfo(
            "accelInRange",
            "Acceleration: In Range",
            True,
            float,
            'Acceleration within SFX range.',
        ),
        ParamFieldInfo(
            "accelOutRange",
            "Acceleration: Out of Range",
            True,
            float,
            'Acceleration when SFX goes out of range.',
        ),
        ParamFieldInfo(
            "maxVellocity",
            "Max Velocity",
            True,
            float,
            'maximum speed.',
        ),
        ParamFieldInfo(
            "minVellocity",
            "Min Velocity",
            True,
            float,
            'Minimum guaranteed speed.',
        ),
        ParamFieldInfo(
            "accelTime",
            "Acceleration Duration",
            True,
            float,
            'Until this time, do not accelerate (make sure you can shoot magic like rockets).',
        ),
        ParamFieldInfo(
            "homingBeginDist",
            "Homing Start Distance",
            True,
            float,
            'How many meters should the guidance start?',
        ),
        ParamFieldInfo(
            "hitRadius",
            "Initial Hit Radius",
            True,
            float,
            'Set the radius of the hit ball.',
        ),
        ParamFieldInfo(
            "hitRadiusMax",
            "Final Hit Radius",
            True,
            float,
            'Maximum radius of the hit sphere (If -1, make it the same as the initial radius / default)',
        ),
        ParamFieldInfo(
            "spreadTime",
            "Radius Spread Time",
            True,
            float,
            'The time when the radius of the range expands to a small extent.',
        ),
        ParamFieldInfo(
            "expDelay",
            "Explosion Delay",
            True,
            float,
            'Time from landing to explosion (if 0, it explodes immediately).',
        ),
        ParamFieldInfo(
            "hormingOffsetRange",
            "Homing Offset Range",
            True,
            float,
            'It is accurate if it is 0. At the time of shooting, each component of XYZ should be aimed by shifting this amount.',
        ),
        ParamFieldInfo(
            "dmgHitRecordLifeTime",
            "Damage Hit Duration",
            True,
            float,
            'Damage hit history survival time [sec] (<= 0.0f: indefinite)',
        ),
        ParamFieldInfo(
            "externalForce",
            "External Force in Bullet Direction",
            True,
            float,
            'External force applied in the direction of shooting. (Y-axis is removed)',
        ),
        ParamFieldInfo(
            "spEffectIDForShooter",
            "Shooter SpEffect ID",
            True,
            int,
            'Special effects on the person who shot',
        ),
        ParamFieldInfo(
            "autoSearchNPCThinkID",
            "Bullet AI",
            True,
            int,
            'Parameters used by the funnel to search for the target',
        ),
        ParamFieldInfo(
            "HitBulletID",
            "Hit Bullet ID",
            True,
            int,
            'Specify the ID when generating a new bullet parameter from the bullet parameter',
        ),
        ParamFieldInfo(
            "spEffectId0",
            "Target SpEffect ID [0]",
            True,
            int,
            'Register each special effect parameter ID. �� General special effects.',
        ),
        ParamFieldInfo(
            "spEffectId1",
            "Target SpEffect ID [1]",
            True,
            int,
            'Register each special effect parameter ID. �� General special effects.',
        ),
        ParamFieldInfo(
            "spEffectId2",
            "Target SpEffect ID [2]",
            True,
            int,
            'Register each special effect parameter ID. �� General special effects.',
        ),
        ParamFieldInfo(
            "spEffectId3",
            "Target SpEffect ID [3]",
            True,
            int,
            'Register each special effect parameter ID. �� General special effects.',
        ),
        ParamFieldInfo(
            "spEffectId4",
            "Target SpEffect ID [4]",
            True,
            int,
            'Register each special effect parameter ID. �� General special effects.',
        ),
        ParamFieldInfo(
            "numShoot",
            "Bullet Count",
            True,
            int,
            'The number of missiles fired at one time.',
        ),
        ParamFieldInfo(
            "homingAngle",
            "Homing Angle",
            True,
            int,
            'How many corrections per second? ..',
        ),
        ParamFieldInfo(
            "shootAngle",
            "Launch Angle",
            True,
            int,
            'Specify how many times the missile is fired forward.',
        ),
        ParamFieldInfo(
            "shootAngleInterval",
            "Launch Angle Interval",
            True,
            int,
            'When firing multiple missiles, specify how often to fire them. (Y-axis)',
        ),
        ParamFieldInfo(
            "shootAngleXInterval",
            "Launch Elevation Interval",
            True,
            int,
            'When firing multiple missiles, specify how often to fire them. (X-axis)',
        ),
        ParamFieldInfo(
            "damageDamp",
            "Damage Falloff %: Physical",
            True,
            int,
            'Correction value that decreases in 1 second after the attenuation distance.',
        ),
        ParamFieldInfo(
            "spelDamageDamp",
            "Damage Falloff %: Magic",
            True,
            int,
            'Correction value that decreases in 1 second after the attenuation distance.',
        ),
        ParamFieldInfo(
            "fireDamageDamp",
            "Damage Falloff %: Fire",
            True,
            int,
            'Correction value that decreases in 1 second after the attenuation distance.',
        ),
        ParamFieldInfo(
            "thunderDamageDamp",
            "Damage Falloff %: Lightning",
            True,
            int,
            'Correction value that decreases in 1 second after the attenuation distance.',
        ),
        ParamFieldInfo(
            "staminaDamp",
            "Damage Falloff %: Stamina",
            True,
            int,
            'Correction value that decreases in 1 second after the attenuation distance.',
        ),
        ParamFieldInfo(
            "knockbackDamp",
            "Damage Falloff %: Knockback",
            True,
            int,
            'Correction value that decreases in 1 second after the attenuation distance.',
        ),
        ParamFieldInfo(
            "shootAngleXZ",
            "Launch Elevation Angle",
            True,
            int,
            'Additional elevation angle from the horizontal.',
        ),
        ParamFieldInfo(
            "lockShootLimitAng",
            "Lock Direction Limit Angle",
            True,
            int,
            'Limit angle when facing the lock direction',
        ),
        ParamFieldInfo(
            "pad2[1]",
            "pad",
            False,
            pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "prevVelocityDirRate",
            "Previous Velocity Direction Rate",
            True,
            int,
            'Ratio to add the previous movement direction to the current direction when the sliding bullet hits the wall',
        ),
        ParamFieldInfo(
            "atkAttribute",
            "Attack Attribute",
            True,
            int,
            'Set the physical attributes to set for the bullet',
        ),
        ParamFieldInfo(
            "spAttribute",
            "Special Attribute",
            True,
            int,
            'Set special attributes to set for bullets',
        ),
        ParamFieldInfo(
            "Material_AttackType",
            "Material Attack Type",
            True,
            int,
            'Specify what the attack attribute is',
        ),
        ParamFieldInfo(
            "Material_AttackMaterial",
            "Material Attack Material",
            True,
            int,
            'Used for SFX / SE during attack',
        ),
        ParamFieldInfo(
            "isPenetrateChr:1",
            "Is Penetrate Character",
            True,
            int,
            'If it is ON, it will penetrate without landing when it hits the character.',
        ),
        ParamFieldInfo(
            "isPenetrateObj:1",
            "Is Penetrate Object",
            True,
            int,
            'If it is ON, it will penetrate without landing when hitting a dynamic / partial destruction asset.',
        ),
        ParamFieldInfo(
            "pad:6",
            "pad",
            False,
            bit_pad_field(6),
            '',
        ),
        ParamFieldInfo(
            "launchConditionType",
            "Launch Condition Type",
            True,
            int,
            'Specify the condition to judge whether to generate a bullet when it lands or the life is extinguished',
        ),
        ParamFieldInfo(
            "FollowType:3",
            "Follow Type",
            True,
            int,
            'Follow-up type. "Do not follow" is the default.',
        ),
        ParamFieldInfo(
            "EmittePosType:3",
            "Emitter Source Type",
            True,
            int,
            'Source type. Usually from Damipoli. (Introduced to judge meteo)',
        ),
        ParamFieldInfo(
            "isAttackSFX:1",
            "Is Persistent Attack SFX",
            True,
            int,
            'Set whether bullets such as arrows will remain stuck in the character',
        ),
        ParamFieldInfo(
            "isEndlessHit:1",
            "Is Continuous Hit",
            True,
            int,
            'Do you keep hitting?',
        ),
        ParamFieldInfo(
            "isPenetrateMap:1",
            "Is Penetrate Map",
            True,
            int,
            'If it is ON, it will penetrate without landing when hitting a hit / static asset.',
        ),
        ParamFieldInfo(
            "isHitBothTeam:1",
            "Is Hit Both Teams",
            True,
            int,
            'Are you an enemy or an ally? (Not a wandering ghost)',
        ),
        ParamFieldInfo(
            "isUseSharedHitList:1",
            "Is Use Shared Hit List",
            True,
            int,
            'Specify whether to share the hit list',
        ),
        ParamFieldInfo(
            "isUseMultiDmyPolyIfPlace:1",
            "Use Multiple Dummy Polys for Placement",
            True,
            int,
            'Do you use the same Damipoly ID more than once when placing bullets?',
        ),
        ParamFieldInfo(
            "isHitOtherBulletForceEraseA:1",
            "Force Erase Bullet A if Hit by Other Bullet",
            True,
            int,
            'Does it hit other bullets forced erasure A?',
        ),
        ParamFieldInfo(
            "isHitOtherBulletForceEraseB:1",
            "Force Erase Bullet B if Hit by Other Bullet",
            True,
            int,
            'Does it hit the other bullet forced erasure B?',
        ),
        ParamFieldInfo(
            "isHitForceMagic:1",
            "Is Bullet deflected by Magic",
            True,
            int,
            'Do you hit the force magic?',
        ),
        ParamFieldInfo(
            "isIgnoreSfxIfHitWater:1",
            "Is SFX ignored on Water Hit",
            True,
            int,
            'Should I ignore the effect if it hits the surface of the water?',
        ),
        ParamFieldInfo(
            "isIgnoreMoveStateIfHitWater:1",
            "Is Move State Ignored on Water Hit",
            True,
            int,
            'Whether to ignore the state transition even if it hits water',
        ),
        ParamFieldInfo(
            "isHitDarkForceMagic:1",
            "Is Bullet deflected by Bullet Deflection",
            True,
            int,
            'Do you hit the dark force magic?',
        ),
        ParamFieldInfo(
            "dmgCalcSide:2",
            "Damage Calculation Side",
            True,
            int,
            'Damage calculation side. During multiplayer, the damage calculation is for switching between the giving side and the receiving side.',
        ),
        ParamFieldInfo(
            "isEnableAutoHoming:1",
            "Is Auto Homing Enabled",
            True,
            int,
            'Whether to automatically follow when not locked on',
        ),
        ParamFieldInfo(
            "isSyncBulletCulcDumypolyPos:1",
            "Is Emitter Source Synced with Bullet",
            True,
            int,
            'In the case of a synchronously generated bullet, the emitter attitude at the time of synchronization is used without recalculating the attitude due to the Damipoli position when the bullet is generated.',
        ),
        ParamFieldInfo(
            "isOwnerOverrideInitAngle:1",
            "Is Direction Inherited by Child Bullet",
            True,
            int,
            'Only valid for sub-bullets. If it is ON, the reference direction is the owner.',
        ),
        ParamFieldInfo(
            "isInheritSfxToChild:1",
            "Is SFX Inherited by Child Bullet",
            True,
            int,
            'Take over the SFX of the parent bullet. Ignore the SFX ID set for the sub bullet',
        ),
        ParamFieldInfo(
            "darkDamageDamp",
            "Damage Falloff %: Holy",
            True,
            int,
            'Correction value that decreases in 1 second after the attenuation distance.',
        ),
        ParamFieldInfo(
            "bulletSfxDeleteType_byHit",
            "Bullet SFX Delete Type - By Hit",
            True,
            int,
            'Bullet SFX extinction type when landing or playing',
        ),
        ParamFieldInfo(
            "bulletSfxDeleteType_byLifeDead",
            "Bullet SFX Delete Type - By Expiration",
            True,
            int,
            'Bullet SFX extinction type at the end of life',
        ),
        ParamFieldInfo(
            "targetYOffsetRange",
            "Target Vertical Offset",
            True,
            float,
            'Vertical offset of landing position. Shift the target position up and down at the time of launch and during homing. (-N ~ n)',
        ),
        ParamFieldInfo(
            "shootAngleYMaxRandom",
            "Random Launch Angle - Max",
            True,
            float,
            'Upper limit of random number of firing angle (0 to 360)',
        ),
        ParamFieldInfo(
            "shootAngleXMaxRandom",
            "Random Elevation Angle - Max",
            True,
            float,
            'Upper limit of firing elevation random number (0 to 360)',
        ),
        ParamFieldInfo(
            "intervalCreateBulletId",
            "Bullet Emitter: Bullet ID",
            True,
            int,
            'Bullet ID used when making bullets at regular intervals',
        ),
        ParamFieldInfo(
            "intervalCreateTimeMin",
            "Bullet Emitter: Minimum Shoot Interval",
            True,
            float,
            'Minimum interval for making bullets at regular intervals (0 to n)',
        ),
        ParamFieldInfo(
            "intervalCreateTimeMax",
            "Bullet Emitter: Maximum Shoot Interval",
            True,
            float,
            'Maximum interval for making bullets at regular intervals (function is disabled if 0 to n 0)',
        ),
        ParamFieldInfo(
            "predictionShootObserveTime",
            "Prediction Shoot Observe Time",
            True,
            float,
            'Average speed observation time of predicted shooting function (function is invalid if 0 to 40)',
        ),
        ParamFieldInfo(
            "intervalCreateWaitTime",
            "Bullet Emitter: Initial Wait Time",
            True,
            float,
            'Waiting time to start making bullets at regular intervals',
        ),
        ParamFieldInfo(
            "sfxPostureType",
            "SFX Posture Type",
            True,
            int,
            'Set the initial attitude of an SFX or sub-bullet created from a bullet',
        ),
        ParamFieldInfo(
            "createLimitGroupId",
            "Create Limit Group ID",
            True,
            int,
            'If it is 0, it is unused. If the upper limit is reached when creating a bullet set in the same group Id, that bullet will not be created. (Bullets created synchronously on the network will be released regardless)',
        ),
        ParamFieldInfo(
            "pad5[1]",
            "pad",
            False,
            pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "isInheritSpeedToChild:1",
            "Is Speed Inherited by Child Bullet",
            True,
            int,
            'Take over the speed of the timing to replace the submunition. Ignore the speed set for the submunition',
        ),
        ParamFieldInfo(
            "isDisableHitSfx_byChrAndObj:1",
            "Is SFX Disabled on Chr/Object Hit",
            True,
            int,
            'When ON, the bullet parameter "landing SFX" does not play even if it hits a character / object.',
        ),
        ParamFieldInfo(
            "isCheckWall_byCenterRay:1",
            "Is Wall Checked by Center Ray",
            True,
            int,
            'There was a problem with the digging judgment when firing a bullet, so it is for error handling. SEQ23101 [Own character] If you use a soul short arrow or a strong soul short arrow in close contact with a character with a high lock-on position, the direction of the bullet will be reversed.',
        ),
        ParamFieldInfo(
            "isHitFlare:1",
            "Is Hit Flare",
            True,
            int,
            'Do you hit flare magic?',
        ),
        ParamFieldInfo(
            "isUseBulletWallFilter:1",
            "Is Bullet Wall Filter Used",
            True,
            int,
            'Do you use primitive magic Atari? It will change to a filter that corresponds to the Atari dedicated to primitive magic.',
        ),
        ParamFieldInfo(
            "pad1:1",
            "pad",
            False,
            bit_pad_field(1),
            '',
        ),
        ParamFieldInfo(
            "isNonDependenceMagicForFunnleNum:1",
            "Is Follow Bullet Count not scaled by INT",
            True,
            int,
            'The number of funnels on the PC does not fluctuate by force. Become the number of shots',
        ),
        ParamFieldInfo(
            "isAiInterruptShootNoDamageBullet:1",
            "Is AI Interrupted by Bullet",
            True,
            int,
            'Does it react to AI bullets (even with 0 attack power)?',
        ),
        ParamFieldInfo(
            "randomCreateRadius",
            "Emitter Source Radius",
            True,
            float,
            'The range of bullets used when the source type is set to occur at random locations.',
        ),
        ParamFieldInfo(
            "followOffset_BaseHeight",
            "Follow Bullet - Height Offset",
            True,
            float,
            'Funnel tracking position_base point height [m]',
        ),
        ParamFieldInfo(
            "assetNo_Hit",
            "Asset Generated on Hit",
            True,
            int,
            'The number of the asset to be generated at the time of landing. -1: Do not generate. The asset number is the last 6 digits of the asset. Example: AEG999_999 = 999999',
        ),
        ParamFieldInfo(
            "lifeRandomRange",
            "Duration - Random Range",
            True,
            float,
            'Add a random number of seconds with a set time fluctuation range to the "lifetime [s]".',
        ),
        ParamFieldInfo(
            "homingAngleX",
            "Homing Angle: X",
            True,
            int,
            'Only the X-axis component of the inductive performance is changed. Do not change with -1',
        ),
        ParamFieldInfo(
            "ballisticCalcType",
            "Ballistic Calculation Type",
            True,
            int,
            'Ballistic calculation type',
        ),
        ParamFieldInfo(
            "attachEffectType",
            "Attach Effect Type",
            True,
            int,
            'Effect type to attach',
        ),
        ParamFieldInfo(
            "seId_Bullet1",
            "Insert SE ID - Bullet [1]",
            True,
            int,
            'Insert SE ID1 for [Bullet]. -1: Not generated 9 digits. Sound type is fixed to s: SFX.',
        ),
        ParamFieldInfo(
            "seId_Bullet2",
            "Insert SE ID - Bullet [2]",
            True,
            int,
            'Insert SE ID 2 for [Bullet]. -1: Not generated 9 digits. Sound type is fixed to s: SFX.',
        ),
        ParamFieldInfo(
            "seId_Hit",
            "Insert SE ID - Hit",
            True,
            int,
            'Insert SE ID 1 for [landing]. -1 does not occur. 9 digits. Sound type is fixed to s: SFX.',
        ),
        ParamFieldInfo(
            "seId_Flick",
            "Insert SE ID - Repel",
            True,
            int,
            '[At the time of repelling] Enter SE ID1 for. -1 does not occur. 9 digits. Sound type is fixed to s: SFX.',
        ),
        ParamFieldInfo(
            "howitzerShootAngleXMin",
            "Howitzer - Launch Elevation Limit - Min",
            True,
            int,
            '[Curly fire] The lower limit [deg] with the firing elevation angle as a reference (0 deg) before applying the curve fire calculation.',
        ),
        ParamFieldInfo(
            "howitzerShootAngleXMax",
            "Howitzer - Launch Elevation Limit - Max",
            True,
            int,
            '[Sky firing] The upper limit [deg] based on the firing elevation angle (0deg) before applying the bending firing calculation.',
        ),
        ParamFieldInfo(
            "howitzerInitMinVelocity",
            "Howitzer - Initial Min Velocity",
            True,
            float,
            '[Song firing] The minimum speed limit for song firing calculation [m / s].',
        ),
        ParamFieldInfo(
            "howitzerInitMaxVelocity",
            "Howitzer - Initial Max Velocity",
            True,
            float,
            '[Song firing] Maximum speed limit for song firing calculation [m / s].',
        ),
        ParamFieldInfo(
            "sfxId_ForceErase",
            "SFX ID - Force Erase",
            True,
            int,
            'SFX ID at the time of forced erasure. -1 does not occur.',
        ),
        ParamFieldInfo(
            "bulletSfxDeleteType_byForceErase",
            "Bullet SFX Delete Type - By Force Erase",
            True,
            int,
            'Bullet SFX extinction type at the time of forced erasure',
        ),
        ParamFieldInfo(
            "pad3[1]",
            "Padding 3",
            False,
            pad_field(1),
            'pad3',
        ),
        ParamFieldInfo(
            "followDmypoly_forSfxPose",
            "Follow Bullet - Dummy Poly for SFX Pose",
            True,
            int,
            'SFX direction specification when following Damipoli',
        ),
        ParamFieldInfo(
            "followOffset_Radius",
            "Follow Bullet - Radius Offset",
            True,
            float,
            'Funnel tracking position_radius [m]',
        ),
        ParamFieldInfo(
            "spBulletDistUpRate",
            "SpEffect Bullet Distance - Magnification",
            True,
            float,
            'Special effect flight distance correction magnification',
        ),
        ParamFieldInfo(
            "nolockTargetDist",
            "Target Range when Unlocked",
            True,
            float,
            'Target range when unlocked (-1: Refer to "range", 0: No target)',
        ),
        ParamFieldInfo(
            "pad4[8]",
            "pad",
            False,
            pad_field(8),
            '',
        ),
    ],
}
