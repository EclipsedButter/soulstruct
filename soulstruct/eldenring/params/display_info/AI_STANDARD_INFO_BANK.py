from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


AI_STANDARD_INFO_BANK = {
    "param_type": "AI_STANDARD_INFO_BANK",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "RadarRange",
            "Recognition distance [m]",
            True,
            int,
            'Distance to recognize hostile characters',
        ),
        ParamFieldInfo(
            "RadarAngleX",
            "Recognition angle X [deg]",
            True,
            int,
            'X angle for recognizing hostile characters: The current line-of-sight direction is 0 degrees, and the top is +.',
        ),
        ParamFieldInfo(
            "RadarAngleY",
            "Recognition angle Y [deg]",
            True,
            int,
            'Y angle for recognizing hostile characters: The current line-of-sight direction is 0 degrees, and the right is +.',
        ),
        ParamFieldInfo(
            "TerritorySize",
            "Territory distance [m]",
            True,
            int,
            'The distance of your territory. If the recognizing player deviates from this distance, it will return to the initial position.',
        ),
        ParamFieldInfo(
            "ThreatBeforeAttackRate",
            "Intimidation rate before attack [0-100]",
            True,
            int,
            'Probability of threatening before attack',
        ),
        ParamFieldInfo(
            "ForceThreatOnFirstLocked",
            "First recognition menacing",
            True,
            int,
            'Whether to intimidate when recognizing the first player',
        ),
        ParamFieldInfo(
            "reserve0[24]",
            "reserve",
            False,
            pad_field(24),
            '',
        ),
        ParamFieldInfo(
            "Attack1_Distance",
            "Attack 1 Maai [m]",
            True,
            int,
            'Time to attack [m]',
        ),
        ParamFieldInfo(
            "Attack1_Margin",
            "Attack 1 Maai play [m]",
            True,
            int,
            'Play between attacks. Do not vibrate near the distance',
        ),
        ParamFieldInfo(
            "Attack1_Rate",
            "Attack 1 ratio [0-100]",
            True,
            int,
            'Frequency of attacks',
        ),
        ParamFieldInfo(
            "Attack1_ActionID",
            "Attack 1 type",
            True,
            int,
            'Types of attacks',
        ),
        ParamFieldInfo(
            "Attack1_DelayMin",
            "Attack 1 Minimum delay time [frame]",
            True,
            int,
            'The minimum delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack1_DelayMax",
            "Attack 1 Maximum delay time [frame]",
            True,
            int,
            'The longest delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack1_ConeAngle",
            "Attack 1 Attack permission Conical angle [deg]",
            True,
            int,
            'If the angle between the line-of-sight direction and the direction vector to the target is within this angle, the attack is OK.',
        ),
        ParamFieldInfo(
            "reserve10[7]",
            "reserve",
            False,
            pad_field(7),
            '',
        ),
        ParamFieldInfo(
            "Attack2_Distance",
            "Attack 2 Maai [m]",
            True,
            int,
            'Time to attack [m]',
        ),
        ParamFieldInfo(
            "Attack2_Margin",
            "Attack 2 Maai play [m]",
            True,
            int,
            'Play between attacks. Do not vibrate near the distance',
        ),
        ParamFieldInfo(
            "Attack2_Rate",
            "Attack 1 ratio [0-100]",
            True,
            int,
            'Frequency of attacks',
        ),
        ParamFieldInfo(
            "Attack2_ActionID",
            "Attack 2 type",
            True,
            int,
            'Types of attacks',
        ),
        ParamFieldInfo(
            "Attack2_DelayMin",
            "Attack 2 Minimum delay time [frame]",
            True,
            int,
            'The minimum delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack2_DelayMax",
            "Attack 2 Maximum delay time [frame]",
            True,
            int,
            'The longest delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack2_ConeAngle",
            "Attack 2 Attack permission Conical angle [deg]",
            True,
            int,
            'If the angle between the line-of-sight direction and the direction vector to the target is within this angle, the attack is OK.',
        ),
        ParamFieldInfo(
            "reserve11[7]",
            "reserve",
            False,
            pad_field(7),
            '',
        ),
        ParamFieldInfo(
            "Attack3_Distance",
            "Attack 3 Maai [m]",
            True,
            int,
            'Time to attack [m]',
        ),
        ParamFieldInfo(
            "Attack3_Margin",
            "Attack 3 Maai play [m]",
            True,
            int,
            'Play between attacks. Do not vibrate near the distance',
        ),
        ParamFieldInfo(
            "Attack3_Rate",
            "Attack 1 ratio [0-100]",
            True,
            int,
            'Frequency of attacks',
        ),
        ParamFieldInfo(
            "Attack3_ActionID",
            "Attack 3 types",
            True,
            int,
            'Types of attacks',
        ),
        ParamFieldInfo(
            "Attack3_DelayMin",
            "Attack 3 Minimum delay time [frame]",
            True,
            int,
            'The minimum delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack3_DelayMax",
            "Attack 3 Maximum delay time [frame]",
            True,
            int,
            'The longest delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack3_ConeAngle",
            "Attack 3 Attack permission Conical angle [deg]",
            True,
            int,
            'If the angle between the line-of-sight direction and the direction vector to the target is within this angle, the attack is OK.',
        ),
        ParamFieldInfo(
            "reserve12[7]",
            "reserve",
            False,
            pad_field(7),
            '',
        ),
        ParamFieldInfo(
            "Attack4_Distance",
            "Attack 4 Maai [m]",
            True,
            int,
            'Time to attack [m]',
        ),
        ParamFieldInfo(
            "Attack4_Margin",
            "Attack 4 Maai play [m]",
            True,
            int,
            'Play between attacks. Do not vibrate near the distance',
        ),
        ParamFieldInfo(
            "Attack4_Rate",
            "Attack 1 ratio [0-100]",
            True,
            int,
            'Frequency of attacks',
        ),
        ParamFieldInfo(
            "Attack4_ActionID",
            "4 types of attacks",
            True,
            int,
            'Types of attacks',
        ),
        ParamFieldInfo(
            "Attack4_DelayMin",
            "Attack 4 Minimum delay time [frame]",
            True,
            int,
            'The minimum delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack4_DelayMax",
            "Attack 4 Maximum delay time [frame]",
            True,
            int,
            'The longest delay time from the time when an attack becomes possible to the time when an attack is possible.',
        ),
        ParamFieldInfo(
            "Attack4_ConeAngle",
            "Attack 4 Attack permission Conical angle [deg]",
            True,
            int,
            'If the angle between the line-of-sight direction and the direction vector to the target is within this angle, the attack is OK.',
        ),
        ParamFieldInfo(
            "reserve13[7]",
            "reserve",
            False,
            pad_field(7),
            '',
        ),
        ParamFieldInfo(
            "reserve_last[32]",
            "reserve",
            False,
            pad_field(32),
            '',
        ),
    ],
}
