from soulstruct.base.params.utils import ParamFieldInfo, pad_field, bit_pad_field


PLAYER_COMMON_PARAM_ST = {
    "param_type": "PLAYER_COMMON_PARAM_ST",
    "file_name": "",  # TODO
    "nickname": "",  # TODO
    "fields": [
        ParamFieldInfo(
            "playerFootEffect_bySFX",
            "Automatic Foot Effect SFX Identifier",
            True,
            int,
            'The identifier used for the SFX ID of the automatic foot effect. It corresponds to ZZZ of XYYZZZ.',
        ),
        ParamFieldInfo(
            "snipeModeDrawAlpha_FadeTime",
            "Precision Shoot - Player Model Fade Time",
            True,
            float,
            'The fade time when hiding the player during precision shooting. The unit is seconds',
        ),
        ParamFieldInfo(
            "toughnessRecoverCorrection",
            "Toughness Recovery Correction",
            True,
            float,
            "A correction value used to calculate the player's toughness recovery time.",
        ),
        ParamFieldInfo(
            "baseMagicSlotSize",
            "Base Memory Slot Count",
            True,
            int,
            'Magic memory slot initial value',
        ),
        ParamFieldInfo(
            "baseAccSlotNum",
            "Base Talisman Slot Count",
            True,
            int,
            'Talisman equipment slot initial value',
        ),
        ParamFieldInfo(
            "reserved02[2]",
            "reserve",
            False,
            pad_field(2),
            '(dummy8)',
        ),
        ParamFieldInfo(
            "animeID_DropItemPick",
            "Item Pick-up - Animation ID",
            True,
            int,
            'Animation ID when picking up a drop item',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Sleep_Player",
            "Player Resist Recovery - Sleep",
            True,
            float,
            'Player resistance value recovery amount_sleep [point / s]',
        ),
        ParamFieldInfo(
            "flareOverrideHomingAngle",
            "Flare Overwrite Homing Angle",
            True,
            int,
            'Flare overwrite guidance performance [deg / s] (-1: no overwrite)',
        ),
        ParamFieldInfo(
            "flareOverrideHomingStopRange",
            "Flare Overwrite Homing Stop Range",
            True,
            float,
            'Flare overwrite guidance stop distance [m] (-1: no overwrite)',
        ),
        ParamFieldInfo(
            "animeID_SleepCollectorItemPick",
            "Sleep Collector Item Pick-up - Animation ID",
            True,
            int,
            'Animation ID when acquiring Nemuri item',
        ),
        ParamFieldInfo(
            "unlockEventFlagBaseId_forWepAttr",
            "Weapon Affinity Unlock - Base Event Flag ID",
            True,
            int,
            'Weapon attribute ban event flag base ID',
        ),
        ParamFieldInfo(
            "systemEnchant_BigRune",
            "Great Rune Activation - SpEffect ID",
            True,
            int,
            'Special effect Id to call when a large rune is activated from the system',
        ),
        ParamFieldInfo(
            "lowStatus_AtkPowDown",
            "Insufficient Stats - Attack Power Reduction",
            True,
            float,
            'Insufficient status Basic attack power reduction',
        ),
        ParamFieldInfo(
            "lowStatus_ConsumeStaminaRate",
            "Insufficient Stats - Stamina Consumption",
            True,
            float,
            'Insufficient status Stamina consumption ratio',
        ),
        ParamFieldInfo(
            "lowStatus_AtkGuardBreak",
            "Insufficient Stats - Stamina Damage Reduction",
            True,
            int,
            'Insufficient status Playing attack power',
        ),
        ParamFieldInfo(
            "guardStatusCorrect_MaxStatusVal",
            "Guard Boost Correction - Max Value",
            True,
            int,
            'Maximum status value to increase performance used when calculating the status correction value of shield performance',
        ),
        ParamFieldInfo(
            "unlockEventFlagStepNum_forWepAttr",
            "Weapon Affinity Unlock - Event Flag Step Offset",
            True,
            int,
            'How much space is left for each weapon attribute ID from the base ID. Weapon attribute ban event flag ID = << Weapon attribute ban event flag base ID >> + Weapon attribute ID x << Weapon attribute ban event flag number of steps >>',
        ),
        ParamFieldInfo(
            "retributionMagic_damageCountNum",
            "Retribution Magic - Damage Trigger Count",
            True,
            int,
            'Causal Retribution_Number of Damages Before Counterattack',
        ),
        ParamFieldInfo(
            "retributionMagic_damageCountRemainTime",
            "Retribution Magic - Damage Trigger Duration",
            True,
            int,
            'Causal response_Number of damages until counterattack Duration [s]',
        ),
        ParamFieldInfo(
            "retributionMagic_burstDmypolyId",
            "Retribution Magic - Explosion Dummy Poly ID",
            True,
            int,
            'Causal Retribution_Counterattack Magic Damipoli ID',
        ),
        ParamFieldInfo(
            "retributionMagic_burstMagicParamId",
            "Retribution Magic - Explosion Magic Param ID",
            True,
            int,
            'Causal Retribution_Counterattack Magic Param ID',
        ),
        ParamFieldInfo(
            "chrAimCam_rideOffsetHeight",
            "Mounted Precision Shoot - Camera Offset Height",
            True,
            float,
            'Riding precision shooting camera offset height',
        ),
        ParamFieldInfo(
            "reserved23[4]",
            "reserve",
            False,
            pad_field(4),
            '(dummy8)',
        ),
        ParamFieldInfo(
            "arrowCaseWepBindDmypolyId",
            "Quiver Dummy Poly ID",
            True,
            int,
            'Quiver adsorption Damipoly ID',
        ),
        ParamFieldInfo(
            "boltPouchWepBindDmypolyId",
            "Bolt Case Dummy Poly ID",
            True,
            int,
            'Bolt cylinder adsorption Damipoly ID (However, if the bolt cylinder is used alone, the quiver Damipoly ID is used)',
        ),
        ParamFieldInfo(
            "estusFlaskAllocateRate",
            "Multiplayer Flask Reduction",
            True,
            float,
            'Multi-time client bottle correction magnification (0.5 specified to halve the number of possessions)',
        ),
        ParamFieldInfo(
            "reserved38[2]",
            "reserve",
            False,
            pad_field(2),
            '(dummy8)',
        ),
        ParamFieldInfo(
            "kickAcceptanceDeg",
            "Kick Acceptance Angle",
            True,
            int,
            'Angle at which a kick can be taken when viewed from the front of the player',
        ),
        ParamFieldInfo(
            "npcPlayerAnalogWeightRate_Light",
            "NPC Player - Weight Rate: Light",
            True,
            int,
            'Analog weight ratio for NPC players [%]. lightweight.',
        ),
        ParamFieldInfo(
            "npcPlayerAnalogWeightRate_Normal",
            "NPC Player - Weight Rate: Normal",
            True,
            int,
            'Analog weight ratio for NPC players [%]. Medium weight.',
        ),
        ParamFieldInfo(
            "npcPlayerAnalogWeightRate_Heavy",
            "NPC Player - Weight Rate: Heavy",
            True,
            int,
            'Analog weight ratio for NPC players [%]. weight.',
        ),
        ParamFieldInfo(
            "npcPlayerAnalogWeightRate_WeightOver",
            "NPC Player - Weight Rate: Encumbered",
            True,
            int,
            'Analog weight ratio for NPC players [%]. Overweight.',
        ),
        ParamFieldInfo(
            "npcPlayerAnalogWeightRate_SuperLight",
            "NPC Player - Weight Rate: Ninja",
            True,
            int,
            'Analog weight ratio for NPC players [%]. Super lightweight.',
        ),
        ParamFieldInfo(
            "reserved45[4]",
            "reserve",
            False,
            pad_field(4),
            '(dummy8)',
        ),
        ParamFieldInfo(
            "clearCountCorrectBaseSpEffectId",
            "Game Clear - Base SpEffect ID",
            True,
            int,
            'Criteria ID for special effects applied for lap correction',
        ),
        ParamFieldInfo(
            "arrowBoltModelIdOffset",
            "Ammunition Model ID Offset",
            True,
            int,
            'Offset added to the model ID when equipped in slot 1 when displaying the arrow and bolt models. (Model Id + offset value)',
        ),
        ParamFieldInfo(
            "arrowBoltRemainingNumModelMaskThreshold1",
            "Ammunition Count Model Mask Threshold [1]",
            True,
            int,
            'When displaying the arrow and bolt models, the one-step judgment value [%] of the threshold value when applying the display mask by the number. (If it is more than this value, it is displayed in one step)',
        ),
        ParamFieldInfo(
            "arrowBoltRemainingNumModelMaskThreshold2",
            "Ammunition Count Model Mask Threshold [2]",
            True,
            int,
            'Two-step judgment value [%] of the threshold value when applying a display mask based on the number of arrows and bolt models. (If it is more than this value, it is displayed in 2 steps)',
        ),
        ParamFieldInfo(
            "reserved27[2]",
            "reserve",
            False,
            pad_field(2),
            '(dummy8)',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Poision_Player",
            "Player Resist Recovery - Poison",
            True,
            float,
            'Player resistance recovery amount_poison [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Desease_Player",
            "Player Resist Recovery - Scarlet Rot",
            True,
            float,
            'Player resistance value recovery amount_plague [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Blood_Player",
            "Player Resist Recovery - Hemorrhage",
            True,
            float,
            'Player resistance recovery amount_bleeding [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Curse_Player",
            "Player Resist Recovery - Blight",
            True,
            float,
            'Player resistance recovery amount_curse [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Freeze_Player",
            "Player Resist Recovery - Frostbite",
            True,
            float,
            'Player resistance value recovery amount_cold air [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Poision_Enemy",
            "Enemy Resist Recovery - Poison",
            True,
            float,
            'Enemy resistance recovery amount_poison [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Desease_Enemy",
            "Enemy Resist Recovery - Scarlet Rot",
            True,
            float,
            'Enemy resistance value recovery amount_plague [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Blood_Enemy",
            "Enemy Resist Recovery - Hemorrhage",
            True,
            float,
            'Enemy resistance recovery amount_bleeding [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Curse_Enemy",
            "Enemy Resist Recovery - Blight",
            True,
            float,
            'Enemy resistance recovery amount_curse [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Freeze_Enemy",
            "Enemy Resist Recovery - Frostbite",
            True,
            float,
            'Enemy resistance value recovery amount_cold air [point / s]',
        ),
        ParamFieldInfo(
            "requestTimeLeftBothHand",
            "Button Input Time for Both-Hand Left",
            True,
            float,
            'Button input time when holding both left hand',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Madness_Player",
            "Player Resist Recovery - Madness",
            True,
            float,
            'Player resistance value recovery amount_madness [point / s]',
        ),
        ParamFieldInfo(
            "animeID_MaterialItemPick",
            "Material Pick-up - Animation ID",
            True,
            int,
            'Animation ID when picking up a material item',
        ),
        ParamFieldInfo(
            "hpEstusFlaskAllocateRateForYellowMonk",
            "HP Flask Reduction - Yellow Monk",
            True,
            float,
            'Yellow Cloth HP Est Bottle Correction Magnification',
        ),
        ParamFieldInfo(
            "hpEstusFlaskAllocateOffsetForYellowMonk",
            "HP Flask Offset - Yellow Monk",
            True,
            int,
            'Yellow Cloth HP Est Bottle Offset',
        ),
        ParamFieldInfo(
            "mpEstusFlaskAllocateRateForYellowMonk",
            "FP Flask Reduction - Yellow Monk",
            True,
            float,
            'Yellow Cloth MP Est Bottle Correction Magnification',
        ),
        ParamFieldInfo(
            "mpEstusFlaskAllocateOffsetForYellowMonk",
            "FP Flask Offset - Yellow Monk",
            True,
            int,
            'Yellow Cloth MP Est Bottle Offset',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Sleep_Enemy",
            "Enemy Resist Recovery - Sleep",
            True,
            float,
            'Enemy resistance value recovery amount_sleep [point / s]',
        ),
        ParamFieldInfo(
            "resistRecoverPoint_Madness_Enemy",
            "Enemy Resist Recovery - Madness",
            True,
            float,
            'Enemy resistance value recovery amount_madness [point / s]',
        ),
        ParamFieldInfo(
            "resistCurseItemId",
            "Resist Blight Item ID",
            True,
            int,
            'Abnormal condition_immediate death_immediate death Item ID',
        ),
        ParamFieldInfo(
            "resistCurseItemMaxNum",
            "Resist Blight Item Max Count",
            True,
            int,
            'Abnormal condition_immediate death_maximum number of instant death items',
        ),
        ParamFieldInfo(
            "reserved_123[3]",
            "reserve",
            False,
            pad_field(3),
            '(dummy8)',
        ),
        ParamFieldInfo(
            "resistCurseItemSpEffectBaseId",
            "Resist Blight Item - Base SpEffect ID",
            True,
            int,
            'Abnormal condition_Instant death_Instant death Item possession Special effect base ID',
        ),
        ParamFieldInfo(
            "resistCurseItemLotParamId_map",
            "Resist Blight Item - Map Item Lot ID",
            True,
            int,
            'Abnormal condition_immediate death_immediate death item lottery ID_for map',
        ),
        ParamFieldInfo(
            "reserved41[52]",
            "reserve",
            False,
            pad_field(52),
            '(dummy8)',
        ),
    ],
}
